{"version":3,"file":"833.f067dfea5bde91cd.js","mappings":"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","names":["Observable","subscribe","_classCallCheck","this","_subscribe","_createClass","key","value","operator","observable","source","observerOrNext","error","complete","_this","subscriber","isSubscriber","Subscriber","isObserver","isFunction","next","isSubscription","SafeSubscriber","errorContext","add","call","_trySubscribe","sink","err","promiseCtor","_this2","getPromiseCtor","resolve","reject","unsubscribe","_a","Symbol_observable","_len","arguments","length","operations","Array","_key","pipeFromArray","_this3","x","create","config","Promise","COMPLETE_NOTIFICATION","createNotification","undefined","kind","_Subscription","_inherits","_super","_createSuper","destination","isStopped","_assertThisInitialized","EMPTY_OBSERVER","handleStoppedNotification","nextNotification","_next","errorNotification","_error","_complete","closed","_get","_getPrototypeOf","prototype","Subscription","_bind","Function","bind","fn","thisArg","ConsumerObserver","partialObserver","handleUnhandledError","_Subscriber","_super2","context","Object","captureError","reportUnhandledError","notification","onStoppedNotification","timeoutProvider","noop","defaultErrorHandler","empty","UnsubscriptionError","createErrorClass","errors","message","concat","map","i","toString","join","name","initialTeardown","_parentage","_finalizers","isArray","_step","_iterator","_createForOfIteratorHelper","s","n","done","remove","e","f","initialFinalizer","_step2","_iterator2","finalizer","execFinalizer","_toConsumableArray","push","teardown","_hasParent","_addParent","parent","includes","arrRemove","_removeParent","EMPTY","EMPTY_SUBSCRIPTION","onUnhandledError","useDeprecatedSynchronousErrorHandling","useDeprecatedNextContext","setTimeout","_setTimeout","_x","_x2","apply","handler","timeout","delegate","args","clearTimeout","_clearTimeout","_x3","handle","Symbol","arr","item","index","indexOf","splice","createImpl","ctorFunc","instance","Error","stack","constructor","cb","isRoot","errorThrown","_context","identity","pipe","fns","input","reduce","prev"],"sourceRoot":"webpack:///","sources":["./node_modules/rxjs/dist/esm/internal/Observable.js","./node_modules/rxjs/dist/esm/internal/NotificationFactories.js","./node_modules/rxjs/dist/esm/internal/Subscriber.js","./node_modules/rxjs/dist/esm/internal/Subscription.js","./node_modules/rxjs/dist/esm/internal/util/UnsubscriptionError.js","./node_modules/rxjs/dist/esm/internal/config.js","./node_modules/rxjs/dist/esm/internal/scheduler/timeoutProvider.js","./node_modules/rxjs/dist/esm/internal/symbol/observable.js","./node_modules/rxjs/dist/esm/internal/util/arrRemove.js","./node_modules/rxjs/dist/esm/internal/util/createErrorClass.js","./node_modules/rxjs/dist/esm/internal/util/errorContext.js","./node_modules/rxjs/dist/esm/internal/util/identity.js","./node_modules/rxjs/dist/esm/internal/util/isFunction.js","./node_modules/rxjs/dist/esm/internal/util/noop.js","./node_modules/rxjs/dist/esm/internal/util/pipe.js","./node_modules/rxjs/dist/esm/internal/util/reportUnhandledError.js"],"sourcesContent":["import { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription } from './Subscription';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\nexport class Observable {\n    constructor(subscribe) {\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    lift(operator) {\n        const observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    }\n    subscribe(observerOrNext, error, complete) {\n        const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n        errorContext(() => {\n            const { operator, source } = this;\n            subscriber.add(operator\n                ?\n                    operator.call(subscriber, source)\n                : source\n                    ?\n                        this._subscribe(subscriber)\n                    :\n                        this._trySubscribe(subscriber));\n        });\n        return subscriber;\n    }\n    _trySubscribe(sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.error(err);\n        }\n    }\n    forEach(next, promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            const subscriber = new SafeSubscriber({\n                next: (value) => {\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscriber.unsubscribe();\n                    }\n                },\n                error: reject,\n                complete: resolve,\n            });\n            this.subscribe(subscriber);\n        });\n    }\n    _subscribe(subscriber) {\n        var _a;\n        return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\n    }\n    [Symbol_observable]() {\n        return this;\n    }\n    pipe(...operations) {\n        return pipeFromArray(operations)(this);\n    }\n    toPromise(promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            let value;\n            this.subscribe((x) => (value = x), (err) => reject(err), () => resolve(value));\n        });\n    }\n}\nObservable.create = (subscribe) => {\n    return new Observable(subscribe);\n};\nfunction getPromiseCtor(promiseCtor) {\n    var _a;\n    return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\n}\nfunction isObserver(value) {\n    return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\nfunction isSubscriber(value) {\n    return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n","export const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined))();\nexport function errorNotification(error) {\n    return createNotification('E', undefined, error);\n}\nexport function nextNotification(value) {\n    return createNotification('N', value, undefined);\n}\nexport function createNotification(kind, value, error) {\n    return {\n        kind,\n        value,\n        error,\n    };\n}\n","import { isFunction } from './util/isFunction';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\nexport class Subscriber extends Subscription {\n    constructor(destination) {\n        super();\n        this.isStopped = false;\n        if (destination) {\n            this.destination = destination;\n            if (isSubscription(destination)) {\n                destination.add(this);\n            }\n        }\n        else {\n            this.destination = EMPTY_OBSERVER;\n        }\n    }\n    static create(next, error, complete) {\n        return new SafeSubscriber(next, error, complete);\n    }\n    next(value) {\n        if (this.isStopped) {\n            handleStoppedNotification(nextNotification(value), this);\n        }\n        else {\n            this._next(value);\n        }\n    }\n    error(err) {\n        if (this.isStopped) {\n            handleStoppedNotification(errorNotification(err), this);\n        }\n        else {\n            this.isStopped = true;\n            this._error(err);\n        }\n    }\n    complete() {\n        if (this.isStopped) {\n            handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n        }\n        else {\n            this.isStopped = true;\n            this._complete();\n        }\n    }\n    unsubscribe() {\n        if (!this.closed) {\n            this.isStopped = true;\n            super.unsubscribe();\n            this.destination = null;\n        }\n    }\n    _next(value) {\n        this.destination.next(value);\n    }\n    _error(err) {\n        try {\n            this.destination.error(err);\n        }\n        finally {\n            this.unsubscribe();\n        }\n    }\n    _complete() {\n        try {\n            this.destination.complete();\n        }\n        finally {\n            this.unsubscribe();\n        }\n    }\n}\nconst _bind = Function.prototype.bind;\nfunction bind(fn, thisArg) {\n    return _bind.call(fn, thisArg);\n}\nclass ConsumerObserver {\n    constructor(partialObserver) {\n        this.partialObserver = partialObserver;\n    }\n    next(value) {\n        const { partialObserver } = this;\n        if (partialObserver.next) {\n            try {\n                partialObserver.next(value);\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n    }\n    error(err) {\n        const { partialObserver } = this;\n        if (partialObserver.error) {\n            try {\n                partialObserver.error(err);\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n        else {\n            handleUnhandledError(err);\n        }\n    }\n    complete() {\n        const { partialObserver } = this;\n        if (partialObserver.complete) {\n            try {\n                partialObserver.complete();\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n    }\n}\nexport class SafeSubscriber extends Subscriber {\n    constructor(observerOrNext, error, complete) {\n        super();\n        let partialObserver;\n        if (isFunction(observerOrNext) || !observerOrNext) {\n            partialObserver = {\n                next: (observerOrNext !== null && observerOrNext !== void 0 ? observerOrNext : undefined),\n                error: error !== null && error !== void 0 ? error : undefined,\n                complete: complete !== null && complete !== void 0 ? complete : undefined,\n            };\n        }\n        else {\n            let context;\n            if (this && config.useDeprecatedNextContext) {\n                context = Object.create(observerOrNext);\n                context.unsubscribe = () => this.unsubscribe();\n                partialObserver = {\n                    next: observerOrNext.next && bind(observerOrNext.next, context),\n                    error: observerOrNext.error && bind(observerOrNext.error, context),\n                    complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n                };\n            }\n            else {\n                partialObserver = observerOrNext;\n            }\n        }\n        this.destination = new ConsumerObserver(partialObserver);\n    }\n}\nfunction handleUnhandledError(error) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n        captureError(error);\n    }\n    else {\n        reportUnhandledError(error);\n    }\n}\nfunction defaultErrorHandler(err) {\n    throw err;\n}\nfunction handleStoppedNotification(notification, subscriber) {\n    const { onStoppedNotification } = config;\n    onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\nexport const EMPTY_OBSERVER = {\n    closed: true,\n    next: noop,\n    error: defaultErrorHandler,\n    complete: noop,\n};\n","import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { arrRemove } from './util/arrRemove';\nexport class Subscription {\n    constructor(initialTeardown) {\n        this.initialTeardown = initialTeardown;\n        this.closed = false;\n        this._parentage = null;\n        this._finalizers = null;\n    }\n    unsubscribe() {\n        let errors;\n        if (!this.closed) {\n            this.closed = true;\n            const { _parentage } = this;\n            if (_parentage) {\n                this._parentage = null;\n                if (Array.isArray(_parentage)) {\n                    for (const parent of _parentage) {\n                        parent.remove(this);\n                    }\n                }\n                else {\n                    _parentage.remove(this);\n                }\n            }\n            const { initialTeardown: initialFinalizer } = this;\n            if (isFunction(initialFinalizer)) {\n                try {\n                    initialFinalizer();\n                }\n                catch (e) {\n                    errors = e instanceof UnsubscriptionError ? e.errors : [e];\n                }\n            }\n            const { _finalizers } = this;\n            if (_finalizers) {\n                this._finalizers = null;\n                for (const finalizer of _finalizers) {\n                    try {\n                        execFinalizer(finalizer);\n                    }\n                    catch (err) {\n                        errors = errors !== null && errors !== void 0 ? errors : [];\n                        if (err instanceof UnsubscriptionError) {\n                            errors = [...errors, ...err.errors];\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n            if (errors) {\n                throw new UnsubscriptionError(errors);\n            }\n        }\n    }\n    add(teardown) {\n        var _a;\n        if (teardown && teardown !== this) {\n            if (this.closed) {\n                execFinalizer(teardown);\n            }\n            else {\n                if (teardown instanceof Subscription) {\n                    if (teardown.closed || teardown._hasParent(this)) {\n                        return;\n                    }\n                    teardown._addParent(this);\n                }\n                (this._finalizers = (_a = this._finalizers) !== null && _a !== void 0 ? _a : []).push(teardown);\n            }\n        }\n    }\n    _hasParent(parent) {\n        const { _parentage } = this;\n        return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n    }\n    _addParent(parent) {\n        const { _parentage } = this;\n        this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n    }\n    _removeParent(parent) {\n        const { _parentage } = this;\n        if (_parentage === parent) {\n            this._parentage = null;\n        }\n        else if (Array.isArray(_parentage)) {\n            arrRemove(_parentage, parent);\n        }\n    }\n    remove(teardown) {\n        const { _finalizers } = this;\n        _finalizers && arrRemove(_finalizers, teardown);\n        if (teardown instanceof Subscription) {\n            teardown._removeParent(this);\n        }\n    }\n}\nSubscription.EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n})();\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\nexport function isSubscription(value) {\n    return (value instanceof Subscription ||\n        (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe)));\n}\nfunction execFinalizer(finalizer) {\n    if (isFunction(finalizer)) {\n        finalizer();\n    }\n    else {\n        finalizer.unsubscribe();\n    }\n}\n","import { createErrorClass } from './createErrorClass';\nexport const UnsubscriptionError = createErrorClass((_super) => function UnsubscriptionErrorImpl(errors) {\n    _super(this);\n    this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n});\n","export const config = {\n    onUnhandledError: null,\n    onStoppedNotification: null,\n    Promise: undefined,\n    useDeprecatedSynchronousErrorHandling: false,\n    useDeprecatedNextContext: false,\n};\n","export const timeoutProvider = {\n    setTimeout(handler, timeout, ...args) {\n        const { delegate } = timeoutProvider;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setTimeout) {\n            return delegate.setTimeout(handler, timeout, ...args);\n        }\n        return setTimeout(handler, timeout, ...args);\n    },\n    clearTimeout(handle) {\n        const { delegate } = timeoutProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearTimeout) || clearTimeout)(handle);\n    },\n    delegate: undefined,\n};\n","export const observable = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n","export function arrRemove(arr, item) {\n    if (arr) {\n        const index = arr.indexOf(item);\n        0 <= index && arr.splice(index, 1);\n    }\n}\n","export function createErrorClass(createImpl) {\n    const _super = (instance) => {\n        Error.call(instance);\n        instance.stack = new Error().stack;\n    };\n    const ctorFunc = createImpl(_super);\n    ctorFunc.prototype = Object.create(Error.prototype);\n    ctorFunc.prototype.constructor = ctorFunc;\n    return ctorFunc;\n}\n","import { config } from '../config';\nlet context = null;\nexport function errorContext(cb) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n        const isRoot = !context;\n        if (isRoot) {\n            context = { errorThrown: false, error: null };\n        }\n        cb();\n        if (isRoot) {\n            const { errorThrown, error } = context;\n            context = null;\n            if (errorThrown) {\n                throw error;\n            }\n        }\n    }\n    else {\n        cb();\n    }\n}\nexport function captureError(err) {\n    if (config.useDeprecatedSynchronousErrorHandling && context) {\n        context.errorThrown = true;\n        context.error = err;\n    }\n}\n","export function identity(x) {\n    return x;\n}\n","export function isFunction(value) {\n    return typeof value === 'function';\n}\n","export function noop() { }\n","import { identity } from './identity';\nexport function pipe(...fns) {\n    return pipeFromArray(fns);\n}\nexport function pipeFromArray(fns) {\n    if (fns.length === 0) {\n        return identity;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce((prev, fn) => fn(prev), input);\n    };\n}\n","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\nexport function reportUnhandledError(err) {\n    timeoutProvider.setTimeout(() => {\n        const { onUnhandledError } = config;\n        if (onUnhandledError) {\n            onUnhandledError(err);\n        }\n        else {\n            throw err;\n        }\n    });\n}\n"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]}