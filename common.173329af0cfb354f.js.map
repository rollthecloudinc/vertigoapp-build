{"version":3,"file":"common.173329af0cfb354f.js","mappings":"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","names":["scan","accumulator","seed","operate","scanInternals","arguments","length","hasSeed","emitOnNext","emitBeforeComplete","source","subscriber","hasState","state","index","subscribe","createOperatorSubscriber","value","i","next","complete","nextId$1","CDK_ACCORDION","InjectionToken","CdkAccordion","_classCallCheck","this","_stateChanges","Subject","_openCloseAllActions","id","concat","_multi","_createClass","key","get","set","multi","coerceBooleanProperty","changes","ɵfac","t","ɵdir","i0","type","selectors","inputs","exportAs","features","provide","useExisting","nextId","CdkAccordionItem","accordion","_changeDetectorRef","_expansionDispatcher","_this","_openCloseAllSubscription","Subscription","closed","EventEmitter","opened","destroyed","expandedChange","_expanded","_disabled","_removeUniqueSelectionListener","listen","accordionId","expanded","_subscribeToOpenCloseAllActions","emit","notify","markForCheck","disabled","unsubscribe","_this2","i1","outputs","useValue","undefined","CdkAccordionModule","ɵmod","ɵinj","DIR_DOCUMENT","providedIn","factory","DIR_DOCUMENT_FACTORY","inject","DOCUMENT","RTL_LOCALE_PATTERN","_resolveDirectionality","rawValue","_navigator","toLowerCase","navigator","language","test","Directionality","_document","change","body","dir","documentElement","ɵprov","token","Dir","_dir","_isInitialized","previousValue","_rawDir","hostVars","hostBindings","rf","ctx","BidiModule","VERSION","Version","coerceNumberProperty","fallbackValue","_isNumberValue","Number","isNaN","parseFloat","coerceArray","Array","isArray","coerceCssPixelValue","coerceElement","elementOrRef","ElementRef","nativeElement","coerceStringArray","separator","result","_step","sourceValues","split","_iterator","_createForOfIteratorHelper","s","n","done","trimmedString","trim","push","err","e","f","hasV8BreakIterator","Intl","v8BreakIterator","supportedInputTypes","supportsPassiveEvents","rtlScrollAxisType","scrollBehaviorSupported","shadowDomIsSupported","Platform","_platformId","isBrowser","isPlatformBrowser","document","EDGE","userAgent","TRIDENT","BLINK","window","chrome","CSS","WEBKIT","IOS","FIREFOX","ANDROID","SAFARI","PLATFORM_ID","PlatformModule","candidateInputTypes","getSupportedInputTypes","Set","featureTestInput","createElement","filter","setAttribute","supportsPassiveEventListeners","addEventListener","Object","defineProperty","normalizePassiveListenerOptions","options","capture","supportsScrollBehavior","Element","style","scrollToFunction","prototype","scrollTo","toString","getRtlScrollAxisType","scrollContainer","containerStyle","width","overflow","visibility","pointerEvents","position","content","contentStyle","height","appendChild","scrollLeft","remove","_supportsShadowDom","head","createShadowRoot","attachShadow","_getShadowRoot","element","rootNode","getRootNode","ShadowRoot","_getFocusedElementPierceShadowDom","activeElement","shadowRoot","newActiveElement","_getEventTarget","event","composedPath","target","_isTestEnvironment","__karma__","jasmine","jest","Mocha","_MatBadgeBase","mixinDisabled","_class","BADGE_CONTENT_CLASS","MatBadge","_MatBadgeBase2","_inherits","_super","_createSuper","_ngZone","_elementRef","_ariaDescriber","_renderer","_animationMode","call","_color","_overlap","size","_id","_interactivityChecker","InteractivityChecker","_setColor","val","_content","newContent","_updateRenderedContent","_description","newDescription","_updateDescription","_hidden","indexOf","_badgeElement","_clearExistingBadges","_createBadgeElement","_this$_inlineBadgeDes","destroyNode","_inlineBadgeDescription","removeDescription","description","isFocusable","ignoreVisibility","badgeElement","activeClass","classList","add","requestAnimationFrame","runOutsideAngular","newContentNormalized","textContent","_isHostInteractive","_removeInlineDescription","describe","_updateInlineDescription","_this$_badgeElement","_this$_inlineBadgeDes2","colorPalette","badges","querySelectorAll","_i","_Array$from","from","ANIMATION_MODULE_TYPE","hostAttrs","overlap","isAbove","isAfter","hidden","color","MatBadgeModule","imports","A11yModule","MatCommonModule","MatDivider","_vertical","_inset","ɵcmp","vertical","inset","decls","vars","template","styles","encapsulation","changeDetection","MatDividerModule","_c0","_c1","MatLegacyOption_mat_pseudo_checkbox_0_Template","ctx_r0","selected","MatLegacyOption_span_4_Template","ctx_r2","group","label","_c2","MatLegacyOptgroup","_MatOptgroupBase2","apply","_MatOptgroupBase","ɵMatLegacyOptgroup_BaseFactory","_inert","_labelId","MAT_OPTGROUP","ngContentSelectors","consts","MatLegacyOption","_MatOptionBase2","_super2","changeDetectorRef","parent","_MatOptionBase","MAT_OPTION_PARENT_COMPONENT","_selectViaInteraction","$event","_handleKeydown","_getTabIndex","multiple","active","_getHostElement","disableRipple","dependencies","i2","MatLegacyOptionModule","MatRippleModule","CommonModule","MatPseudoCheckboxModule","MatLegacyInput","_MatInput","_legacyFormField","MAT_LEGACY_FORM_FIELD","optional","_formField$_hasLabel","formField","appearance","_hasLabel","placeholder","MatInput","ɵMatLegacyInput_BaseFactory","_isServer","_isInlineSelect","MatLegacyFormFieldControl","MatLegacyInputModule","providers","ErrorStateMatcher","TextFieldModule","MatLegacyFormFieldModule","MatLegacyMenu_ng_template_0_Template","_r2","ctx_r1","ctx_r3","ctx_r4","_onAnimationStart","ctx_r5","_onAnimationDone","panelId","_classList","_panelAnimationState","ariaLabel","ariaLabelledby","ariaDescribedby","MatLegacyMenuItem__svg_svg_2_Template","MatLegacyMenu","_MatMenuBase2","elementRef","ngZone","defaultOptions","_elevationPrefix","_baseElevation","_MatMenuBase","MAT_MENU_DEFAULT_OPTIONS","MAT_MENU_PANEL","data","animation","matMenuAnimations","MatLegacyMenuItem","_MatMenuItem","MatMenuItem","ɵMatLegacyMenuItem_BaseFactory","role","_highlighted","_triggersSubmenu","attrs","MatLegacyMenuTrigger","_MatMenuTriggerBase2","_super3","_MatMenuTriggerBase","ɵMatLegacyMenuTrigger_BaseFactory","MatLegacyMenuContent","_MatMenuContentBase2","_super4","_MatMenuContentBase","ɵMatLegacyMenuContent_BaseFactory","MAT_MENU_CONTENT","MatLegacyMenuModule","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","OverlayModule","CdkScrollableModule","MatLegacyPaginator_div_2_mat_form_field_3_mat_option_2_Template","pageSizeOption_r6","$implicit","MatLegacyPaginator_div_2_mat_form_field_3_Template","_r8","ctx_r7","_changePageSize","_formFieldAppearance","pageSize","selectConfig","panelClass","disableOptionCentering","_intl","itemsPerPageLabel","_displayedPageSizeOptions","MatLegacyPaginator_div_2_div_4_Template","MatLegacyPaginator_div_2_Template","MatLegacyPaginator_button_6_Template","_r10","ctx_r9","firstPage","firstPageLabel","_previousButtonsDisabled","MatLegacyPaginator_button_13_Template","_r12","ctx_r11","lastPage","lastPageLabel","_nextButtonsDisabled","MAT_LEGACY_PAGINATOR_DEFAULT_OPTIONS","MatLegacyPaginator","_MatPaginatorBase2","intl","defaults","formFieldAppearance","_MatPaginatorBase","previousPage","nextPage","hidePageSize","getRangeLabel","pageIndex","showFirstLastButtons","previousPageLabel","nextPageLabel","i3","i4","i5","i6","i7","MatLegacyPaginatorModule","MAT_PAGINATOR_INTL_PROVIDER","MatLegacyButtonModule","MatLegacySelectModule","MatLegacyTooltipModule","LegacySimpleSnackBar_div_2_Template","action","MatLegacySnackBarContainer_ng_template_1_Template","LegacySimpleSnackBar","snackBarRef","dismissWithAction","MAT_SNACK_BAR_DATA","message","hasAction","MatLegacySnackBarContainer","_MatSnackBarContainer","_get","_getPrototypeOf","snackBarConfig","horizontalPosition","verticalPosition","_MatSnackBarContainerBase","ɵMatLegacySnackBarContainer_BaseFactory","onAnimationEnd","_animationState","_live","_role","_liveElementId","i1$1","matSnackBarAnimations","MatLegacySnackBarModule","PortalModule","MatLegacySnackBar","_MatSnackBarBase2","overlay","live","injector","breakpointObserver","parentSnackBar","defaultConfig","simpleSnackBarComponent","snackBarContainerComponent","handsetCssClass","_MatSnackBarBase","i1$2","i2$1","i3$1","MAT_SNACK_BAR_DEFAULT_OPTIONS","MatLegacyTooltip","_MatTooltipBase2","scrollDispatcher","viewContainerRef","platform","ariaDescriber","focusMonitor","scrollStrategy","_tooltipComponent","LegacyTooltipComponent","_MatTooltipBase","MAT_TOOLTIP_SCROLL_STRATEGY","MAT_TOOLTIP_DEFAULT_OPTIONS","_TooltipComponentBase2","animationMode","_showAnimation","_hideAnimation","_isHandset","observe","Breakpoints","_TooltipComponentBase","viewQuery","_t","_tooltip","first","_handleMouseLeave","isVisible","tmp_0_0","_handleAnimationEnd","matches","tooltipClass","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","matLegacyTooltipAnimations","tooltipState","trigger","opacity","transform","transition","animate","keyframes","offset","MatProgressSpinner_ng_template_0_Template","_viewBox","_strokeCircumference","_circleStrokeWidth","_circleRadius","_MatProgressSpinnerBase","mixinColor","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","diameter","BASE_SIZE","MatProgressSpinner","_MatProgressSpinnerBa","mode","nodeName","_value","_diameter","_noopAnimations","_forceAnimations","defaultColor","strokeWidth","v","Math","max","min","_this$_strokeWidth","_strokeWidth","viewBox","PI","_determinateCircle","_r0","_strokeDashOffset","MatSpinner","MatProgressSpinnerModule","_MatToolbarBase","MatToolbarRow","MatToolbar","_MatToolbarBase2","_platform","_checkToolbarMixedModes","_toolbarRows","contentQueries","dirIndex","throwToolbarMixedModesError","Error","MatToolbarModule","ContentModule","ContentPlugin","_Plugin","fileTypes","name","handler","selectionComponent","renderComponent","editorComponent","Plugin","ContentBinding","ContentInstance","settings","pluginName","map","AttributeValue","ContentPluginEditorOptions","fullscreen","CONTENT_PLUGIN","ContentPluginManager","_BasePluginManager","pcm","moduleLoader","of","PluginDef","BasePluginManager","PluginModule","UtilsModule","PluginConfigurationManager","configs","cfg","ConfigDiscovery","pluginDef","ids","getConfigs","len","loadModules$","_loop","len2","modules","_loop2","j","plugins","has","some","findIndex","p","loadModule","module","forkJoin","pipe","pluginInstances","Map","discoveryPipeline","discovery","d","plugin","newPlugins","switchMap","def","loadPlugins","_this3","PluginConfig","m","PluginConfigModule","title","_toConsumableArray","instance","Constructor","TypeError","_construct","Parent","args","Class","_isNativeReflectConstruct_js__WEBPACK_IMPORTED_MODULE_0__","Z","Reflect","construct","bind","a","Function","_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_1__","_defineProperties","props","descriptor","enumerable","configurable","writable","_toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__","protoProps","staticProps","_toArray","arr","_arrayWithHoles_js__WEBPACK_IMPORTED_MODULE_0__","_iterableToArray_js__WEBPACK_IMPORTED_MODULE_1__","_unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__","_nonIterableRest_js__WEBPACK_IMPORTED_MODULE_3__","_toPropertyKey","arg","_toPrimitive","input","hint","esm_typeof","prim","Symbol","toPrimitive","res","String","_typeof","obj","iterator","constructor","_wrapNativeSuper","_cache","_isNativeFunction","fn","Wrapper","getPrototypeOf","create","setPrototypeOf"],"sourceRoot":"webpack:///","sources":["./node_modules/rxjs/dist/esm/internal/operators/scan.js","./node_modules/rxjs/dist/esm/internal/operators/scanInternals.js","./node_modules/@angular/cdk/fesm2022/accordion.mjs","./node_modules/@angular/cdk/fesm2022/bidi.mjs","./node_modules/@angular/cdk/fesm2022/cdk.mjs","./node_modules/@angular/cdk/fesm2022/coercion.mjs","./node_modules/@angular/cdk/fesm2022/platform.mjs","./node_modules/@angular/material/fesm2022/badge.mjs","./node_modules/@angular/material/fesm2022/divider.mjs","./node_modules/@angular/material/fesm2022/legacy-core.mjs","./node_modules/@angular/material/fesm2022/legacy-input.mjs","./node_modules/@angular/material/fesm2022/legacy-menu.mjs","./node_modules/@angular/material/fesm2022/legacy-paginator.mjs","./node_modules/@angular/material/fesm2022/legacy-snack-bar.mjs","./node_modules/@angular/material/fesm2022/legacy-tooltip.mjs","./node_modules/@angular/material/fesm2022/progress-spinner.mjs","./node_modules/@angular/material/fesm2022/toolbar.mjs","./node_modules/@rollthecloudinc/content/fesm2022/rollthecloudinc-content.mjs","./node_modules/@rollthecloudinc/plugin/fesm2022/rollthecloudinc-plugin.mjs","./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","./node_modules/@babel/runtime/helpers/esm/construct.js","./node_modules/@babel/runtime/helpers/esm/createClass.js","./node_modules/@babel/runtime/helpers/esm/toArray.js","./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","./node_modules/@babel/runtime/helpers/esm/typeof.js","./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js"],"sourcesContent":["import { operate } from '../util/lift';\nimport { scanInternals } from './scanInternals';\nexport function scan(accumulator, seed) {\n    return operate(scanInternals(accumulator, seed, arguments.length >= 2, true));\n}\n","import { createOperatorSubscriber } from './OperatorSubscriber';\nexport function scanInternals(accumulator, seed, hasSeed, emitOnNext, emitBeforeComplete) {\n    return (source, subscriber) => {\n        let hasState = hasSeed;\n        let state = seed;\n        let index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            const i = index++;\n            state = hasState\n                ?\n                    accumulator(state, value, i)\n                :\n                    ((hasState = true), value);\n            emitOnNext && subscriber.next(state);\n        }, emitBeforeComplete &&\n            (() => {\n                hasState && subscriber.next(state);\n                subscriber.complete();\n            })));\n    };\n}\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Input, EventEmitter, Optional, Inject, SkipSelf, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/collections';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n\n/** Used to generate unique ID for each accordion. */\nlet nextId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_ACCORDION = new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /** Emits when the state of the accordion changes */\n        this._stateChanges = new Subject();\n        /** Stream that emits true/false when openAll/closeAll is triggered. */\n        this._openCloseAllActions = new Subject();\n        /** A readonly id value to use for unique selection coordination. */\n        this.id = `cdk-accordion-${nextId$1++}`;\n        this._multi = false;\n    }\n    /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n    get multi() {\n        return this._multi;\n    }\n    set multi(multi) {\n        this._multi = coerceBooleanProperty(multi);\n    }\n    /** Opens all enabled accordion items in an accordion where multi is enabled. */\n    openAll() {\n        if (this._multi) {\n            this._openCloseAllActions.next(true);\n        }\n    }\n    /** Closes all enabled accordion items. */\n    closeAll() {\n        this._openCloseAllActions.next(false);\n    }\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n        this._openCloseAllActions.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkAccordion, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkAccordion, selector: \"cdk-accordion, [cdkAccordion]\", inputs: { multi: \"multi\" }, providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }], exportAs: [\"cdkAccordion\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkAccordion, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-accordion, [cdkAccordion]',\n                    exportAs: 'cdkAccordion',\n                    providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }],\n                }]\n        }], propDecorators: { multi: [{\n                type: Input\n            }] } });\n\n/** Used to generate unique ID for each accordion item. */\nlet nextId = 0;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    /** Whether the AccordionItem is expanded. */\n    get expanded() {\n        return this._expanded;\n    }\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the AccordionItem is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(disabled) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /** Subscription to openAll/closeAll events. */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /** Event emitted every time the AccordionItem is closed. */\n        this.closed = new EventEmitter();\n        /** Event emitted every time the AccordionItem is opened. */\n        this.opened = new EventEmitter();\n        /** Event emitted when the AccordionItem is destroyed. */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * @docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /** The unique AccordionItem id. */\n        this.id = `cdk-accordion-child-${nextId++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /** Unregister function for _expansionDispatcher. */\n        this._removeUniqueSelectionListener = () => { };\n        this._removeUniqueSelectionListener = _expansionDispatcher.listen((id, accordionId) => {\n            if (this.accordion &&\n                !this.accordion.multi &&\n                this.accordion.id === accordionId &&\n                this.id !== id) {\n                this.expanded = false;\n            }\n        });\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /** Emits an event for the accordion item being destroyed. */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /** Toggles the expanded state of the accordion item. */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /** Sets the expanded state of the accordion item to false. */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /** Sets the expanded state of the accordion item to true. */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe(expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkAccordionItem, deps: [{ token: CDK_ACCORDION, optional: true, skipSelf: true }, { token: i0.ChangeDetectorRef }, { token: i1.UniqueSelectionDispatcher }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkAccordionItem, selector: \"cdk-accordion-item, [cdkAccordionItem]\", inputs: { expanded: \"expanded\", disabled: \"disabled\" }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, providers: [\n            // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n            // registering to the same accordion.\n            { provide: CDK_ACCORDION, useValue: undefined },\n        ], exportAs: [\"cdkAccordionItem\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkAccordionItem, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                    exportAs: 'cdkAccordionItem',\n                    providers: [\n                        // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n                        // registering to the same accordion.\n                        { provide: CDK_ACCORDION, useValue: undefined },\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: CdkAccordion, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_ACCORDION]\n                }, {\n                    type: SkipSelf\n                }] }, { type: i0.ChangeDetectorRef }, { type: i1.UniqueSelectionDispatcher }]; }, propDecorators: { closed: [{\n                type: Output\n            }], opened: [{\n                type: Output\n            }], destroyed: [{\n                type: Output\n            }], expandedChange: [{\n                type: Output\n            }], expanded: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\nclass CdkAccordionModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkAccordionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkAccordionModule, declarations: [CdkAccordion, CdkAccordionItem], exports: [CdkAccordion, CdkAccordionItem] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkAccordionModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkAccordionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [CdkAccordion, CdkAccordionItem],\n                    declarations: [CdkAccordion, CdkAccordionItem],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-browser because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/** @docs-private */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\n/** Resolves a string value to a specific direction. */\nfunction _resolveDirectionality(rawValue) {\n    const value = rawValue?.toLowerCase() || '';\n    if (value === 'auto' && typeof navigator !== 'undefined' && navigator?.language) {\n        return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\n    }\n    return value === 'rtl' ? 'rtl' : 'ltr';\n}\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    constructor(_document) {\n        /** The current 'ltr' or 'rtl' value. */\n        this.value = 'ltr';\n        /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n        this.change = new EventEmitter();\n        if (_document) {\n            const bodyDir = _document.body ? _document.body.dir : null;\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            this.value = _resolveDirectionality(bodyDir || htmlDir || 'ltr');\n        }\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: Directionality, deps: [{ token: DIR_DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: Directionality, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: Directionality, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DIR_DOCUMENT]\n                }] }]; } });\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /** Normalized direction that accounts for invalid/unsupported values. */\n        this._dir = 'ltr';\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Event emitted when the direction changes. */\n        this.change = new EventEmitter();\n    }\n    /** @docs-private */\n    get dir() {\n        return this._dir;\n    }\n    set dir(value) {\n        const previousValue = this._dir;\n        // Note: `_resolveDirectionality` resolves the language based on the browser's language,\n        // whereas the browser does it based on the content of the element. Since doing so based\n        // on the content can be expensive, for now we're doing the simpler matching.\n        this._dir = _resolveDirectionality(value);\n        this._rawDir = value;\n        if (previousValue !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /** Current layout direction of the element. */\n    get value() {\n        return this.dir;\n    }\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        this.change.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: Dir, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: Dir, selector: \"[dir]\", inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, host: { properties: { \"attr.dir\": \"_rawDir\" } }, providers: [{ provide: Directionality, useExisting: Dir }], exportAs: [\"dir\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: Dir, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[dir]',\n                    providers: [{ provide: Directionality, useExisting: Dir }],\n                    host: { '[attr.dir]': '_rawDir' },\n                    exportAs: 'dir',\n                }]\n        }], propDecorators: { change: [{\n                type: Output,\n                args: ['dirChange']\n            }], dir: [{\n                type: Input\n            }] } });\n\nclass BidiModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: BidiModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: BidiModule, declarations: [Dir], exports: [Dir] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: BidiModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: BidiModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [Dir],\n                    declarations: [Dir],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality };\n","import { Version } from '@angular/core';\n\n/** Current version of the Angular Component Development Kit. */\nconst VERSION = new Version('16.0.4');\n\nexport { VERSION };\n","import { ElementRef } from '@angular/core';\n\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * Coerces a value to an array of trimmed non-empty strings.\n * Any input that is not an array, `null` or `undefined` will be turned into a string\n * via `toString()` and subsequently split with the given separator.\n * `null` and `undefined` will result in an empty array.\n * This results in the following outcomes:\n * - `null` -&gt; `[]`\n * - `[null]` -&gt; `[\"null\"]`\n * - `[\"a\", \"b \", \" \"]` -&gt; `[\"a\", \"b\"]`\n * - `[1, [2, 3]]` -&gt; `[\"1\", \"2,3\"]`\n * - `[{ a: 0 }]` -&gt; `[\"[object Object]\"]`\n * - `{ a: 0 }` -&gt; `[\"[object\", \"Object]\"]`\n *\n * Useful for defining CSS classes or table columns.\n * @param value the value to coerce into an array of strings\n * @param separator split-separator if value isn't an array\n */\nfunction coerceStringArray(value, separator = /\\s+/) {\n    const result = [];\n    if (value != null) {\n        const sourceValues = Array.isArray(value) ? value : `${value}`.split(separator);\n        for (const sourceValue of sourceValues) {\n            const trimmedString = `${sourceValue}`.trim();\n            if (trimmedString) {\n                result.push(trimmedString);\n            }\n        }\n    }\n    return result;\n}\n\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty, coerceStringArray };\n","import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;\n}\ncatch {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        // We want to use the Angular platform check because if the Document is shimmed\n        // without the navigator, the following checks will fail. This is preferred because\n        // sometimes the Document may be shimmed without the user's knowledge or intention\n        /** Whether the Angular application is being rendered in the browser. */\n        this.isBrowser = this._platformId\n            ? isPlatformBrowser(this._platformId)\n            : typeof document === 'object' && !!document;\n        /** Whether the current browser is Microsoft Edge. */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /** Whether the current rendering engine is Microsoft Trident. */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        /** Whether the current rendering engine is Blink. */\n        this.BLINK = this.isBrowser &&\n            !!(window.chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' &&\n            !this.EDGE &&\n            !this.TRIDENT;\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        /** Whether the current rendering engine is WebKit. */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) &&\n            !this.BLINK &&\n            !this.EDGE &&\n            !this.TRIDENT;\n        /** Whether the current platform is Apple iOS. */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        /** Whether the current browser is Firefox. */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /** Whether the current platform is Android. */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        /** Whether the current browser is Safari. */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: Platform, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: Platform, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: Platform, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\n\nclass PlatformModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: PlatformModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: PlatformModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: PlatformModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: PlatformModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes;\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/** @returns The input types supported by this browser. */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    }));\n    return supportedInputTypes;\n}\n\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n                get: () => (supportsPassiveEvents = true),\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n    if (scrollBehaviorSupported == null) {\n        // If we're not in the browser, it can't be supported. Also check for `Element`, because\n        // some projects stub out the global `document` during SSR which can throw us off.\n        if (typeof document !== 'object' || !document || typeof Element !== 'function' || !Element) {\n            scrollBehaviorSupported = false;\n            return scrollBehaviorSupported;\n        }\n        // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n        if ('scrollBehavior' in document.documentElement.style) {\n            scrollBehaviorSupported = true;\n        }\n        else {\n            // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n            // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n            const scrollToFunction = Element.prototype.scrollTo;\n            if (scrollToFunction) {\n                // We can detect if the function has been polyfilled by calling `toString` on it. Native\n                // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n                // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n                // polyfilled functions as supporting scroll behavior.\n                scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n            }\n            else {\n                scrollBehaviorSupported = false;\n            }\n        }\n    }\n    return scrollBehaviorSupported;\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return 0 /* RtlScrollAxisType.NORMAL */;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        const scrollContainer = document.createElement('div');\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        const content = document.createElement('div');\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = 0 /* RtlScrollAxisType.NORMAL */;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? 1 /* RtlScrollAxisType.NEGATED */ : 2 /* RtlScrollAxisType.INVERTED */;\n        }\n        scrollContainer.remove();\n    }\n    return rtlScrollAxisType;\n}\n\nlet shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n    if (_supportsShadowDom()) {\n        const rootNode = element.getRootNode ? element.getRootNode() : null;\n        // Note that this should be caught by `_supportsShadowDom`, but some\n        // teams have been able to hit this code path on unsupported browsers.\n        if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n            return rootNode;\n        }\n    }\n    return null;\n}\n/**\n * Gets the currently-focused element on the page while\n * also piercing through Shadow DOM boundaries.\n */\nfunction _getFocusedElementPierceShadowDom() {\n    let activeElement = typeof document !== 'undefined' && document\n        ? document.activeElement\n        : null;\n    while (activeElement && activeElement.shadowRoot) {\n        const newActiveElement = activeElement.shadowRoot.activeElement;\n        if (newActiveElement === activeElement) {\n            break;\n        }\n        else {\n            activeElement = newActiveElement;\n        }\n    }\n    return activeElement;\n}\n/** Gets the target of an event while accounting for Shadow DOM. */\nfunction _getEventTarget(event) {\n    // If an event is bound outside the Shadow DOM, the `event.target` will\n    // point to the shadow root so we have to use `composedPath` instead.\n    return (event.composedPath ? event.composedPath()[0] : event.target);\n}\n\n/** Gets whether the code is currently running in a test environment. */\nfunction _isTestEnvironment() {\n    // We can't use `declare const` because it causes conflicts inside Google with the real typings\n    // for these symbols and we can't read them off the global object, because they don't appear to\n    // be attached there for some runners like Jest.\n    // (see: https://github.com/angular/components/issues/23365#issuecomment-938146643)\n    return (\n    // @ts-ignore\n    (typeof __karma__ !== 'undefined' && !!__karma__) ||\n        // @ts-ignore\n        (typeof jasmine !== 'undefined' && !!jasmine) ||\n        // @ts-ignore\n        (typeof jest !== 'undefined' && !!jest) ||\n        // @ts-ignore\n        (typeof Mocha !== 'undefined' && !!Mocha));\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, _getEventTarget, _getFocusedElementPierceShadowDom, _getShadowRoot, _isTestEnvironment, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n","import * as i0 from '@angular/core';\nimport { inject, Directive, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { InteractivityChecker, A11yModule } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOCUMENT } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\nlet nextId = 0;\n// Boilerplate for applying mixins to MatBadge.\n/** @docs-private */\nconst _MatBadgeBase = mixinDisabled(class {\n});\nconst BADGE_CONTENT_CLASS = 'mat-badge-content';\n/** Directive to display a text badge. */\nclass MatBadge extends _MatBadgeBase {\n    /** The color of the badge. Can be `primary`, `accent`, or `warn`. */\n    get color() {\n        return this._color;\n    }\n    set color(value) {\n        this._setColor(value);\n        this._color = value;\n    }\n    /** Whether the badge should overlap its contents or not */\n    get overlap() {\n        return this._overlap;\n    }\n    set overlap(val) {\n        this._overlap = coerceBooleanProperty(val);\n    }\n    /** The content for the badge */\n    get content() {\n        return this._content;\n    }\n    set content(newContent) {\n        this._updateRenderedContent(newContent);\n    }\n    /** Message used to describe the decorated element via aria-describedby */\n    get description() {\n        return this._description;\n    }\n    set description(newDescription) {\n        this._updateDescription(newDescription);\n    }\n    /** Whether the badge is hidden. */\n    get hidden() {\n        return this._hidden;\n    }\n    set hidden(val) {\n        this._hidden = coerceBooleanProperty(val);\n    }\n    constructor(_ngZone, _elementRef, _ariaDescriber, _renderer, _animationMode) {\n        super();\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        this._renderer = _renderer;\n        this._animationMode = _animationMode;\n        this._color = 'primary';\n        this._overlap = true;\n        /**\n         * Position the badge should reside.\n         * Accepts any combination of 'above'|'below' and 'before'|'after'\n         */\n        this.position = 'above after';\n        /** Size of the badge. Can be 'small', 'medium', or 'large'. */\n        this.size = 'medium';\n        /** Unique id for the badge */\n        this._id = nextId++;\n        /** Whether the OnInit lifecycle hook has run yet */\n        this._isInitialized = false;\n        /** InteractivityChecker to determine if the badge host is focusable. */\n        this._interactivityChecker = inject(InteractivityChecker);\n        this._document = inject(DOCUMENT);\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            const nativeElement = _elementRef.nativeElement;\n            if (nativeElement.nodeType !== nativeElement.ELEMENT_NODE) {\n                throw Error('matBadge must be attached to an element node.');\n            }\n        }\n    }\n    /** Whether the badge is above the host or not */\n    isAbove() {\n        return this.position.indexOf('below') === -1;\n    }\n    /** Whether the badge is after the host or not */\n    isAfter() {\n        return this.position.indexOf('before') === -1;\n    }\n    /**\n     * Gets the element into which the badge's content is being rendered. Undefined if the element\n     * hasn't been created (e.g. if the badge doesn't have content).\n     */\n    getBadgeElement() {\n        return this._badgeElement;\n    }\n    ngOnInit() {\n        // We may have server-side rendered badge that we need to clear.\n        // We need to do this in ngOnInit because the full content of the component\n        // on which the badge is attached won't necessarily be in the DOM until this point.\n        this._clearExistingBadges();\n        if (this.content && !this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n            this._updateRenderedContent(this.content);\n        }\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        // ViewEngine only: when creating a badge through the Renderer, Angular remembers its index.\n        // We have to destroy it ourselves, otherwise it'll be retained in memory.\n        if (this._renderer.destroyNode) {\n            this._renderer.destroyNode(this._badgeElement);\n            this._inlineBadgeDescription?.remove();\n        }\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.description);\n    }\n    /** Gets whether the badge's host element is interactive. */\n    _isHostInteractive() {\n        // Ignore visibility since it requires an expensive style caluclation.\n        return this._interactivityChecker.isFocusable(this._elementRef.nativeElement, {\n            ignoreVisibility: true,\n        });\n    }\n    /** Creates the badge element */\n    _createBadgeElement() {\n        const badgeElement = this._renderer.createElement('span');\n        const activeClass = 'mat-badge-active';\n        badgeElement.setAttribute('id', `mat-badge-content-${this._id}`);\n        // The badge is aria-hidden because we don't want it to appear in the page's navigation\n        // flow. Instead, we use the badge to describe the decorated element with aria-describedby.\n        badgeElement.setAttribute('aria-hidden', 'true');\n        badgeElement.classList.add(BADGE_CONTENT_CLASS);\n        if (this._animationMode === 'NoopAnimations') {\n            badgeElement.classList.add('_mat-animation-noopable');\n        }\n        this._elementRef.nativeElement.appendChild(badgeElement);\n        // animate in after insertion\n        if (typeof requestAnimationFrame === 'function' && this._animationMode !== 'NoopAnimations') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    badgeElement.classList.add(activeClass);\n                });\n            });\n        }\n        else {\n            badgeElement.classList.add(activeClass);\n        }\n        return badgeElement;\n    }\n    /** Update the text content of the badge element in the DOM, creating the element if necessary. */\n    _updateRenderedContent(newContent) {\n        const newContentNormalized = `${newContent ?? ''}`.trim();\n        // Don't create the badge element if the directive isn't initialized because we want to\n        // append the badge element to the *end* of the host element's content for backwards\n        // compatibility.\n        if (this._isInitialized && newContentNormalized && !this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n        }\n        if (this._badgeElement) {\n            this._badgeElement.textContent = newContentNormalized;\n        }\n        this._content = newContentNormalized;\n    }\n    /** Updates the host element's aria description via AriaDescriber. */\n    _updateDescription(newDescription) {\n        // Always start by removing the aria-describedby; we will add a new one if necessary.\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.description);\n        // NOTE: We only check whether the host is interactive here, which happens during\n        // when then badge content changes. It is possible that the host changes\n        // interactivity status separate from one of these. However, watching the interactivity\n        // status of the host would require a `MutationObserver`, which is likely more code + overhead\n        // than it's worth; from usages inside Google, we see that the vats majority of badges either\n        // never change interactivity, or also set `matBadgeHidden` based on the same condition.\n        if (!newDescription || this._isHostInteractive()) {\n            this._removeInlineDescription();\n        }\n        this._description = newDescription;\n        // We don't add `aria-describedby` for non-interactive hosts elements because we\n        // instead insert the description inline.\n        if (this._isHostInteractive()) {\n            this._ariaDescriber.describe(this._elementRef.nativeElement, newDescription);\n        }\n        else {\n            this._updateInlineDescription();\n        }\n    }\n    _updateInlineDescription() {\n        // Create the inline description element if it doesn't exist\n        if (!this._inlineBadgeDescription) {\n            this._inlineBadgeDescription = this._document.createElement('span');\n            this._inlineBadgeDescription.classList.add('cdk-visually-hidden');\n        }\n        this._inlineBadgeDescription.textContent = this.description;\n        this._badgeElement?.appendChild(this._inlineBadgeDescription);\n    }\n    _removeInlineDescription() {\n        this._inlineBadgeDescription?.remove();\n        this._inlineBadgeDescription = undefined;\n    }\n    /** Adds css theme class given the color to the component host */\n    _setColor(colorPalette) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-badge-${this._color}`);\n        if (colorPalette) {\n            classList.add(`mat-badge-${colorPalette}`);\n        }\n    }\n    /** Clears any existing badges that might be left over from server-side rendering. */\n    _clearExistingBadges() {\n        // Only check direct children of this host element in order to avoid deleting\n        // any badges that might exist in descendant elements.\n        const badges = this._elementRef.nativeElement.querySelectorAll(`:scope > .${BADGE_CONTENT_CLASS}`);\n        for (const badgeElement of Array.from(badges)) {\n            if (badgeElement !== this._badgeElement) {\n                badgeElement.remove();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatBadge, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i1.AriaDescriber }, { token: i0.Renderer2 }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatBadge, selector: \"[matBadge]\", inputs: { disabled: [\"matBadgeDisabled\", \"disabled\"], color: [\"matBadgeColor\", \"color\"], overlap: [\"matBadgeOverlap\", \"overlap\"], position: [\"matBadgePosition\", \"position\"], content: [\"matBadge\", \"content\"], description: [\"matBadgeDescription\", \"description\"], size: [\"matBadgeSize\", \"size\"], hidden: [\"matBadgeHidden\", \"hidden\"] }, host: { properties: { \"class.mat-badge-overlap\": \"overlap\", \"class.mat-badge-above\": \"isAbove()\", \"class.mat-badge-below\": \"!isAbove()\", \"class.mat-badge-before\": \"!isAfter()\", \"class.mat-badge-after\": \"isAfter()\", \"class.mat-badge-small\": \"size === \\\"small\\\"\", \"class.mat-badge-medium\": \"size === \\\"medium\\\"\", \"class.mat-badge-large\": \"size === \\\"large\\\"\", \"class.mat-badge-hidden\": \"hidden || !content\", \"class.mat-badge-disabled\": \"disabled\" }, classAttribute: \"mat-badge\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatBadge, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matBadge]',\n                    inputs: ['disabled: matBadgeDisabled'],\n                    host: {\n                        'class': 'mat-badge',\n                        '[class.mat-badge-overlap]': 'overlap',\n                        '[class.mat-badge-above]': 'isAbove()',\n                        '[class.mat-badge-below]': '!isAbove()',\n                        '[class.mat-badge-before]': '!isAfter()',\n                        '[class.mat-badge-after]': 'isAfter()',\n                        '[class.mat-badge-small]': 'size === \"small\"',\n                        '[class.mat-badge-medium]': 'size === \"medium\"',\n                        '[class.mat-badge-large]': 'size === \"large\"',\n                        '[class.mat-badge-hidden]': 'hidden || !content',\n                        '[class.mat-badge-disabled]': 'disabled',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i1.AriaDescriber }, { type: i0.Renderer2 }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { color: [{\n                type: Input,\n                args: ['matBadgeColor']\n            }], overlap: [{\n                type: Input,\n                args: ['matBadgeOverlap']\n            }], position: [{\n                type: Input,\n                args: ['matBadgePosition']\n            }], content: [{\n                type: Input,\n                args: ['matBadge']\n            }], description: [{\n                type: Input,\n                args: ['matBadgeDescription']\n            }], size: [{\n                type: Input,\n                args: ['matBadgeSize']\n            }], hidden: [{\n                type: Input,\n                args: ['matBadgeHidden']\n            }] } });\n\nclass MatBadgeModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatBadgeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatBadgeModule, declarations: [MatBadge], imports: [A11yModule, MatCommonModule], exports: [MatBadge, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatBadgeModule, imports: [A11yModule, MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatBadgeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [A11yModule, MatCommonModule],\n                    exports: [MatBadge, MatCommonModule],\n                    declarations: [MatBadge],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatBadge, MatBadgeModule };\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /** Whether the divider is vertically aligned. */\n    get vertical() {\n        return this._vertical;\n    }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** Whether the divider is an inset divider. */\n    get inset() {\n        return this._inset;\n    }\n    set inset(value) {\n        this._inset = coerceBooleanProperty(value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatDivider, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatDivider, selector: \"mat-divider\", inputs: { vertical: \"vertical\", inset: \"inset\" }, host: { attributes: { \"role\": \"separator\" }, properties: { \"attr.aria-orientation\": \"vertical ? \\\"vertical\\\" : \\\"horizontal\\\"\", \"class.mat-divider-vertical\": \"vertical\", \"class.mat-divider-horizontal\": \"!vertical\", \"class.mat-divider-inset\": \"inset\" }, classAttribute: \"mat-divider\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatDivider, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-divider', host: {\n                        'role': 'separator',\n                        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                        '[class.mat-divider-vertical]': 'vertical',\n                        '[class.mat-divider-horizontal]': '!vertical',\n                        '[class.mat-divider-inset]': 'inset',\n                        'class': 'mat-divider',\n                    }, template: '', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"] }]\n        }], propDecorators: { vertical: [{\n                type: Input\n            }], inset: [{\n                type: Input\n            }] } });\n\nclass MatDividerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatDividerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatDividerModule, declarations: [MatDivider], imports: [MatCommonModule], exports: [MatDivider, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatDividerModule, imports: [MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatDividerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatDivider, MatCommonModule],\n                    declarations: [MatDivider],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@angular/material/core';\nimport { _MatOptgroupBase, MAT_OPTGROUP, _MatOptionBase, MAT_OPTION_PARENT_COMPONENT, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule } from '@angular/material/core';\nexport { VERSION as LEGACY_VERSION, AnimationCurves as LegacyAnimationCurves, AnimationDurations as LegacyAnimationDurations, DateAdapter as LegacyDateAdapter, ErrorStateMatcher as LegacyErrorStateMatcher, NativeDateAdapter as LegacyNativeDateAdapter, NativeDateModule as LegacyNativeDateModule, RippleRef as LegacyRippleRef, RippleRenderer as LegacyRippleRenderer, ShowOnDirtyErrorStateMatcher as LegacyShowOnDirtyErrorStateMatcher, MATERIAL_SANITY_CHECKS as MATERIAL_LEGACY_SANITY_CHECKS, MAT_DATE_FORMATS as MAT_LEGACY_DATE_FORMATS, MAT_DATE_LOCALE as MAT_LEGACY_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY as MAT_LEGACY_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS as MAT_LEGACY_NATIVE_DATE_FORMATS, MAT_OPTGROUP as MAT_LEGACY_OPTGROUP, MAT_OPTION_PARENT_COMPONENT as MAT_LEGACY_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS as MAT_LEGACY_RIPPLE_GLOBAL_OPTIONS, MatCommonModule as MatLegacyCommonModule, MatLine as MatLegacyLine, MatLineModule as MatLegacyLineModule, MatNativeDateModule as MatLegacyNativeDateModule, MatOptionSelectionChange as MatLegacyOptionSelectionChange, MatPseudoCheckbox as MatLegacyPseudoCheckbox, MatPseudoCheckboxModule as MatLegacyPseudoCheckboxModule, MatRipple as MatLegacyRipple, MatRippleModule as MatLegacyRippleModule, _MatOptgroupBase as _MatLegacyOptgroupBase, _MatOptionBase as _MatLegacyOptionBase, _countGroupLabelsBeforeOption as _countGroupLabelsBeforeLegacyOption, _getOptionScrollPosition as _getLegacyOptionScrollPosition, defaultRippleAnimationConfig as legacyDefaultRippleAnimationConfig, mixinColor as legacyMixinColor, mixinDisableRipple as legacyMixinDisableRipple, mixinDisabled as legacyMixinDisabled, mixinErrorState as legacyMixinErrorState, mixinInitialized as legacyMixinInitialized, mixinTabIndex as legacyMixinTabIndex, setLines as legacySetLines } from '@angular/material/core';\n\n/**\n * Component that is used to group instances of `mat-option`.\n * @deprecated Use `MatOptgroup` from `@angular/material/core` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyOptgroup extends _MatOptgroupBase {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyOptgroup, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyOptgroup, selector: \"mat-optgroup\", inputs: { disabled: \"disabled\" }, host: { properties: { \"attr.role\": \"_inert ? null : \\\"group\\\"\", \"attr.aria-disabled\": \"_inert ? null : disabled.toString()\", \"attr.aria-labelledby\": \"_inert ? null : _labelId\", \"class.mat-optgroup-disabled\": \"disabled\" }, classAttribute: \"mat-optgroup\" }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatLegacyOptgroup }], exportAs: [\"matOptgroup\"], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-optgroup-label\\\" role=\\\"presentation\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></span>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyOptgroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-optgroup', exportAs: 'matOptgroup', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled'], host: {\n                        'class': 'mat-optgroup',\n                        '[attr.role]': '_inert ? null : \"group\"',\n                        '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n                        '[attr.aria-labelledby]': '_inert ? null : _labelId',\n                        '[class.mat-optgroup-disabled]': 'disabled',\n                    }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatLegacyOptgroup }], template: \"<span class=\\\"mat-optgroup-label\\\" role=\\\"presentation\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></span>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"] }]\n        }] });\n\n/**\n * Single option inside of a `<mat-select>` element.\n * @deprecated Use `MatOption` from `@angular/material/core` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyOption extends _MatOptionBase {\n    constructor(element, changeDetectorRef, parent, group) {\n        super(element, changeDetectorRef, parent, group);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyOption, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_OPTION_PARENT_COMPONENT, optional: true }, { token: MAT_OPTGROUP, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyOption, selector: \"mat-option\", host: { attributes: { \"role\": \"option\" }, listeners: { \"click\": \"_selectViaInteraction()\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.tabindex\": \"_getTabIndex()\", \"class.mat-selected\": \"selected\", \"class.mat-option-multiple\": \"multiple\", \"class.mat-active\": \"active\", \"id\": \"id\", \"attr.aria-selected\": \"selected\", \"attr.aria-disabled\": \"disabled.toString()\", \"class.mat-option-disabled\": \"disabled\" }, classAttribute: \"mat-option mat-focus-indicator\" }, exportAs: [\"matOption\"], usesInheritance: true, ngImport: i0, template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\" #text><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.mat-option.mat-active::before{content:\\\"\\\"}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.cdk-high-contrast-active .mat-option.mat-selected:not(.mat-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-option.mat-selected:not(.mat-option-multiple)::after{right:auto;left:16px}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"], dependencies: [{ kind: \"directive\", type: i1.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i1.MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: [\"state\", \"disabled\", \"appearance\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-option', exportAs: 'matOption', host: {\n                        'role': 'option',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[class.mat-selected]': 'selected',\n                        '[class.mat-option-multiple]': 'multiple',\n                        '[class.mat-active]': 'active',\n                        '[id]': 'id',\n                        '[attr.aria-selected]': 'selected',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[class.mat-option-disabled]': 'disabled',\n                        '(click)': '_selectViaInteraction()',\n                        '(keydown)': '_handleKeydown($event)',\n                        'class': 'mat-option mat-focus-indicator',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\" #text><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.mat-option.mat-active::before{content:\\\"\\\"}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.cdk-high-contrast-active .mat-option.mat-selected:not(.mat-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-option.mat-selected:not(.mat-option-multiple)::after{right:auto;left:16px}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_OPTION_PARENT_COMPONENT]\n                }] }, { type: MatLegacyOptgroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_OPTGROUP]\n                }] }]; } });\n\n/**\n * @deprecated Use `MatOptionModule` from `@angular/material/core` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyOptionModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyOptionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyOptionModule, declarations: [MatLegacyOption, MatLegacyOptgroup], imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule], exports: [MatLegacyOption, MatLegacyOptgroup] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyOptionModule, imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyOptionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule],\n                    exports: [MatLegacyOption, MatLegacyOptgroup],\n                    declarations: [MatLegacyOption, MatLegacyOptgroup],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatLegacyOptgroup, MatLegacyOption, MatLegacyOptionModule };\n","import * as i0 from '@angular/core';\nimport { inject, Directive, NgModule } from '@angular/core';\nimport { MatInput } from '@angular/material/input';\nexport { MAT_INPUT_VALUE_ACCESSOR as MAT_LEGACY_INPUT_VALUE_ACCESSOR, getMatInputUnsupportedTypeError as getMatLegacyInputUnsupportedTypeError } from '@angular/material/input';\nimport { MAT_LEGACY_FORM_FIELD, MatLegacyFormFieldControl, MatLegacyFormFieldModule } from '@angular/material/legacy-form-field';\nimport { TextFieldModule } from '@angular/cdk/text-field';\nimport { MatCommonModule, ErrorStateMatcher } from '@angular/material/core';\n\n/**\n * Directive that allows a native input to work inside a `MatFormField`.\n * @deprecated Use `MatInput` from `@angular/material/input` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyInput extends MatInput {\n    constructor() {\n        super(...arguments);\n        this._legacyFormField = inject(MAT_LEGACY_FORM_FIELD, { optional: true });\n    }\n    _getPlaceholder() {\n        // If we're hiding the native placeholder, it should also be cleared from the DOM, otherwise\n        // screen readers will read it out twice: once from the label and once from the attribute.\n        // TODO: can be removed once we get rid of the `legacy` style for the form field, because it's\n        // the only one that supports promoting the placeholder to a label.\n        const formField = this._legacyFormField;\n        return formField && formField.appearance === 'legacy' && !formField._hasLabel?.()\n            ? null\n            : this.placeholder;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyInput, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],\\n      input[matNativeControl], textarea[matNativeControl]\", host: { properties: { \"class.mat-input-server\": \"_isServer\", \"class.mat-mdc-input-element\": \"false\", \"class.mat-mdc-form-field-textarea-control\": \"false\", \"class.mat-mdc-form-field-input-control\": \"false\", \"class.mdc-text-field__input\": \"false\", \"class.mat-mdc-native-select-inline\": \"false\", \"attr.data-placeholder\": \"placeholder\", \"class.mat-native-select-inline\": \"_isInlineSelect()\" }, classAttribute: \"mat-input-element mat-form-field-autofill-control\" }, providers: [{ provide: MatLegacyFormFieldControl, useExisting: MatLegacyInput }], exportAs: [\"matInput\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                    exportAs: 'matInput',\n                    host: {\n                        /**\n                         * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                         */\n                        'class': 'mat-input-element mat-form-field-autofill-control',\n                        '[class.mat-input-server]': '_isServer',\n                        // These classes are inherited from the base input class and need to be cleared.\n                        '[class.mat-mdc-input-element]': 'false',\n                        '[class.mat-mdc-form-field-textarea-control]': 'false',\n                        '[class.mat-mdc-form-field-input-control]': 'false',\n                        '[class.mdc-text-field__input]': 'false',\n                        '[class.mat-mdc-native-select-inline]': 'false',\n                        // At the time of writing, we have a lot of customer tests that look up the input based on its\n                        // placeholder. Since we sometimes omit the placeholder attribute from the DOM to prevent screen\n                        // readers from reading it twice, we have to keep it somewhere in the DOM for the lookup.\n                        '[attr.data-placeholder]': 'placeholder',\n                        '[class.mat-native-select-inline]': '_isInlineSelect()',\n                    },\n                    providers: [{ provide: MatLegacyFormFieldControl, useExisting: MatLegacyInput }],\n                }]\n        }] });\n\n/**\n * @deprecated Use `MatInputModule` from `@angular/material/input` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyInputModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyInputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyInputModule, declarations: [MatLegacyInput], imports: [TextFieldModule, MatLegacyFormFieldModule, MatCommonModule], exports: [TextFieldModule,\n            // We re-export the `MatLegacyFormFieldModule` since `MatLegacyInput` will almost always\n            // be used together with `MatLegacyFormField`.\n            MatLegacyFormFieldModule,\n            MatLegacyInput] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyInputModule, providers: [ErrorStateMatcher], imports: [TextFieldModule, MatLegacyFormFieldModule, MatCommonModule, TextFieldModule,\n            // We re-export the `MatLegacyFormFieldModule` since `MatLegacyInput` will almost always\n            // be used together with `MatLegacyFormField`.\n            MatLegacyFormFieldModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyInputModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [MatLegacyInput],\n                    imports: [TextFieldModule, MatLegacyFormFieldModule, MatCommonModule],\n                    exports: [\n                        TextFieldModule,\n                        // We re-export the `MatLegacyFormFieldModule` since `MatLegacyInput` will almost always\n                        // be used together with `MatLegacyFormField`.\n                        MatLegacyFormFieldModule,\n                        MatLegacyInput,\n                    ],\n                    providers: [ErrorStateMatcher],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatLegacyInput, MatLegacyInputModule };\n","import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Directive, NgModule } from '@angular/core';\nimport { _MatMenuBase, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, matMenuAnimations, MatMenuItem, _MatMenuTriggerBase, _MatMenuContentBase, MAT_MENU_CONTENT, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER } from '@angular/material/menu';\nexport { MAT_MENU_CONTENT as MAT_LEGACY_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS as MAT_LEGACY_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL as MAT_LEGACY_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY as MAT_LEGACY_MENU_SCROLL_STRATEGY, fadeInItems as fadeInLegacyItems, matMenuAnimations as matLegacyMenuAnimations, transformMenu as transformLegacyMenu } from '@angular/material/menu';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@angular/material/core';\nimport { MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n\n/**\n * @docs-public MatMenu\n * @deprecated Use `MatMenu` from `@angular/material/menu` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyMenu extends _MatMenuBase {\n    constructor(elementRef, ngZone, defaultOptions, changeDetectorRef) {\n        super(elementRef, ngZone, defaultOptions, changeDetectorRef);\n        this._elevationPrefix = 'mat-elevation-z';\n        this._baseElevation = 4;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyMenu, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: MAT_MENU_DEFAULT_OPTIONS }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyMenu, selector: \"mat-menu\", host: { attributes: { \"ngSkipHydration\": \"\" }, properties: { \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.aria-describedby\": \"null\" } }, providers: [{ provide: MAT_MENU_PANEL, useExisting: MatLegacyMenu }], exportAs: [\"matMenu\"], usesInheritance: true, ngImport: i0, template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px;position:relative}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]::after{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"], dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyMenu, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-menu', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, exportAs: 'matMenu', host: {\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.aria-describedby]': 'null',\n                        'ngSkipHydration': '',\n                    }, animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems], providers: [{ provide: MAT_MENU_PANEL, useExisting: MatLegacyMenu }], template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px;position:relative}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:rgba(0,0,0,0);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]::after{display:block;position:absolute;content:\\\"\\\";top:0;left:0;bottom:0;right:0}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.mat-menu-item-submenu-trigger{padding-right:32px}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}.mat-menu-submenu-icon{position:absolute;top:50%;right:16px;transform:translateY(-50%);width:5px;height:10px;fill:currentColor}[dir=rtl] .mat-menu-submenu-icon{right:auto;left:16px;transform:translateY(-50%) scaleX(-1)}.cdk-high-contrast-active .mat-menu-submenu-icon{fill:CanvasText}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_MENU_DEFAULT_OPTIONS]\n                }] }, { type: i0.ChangeDetectorRef }]; } });\n\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n * @deprecated Use `MatMenuItem` from `@angular/material/menu` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyMenuItem extends MatMenuItem {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyMenuItem, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyMenuItem, selector: \"[mat-menu-item]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\" }, host: { properties: { \"attr.role\": \"role\", \"class.mat-menu-item\": \"true\", \"class.mat-menu-item-highlighted\": \"_highlighted\", \"class.mat-menu-item-submenu-trigger\": \"_triggersSubmenu\", \"attr.tabindex\": \"_getTabIndex()\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.disabled\": \"disabled || null\", \"class.mat-mdc-menu-item\": \"false\", \"class.mat-mdc-focus-indicator\": \"false\", \"class.mdc-list-item\": \"false\", \"class.mat-mdc-menu-item-highlighted\": \"false\", \"class.mat-mdc-menu-item-submenu-trigger\": \"false\" }, classAttribute: \"mat-focus-indicator\" }, providers: [{ provide: MatMenuItem, useExisting: MatLegacyMenuItem }], exportAs: [\"matMenuItem\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n<svg\\n  *ngIf=\\\"_triggersSubmenu\\\"\\n  class=\\\"mat-menu-submenu-icon\\\"\\n  viewBox=\\\"0 0 5 10\\\"\\n  focusable=\\\"false\\\"\\n  aria-hidden=\\\"true\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n\", dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyMenuItem, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-menu-item]', exportAs: 'matMenuItem', inputs: ['disabled', 'disableRipple'], host: {\n                        '[attr.role]': 'role',\n                        '[class.mat-menu-item]': 'true',\n                        '[class.mat-menu-item-highlighted]': '_highlighted',\n                        '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.disabled]': 'disabled || null',\n                        'class': 'mat-focus-indicator',\n                        // Classes added by the base class that should be removed.\n                        '[class.mat-mdc-menu-item]': 'false',\n                        '[class.mat-mdc-focus-indicator]': 'false',\n                        '[class.mdc-list-item]': 'false',\n                        '[class.mat-mdc-menu-item-highlighted]': 'false',\n                        '[class.mat-mdc-menu-item-submenu-trigger]': 'false',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [{ provide: MatMenuItem, useExisting: MatLegacyMenuItem }], template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\\n<svg\\n  *ngIf=\\\"_triggersSubmenu\\\"\\n  class=\\\"mat-menu-submenu-icon\\\"\\n  viewBox=\\\"0 0 5 10\\\"\\n  focusable=\\\"false\\\"\\n  aria-hidden=\\\"true\\\"><polygon points=\\\"0,0 5,5 0,10\\\"/></svg>\\n\" }]\n        }] });\n\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n/**\n * Directive applied to an element that should trigger a `mat-menu`.\n * @deprecated Use `MatMenuTrigger` from `@angular/material/menu` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyMenuTrigger extends _MatMenuTriggerBase {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyMenuTrigger, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyMenuTrigger, selector: \"[mat-menu-trigger-for], [matMenuTriggerFor]\", host: { classAttribute: \"mat-menu-trigger\" }, exportAs: [\"matMenuTrigger\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyMenuTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                    host: {\n                        'class': 'mat-menu-trigger',\n                    },\n                    exportAs: 'matMenuTrigger',\n                }]\n        }] });\n\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n * @deprecated Use `MatMenuContent` from `@angular/material/menu` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyMenuContent extends _MatMenuContentBase {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyMenuContent, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyMenuContent, selector: \"ng-template[matMenuContent]\", providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatLegacyMenuContent }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyMenuContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matMenuContent]',\n                    providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatLegacyMenuContent }],\n                }]\n        }] });\n\n/**\n * @deprecated Use `MatMenuModule` from `@angular/material/menu` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyMenuModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyMenuModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyMenuModule, declarations: [MatLegacyMenu, MatLegacyMenuItem, MatLegacyMenuTrigger, MatLegacyMenuContent], imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule], exports: [CdkScrollableModule,\n            MatCommonModule,\n            MatLegacyMenu,\n            MatLegacyMenuItem,\n            MatLegacyMenuTrigger,\n            MatLegacyMenuContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyMenuModule, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule, CdkScrollableModule,\n            MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyMenuModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatCommonModule,\n                        MatLegacyMenu,\n                        MatLegacyMenuItem,\n                        MatLegacyMenuTrigger,\n                        MatLegacyMenuContent,\n                    ],\n                    declarations: [MatLegacyMenu, MatLegacyMenuItem, MatLegacyMenuTrigger, MatLegacyMenuContent],\n                    providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatLegacyMenu, MatLegacyMenuContent, MatLegacyMenuItem, MatLegacyMenuModule, MatLegacyMenuTrigger };\n","import * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i3 from '@angular/material/legacy-button';\nimport { MatLegacyButtonModule } from '@angular/material/legacy-button';\nimport * as i5 from '@angular/material/legacy-select';\nimport { MatLegacySelectModule } from '@angular/material/legacy-select';\nimport * as i7 from '@angular/material/legacy-tooltip';\nimport { MatLegacyTooltipModule } from '@angular/material/legacy-tooltip';\nimport * as i1 from '@angular/material/paginator';\nimport { _MatPaginatorBase, MAT_PAGINATOR_INTL_PROVIDER } from '@angular/material/paginator';\nexport { PageEvent as LegacyPageEvent, MAT_PAGINATOR_INTL_PROVIDER as MAT_LEGACY_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY as MAT_LEGACY_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginatorIntl as MatLegacyPaginatorIntl, _MatPaginatorBase as _MatLegacyPaginatorBase } from '@angular/material/paginator';\nimport * as i4 from '@angular/material/legacy-form-field';\nimport * as i6 from '@angular/material/legacy-core';\n\n/**\n * Injection token that can be used to provide the default options for the paginator module.\n * @deprecated Use `MAT_PAGINATOR_DEFAULT_OPTIONS` from `@angular/material/paginator` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nconst MAT_LEGACY_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_LEGACY_PAGINATOR_DEFAULT_OPTIONS');\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n * @deprecated Use `MatPaginator` from `@angular/material/paginator` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyPaginator extends _MatPaginatorBase {\n    constructor(intl, changeDetectorRef, defaults) {\n        super(intl, changeDetectorRef, defaults);\n        if (defaults && defaults.formFieldAppearance != null) {\n            this._formFieldAppearance = defaults.formFieldAppearance;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyPaginator, deps: [{ token: i1.MatPaginatorIntl }, { token: i0.ChangeDetectorRef }, { token: MAT_LEGACY_PAGINATOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyPaginator, selector: \"mat-paginator\", inputs: { disabled: \"disabled\" }, host: { attributes: { \"role\": \"group\" }, classAttribute: \"mat-paginator\" }, exportAs: [\"matPaginator\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n          [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{display:inline-block;width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-paginator-icon{fill:CanvasText}\"], dependencies: [{ kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i3.MatLegacyButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }, { kind: \"component\", type: i4.MatLegacyFormField, selector: \"mat-form-field\", inputs: [\"color\", \"appearance\", \"hideRequiredMarker\", \"hintLabel\", \"floatLabel\"], exportAs: [\"matFormField\"] }, { kind: \"component\", type: i5.MatLegacySelect, selector: \"mat-select\", inputs: [\"disabled\", \"disableRipple\", \"tabIndex\"], exportAs: [\"matSelect\"] }, { kind: \"component\", type: i6.MatLegacyOption, selector: \"mat-option\", exportAs: [\"matOption\"] }, { kind: \"directive\", type: i7.MatLegacyTooltip, selector: \"[matTooltip]\", exportAs: [\"matTooltip\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyPaginator, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-paginator', exportAs: 'matPaginator', inputs: ['disabled'], host: {\n                        'class': 'mat-paginator',\n                        'role': 'group',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [panelClass]=\\\"selectConfig.panelClass || ''\\\"\\n          [disableOptionCentering]=\\\"selectConfig.disableOptionCentering\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\" aria-hidden=\\\"true\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{display:inline-block;width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-paginator-icon{fill:CanvasText}\"] }]\n        }], ctorParameters: function () { return [{ type: i1.MatPaginatorIntl }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_LEGACY_PAGINATOR_DEFAULT_OPTIONS]\n                }] }]; } });\n\n/**\n * @deprecated Use `MatPaginatorModule` from `@angular/material/paginator` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyPaginatorModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyPaginatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyPaginatorModule, declarations: [MatLegacyPaginator], imports: [CommonModule,\n            MatLegacyButtonModule,\n            MatLegacySelectModule,\n            MatLegacyTooltipModule,\n            MatCommonModule], exports: [MatLegacyPaginator] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyPaginatorModule, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [CommonModule,\n            MatLegacyButtonModule,\n            MatLegacySelectModule,\n            MatLegacyTooltipModule,\n            MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyPaginatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        MatLegacyButtonModule,\n                        MatLegacySelectModule,\n                        MatLegacyTooltipModule,\n                        MatCommonModule,\n                    ],\n                    exports: [MatLegacyPaginator],\n                    declarations: [MatLegacyPaginator],\n                    providers: [MAT_PAGINATOR_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LEGACY_PAGINATOR_DEFAULT_OPTIONS, MatLegacyPaginator, MatLegacyPaginatorModule };\n","import * as i1$2 from '@angular/cdk/overlay';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport * as i1$1 from '@angular/cdk/portal';\nimport { PortalModule } from '@angular/cdk/portal';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, NgModule, Injectable, Optional, SkipSelf } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i3 from '@angular/material/legacy-button';\nimport { MatLegacyButtonModule } from '@angular/material/legacy-button';\nimport * as i1 from '@angular/material/snack-bar';\nimport { MAT_SNACK_BAR_DATA, _MatSnackBarContainerBase, matSnackBarAnimations, _MatSnackBarBase, MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material/snack-bar';\nexport { MAT_SNACK_BAR_DATA as MAT_LEGACY_SNACK_BAR_DATA, MAT_SNACK_BAR_DEFAULT_OPTIONS as MAT_LEGACY_SNACK_BAR_DEFAULT_OPTIONS, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY as MAT_LEGACY_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MatSnackBarConfig as MatLegacySnackBarConfig, MatSnackBarRef as MatLegacySnackBarRef, _MatSnackBarBase as _MatLegacySnackBarBase, _MatSnackBarContainerBase as _MatLegacySnackBarContainerBase, matSnackBarAnimations as matLegacySnackBarAnimations } from '@angular/material/snack-bar';\nimport * as i2$1 from '@angular/cdk/a11y';\nimport * as i3$1 from '@angular/cdk/layout';\n\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n * @deprecated Use `SimpleSnackBar` from `@angular/material/snack-bar` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass LegacySimpleSnackBar {\n    constructor(snackBarRef, data) {\n        this.snackBarRef = snackBarRef;\n        this.data = data;\n    }\n    /** Performs the action on the snack bar. */\n    action() {\n        this.snackBarRef.dismissWithAction();\n    }\n    /** If the action button should be shown. */\n    get hasAction() {\n        return !!this.data.action;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: LegacySimpleSnackBar, deps: [{ token: i1.MatSnackBarRef }, { token: MAT_SNACK_BAR_DATA }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: LegacySimpleSnackBar, selector: \"simple-snack-bar\", host: { classAttribute: \"mat-simple-snackbar\" }, ngImport: i0, template: \"<span class=\\\"mat-simple-snack-bar-content\\\">{{data.message}}</span>\\n<div class=\\\"mat-simple-snackbar-action\\\"  *ngIf=\\\"hasAction\\\">\\n  <button mat-button (click)=\\\"action()\\\">{{data.action}}</button>\\n</div>\\n\", styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}.mat-simple-snack-bar-content{overflow:hidden;text-overflow:ellipsis}\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i3.MatLegacyButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: LegacySimpleSnackBar, decorators: [{\n            type: Component,\n            args: [{ selector: 'simple-snack-bar', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'class': 'mat-simple-snackbar',\n                    }, template: \"<span class=\\\"mat-simple-snack-bar-content\\\">{{data.message}}</span>\\n<div class=\\\"mat-simple-snackbar-action\\\"  *ngIf=\\\"hasAction\\\">\\n  <button mat-button (click)=\\\"action()\\\">{{data.action}}</button>\\n</div>\\n\", styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}.mat-simple-snack-bar-content{overflow:hidden;text-overflow:ellipsis}\"] }]\n        }], ctorParameters: function () { return [{ type: i1.MatSnackBarRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SNACK_BAR_DATA]\n                }] }]; } });\n\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n * @deprecated Use `MatSnackBarContainer` from `@angular/material/snack-bar` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySnackBarContainer extends _MatSnackBarContainerBase {\n    _afterPortalAttached() {\n        super._afterPortalAttached();\n        if (this.snackBarConfig.horizontalPosition === 'center') {\n            this._elementRef.nativeElement.classList.add('mat-snack-bar-center');\n        }\n        if (this.snackBarConfig.verticalPosition === 'top') {\n            this._elementRef.nativeElement.classList.add('mat-snack-bar-top');\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySnackBarContainer, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacySnackBarContainer, selector: \"snack-bar-container\", host: { listeners: { \"@state.done\": \"onAnimationEnd($event)\" }, properties: { \"@state\": \"_animationState\" }, classAttribute: \"mat-snack-bar-container\" }, usesInheritance: true, ngImport: i0, template: \"<!-- Initially holds the snack bar content, will be empty after announcing to screen readers. -->\\n<div aria-hidden=\\\"true\\\">\\n  <ng-template cdkPortalOutlet></ng-template>\\n</div>\\n\\n<!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n<div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\" [attr.id]=\\\"_liveElementId\\\"></div>\\n\", styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\"], dependencies: [{ kind: \"directive\", type: i1$1.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matSnackBarAnimations.snackBarState], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySnackBarContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'snack-bar-container', changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, animations: [matSnackBarAnimations.snackBarState], host: {\n                        'class': 'mat-snack-bar-container',\n                        '[@state]': '_animationState',\n                        '(@state.done)': 'onAnimationEnd($event)',\n                    }, template: \"<!-- Initially holds the snack bar content, will be empty after announcing to screen readers. -->\\n<div aria-hidden=\\\"true\\\">\\n  <ng-template cdkPortalOutlet></ng-template>\\n</div>\\n\\n<!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n<div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\" [attr.id]=\\\"_liveElementId\\\"></div>\\n\", styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\"] }]\n        }] });\n\n/**\n * @deprecated Use `MatSnackBarModule` from `@angular/material/snack-bar` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySnackBarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySnackBarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySnackBarModule, declarations: [MatLegacySnackBarContainer, LegacySimpleSnackBar], imports: [OverlayModule, PortalModule, CommonModule, MatLegacyButtonModule, MatCommonModule], exports: [MatLegacySnackBarContainer, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySnackBarModule, imports: [OverlayModule, PortalModule, CommonModule, MatLegacyButtonModule, MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySnackBarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, PortalModule, CommonModule, MatLegacyButtonModule, MatCommonModule],\n                    exports: [MatLegacySnackBarContainer, MatCommonModule],\n                    declarations: [MatLegacySnackBarContainer, LegacySimpleSnackBar],\n                }]\n        }] });\n\n/**\n * Service to dispatch Material Design snack bar messages.\n * @deprecated Use `MatSnackBar` from `@angular/material/snack-bar` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacySnackBar extends _MatSnackBarBase {\n    constructor(overlay, live, injector, breakpointObserver, parentSnackBar, defaultConfig) {\n        super(overlay, live, injector, breakpointObserver, parentSnackBar, defaultConfig);\n        this.simpleSnackBarComponent = LegacySimpleSnackBar;\n        this.snackBarContainerComponent = MatLegacySnackBarContainer;\n        this.handsetCssClass = 'mat-snack-bar-handset';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySnackBar, deps: [{ token: i1$2.Overlay }, { token: i2$1.LiveAnnouncer }, { token: i0.Injector }, { token: i3$1.BreakpointObserver }, { token: MatLegacySnackBar, optional: true, skipSelf: true }, { token: MAT_SNACK_BAR_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySnackBar, providedIn: MatLegacySnackBarModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacySnackBar, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: MatLegacySnackBarModule }]\n        }], ctorParameters: function () { return [{ type: i1$2.Overlay }, { type: i2$1.LiveAnnouncer }, { type: i0.Injector }, { type: i3$1.BreakpointObserver }, { type: MatLegacySnackBar, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: i1.MatSnackBarConfig, decorators: [{\n                    type: Inject,\n                    args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n                }] }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LegacySimpleSnackBar, MatLegacySnackBar, MatLegacySnackBarContainer, MatLegacySnackBarModule };\n","import * as i1 from '@angular/cdk/overlay';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport * as i4 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i7 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, Inject, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i2 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i5 from '@angular/cdk/bidi';\nimport * as i6 from '@angular/cdk/layout';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport * as i3 from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { _MatTooltipBase, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_DEFAULT_OPTIONS, _TooltipComponentBase, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER } from '@angular/material/tooltip';\nexport { SCROLL_THROTTLE_MS as LEGACY_SCROLL_THROTTLE_MS, MAT_TOOLTIP_DEFAULT_OPTIONS as MAT_LEGACY_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY as MAT_LEGACY_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY as MAT_LEGACY_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY as MAT_LEGACY_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER as MAT_LEGACY_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, getMatTooltipInvalidPositionError as getMatLegacyTooltipInvalidPositionError } from '@angular/material/tooltip';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\n\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n *\n * @deprecated Use `MatTooltip` from `@angular/material/tooltip` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyTooltip extends _MatTooltipBase {\n    constructor(overlay, elementRef, scrollDispatcher, viewContainerRef, ngZone, platform, ariaDescriber, focusMonitor, scrollStrategy, dir, defaultOptions, _document) {\n        super(overlay, elementRef, scrollDispatcher, viewContainerRef, ngZone, platform, ariaDescriber, focusMonitor, scrollStrategy, dir, defaultOptions, _document);\n        this._tooltipComponent = LegacyTooltipComponent;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyTooltip, deps: [{ token: i1.Overlay }, { token: i0.ElementRef }, { token: i2.ScrollDispatcher }, { token: i0.ViewContainerRef }, { token: i0.NgZone }, { token: i3.Platform }, { token: i4.AriaDescriber }, { token: i4.FocusMonitor }, { token: MAT_TOOLTIP_SCROLL_STRATEGY }, { token: i5.Directionality, optional: true }, { token: MAT_TOOLTIP_DEFAULT_OPTIONS, optional: true }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatLegacyTooltip, selector: \"[matTooltip]\", host: { classAttribute: \"mat-tooltip-trigger\" }, exportAs: [\"matTooltip\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyTooltip, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTooltip]',\n                    exportAs: 'matTooltip',\n                    host: {\n                        'class': 'mat-tooltip-trigger',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i1.Overlay }, { type: i0.ElementRef }, { type: i2.ScrollDispatcher }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i3.Platform }, { type: i4.AriaDescriber }, { type: i4.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n                }] }, { type: i5.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n * @deprecated Use `TooltipComponent` from `@angular/material/tooltip` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass LegacyTooltipComponent extends _TooltipComponentBase {\n    constructor(changeDetectorRef, breakpointObserver, animationMode) {\n        super(changeDetectorRef, animationMode);\n        this._showAnimation = 'mat-tooltip-show';\n        this._hideAnimation = 'mat-tooltip-hide';\n        this._isHandset = breakpointObserver.observe(Breakpoints.Handset);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: LegacyTooltipComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i6.BreakpointObserver }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: LegacyTooltipComponent, selector: \"mat-tooltip-component\", host: { attributes: { \"aria-hidden\": \"true\" }, listeners: { \"mouseleave\": \"_handleMouseLeave($event)\" }, properties: { \"style.zoom\": \"isVisible() ? 1 : null\" } }, viewQueries: [{ propertyName: \"_tooltip\", first: true, predicate: [\"tooltip\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<div #tooltip\\n     class=\\\"mat-tooltip\\\"\\n     (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n     [ngClass]=\\\"tooltipClass\\\"\\n     [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\">{{message}}</div>\\n\", styles: [\".mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis;transform:scale(0)}.mat-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}.mat-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-tooltip-show{0%{opacity:0;transform:scale(0)}50%{opacity:.5;transform:scale(0.99)}100%{opacity:1;transform:scale(1)}}@keyframes mat-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(1)}}.mat-tooltip-show{animation:mat-tooltip-show 200ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-tooltip-hide{animation:mat-tooltip-hide 100ms cubic-bezier(0, 0, 0.2, 1) forwards}\"], dependencies: [{ kind: \"directive\", type: i7.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"pipe\", type: i7.AsyncPipe, name: \"async\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: LegacyTooltipComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tooltip-component', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                        // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                        '[style.zoom]': 'isVisible() ? 1 : null',\n                        '(mouseleave)': '_handleMouseLeave($event)',\n                        'aria-hidden': 'true',\n                    }, template: \"<div #tooltip\\n     class=\\\"mat-tooltip\\\"\\n     (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n     [ngClass]=\\\"tooltipClass\\\"\\n     [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\">{{message}}</div>\\n\", styles: [\".mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis;transform:scale(0)}.mat-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}.mat-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-tooltip-show{0%{opacity:0;transform:scale(0)}50%{opacity:.5;transform:scale(0.99)}100%{opacity:1;transform:scale(1)}}@keyframes mat-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(1)}}.mat-tooltip-show{animation:mat-tooltip-show 200ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-tooltip-hide{animation:mat-tooltip-hide 100ms cubic-bezier(0, 0, 0.2, 1) forwards}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i6.BreakpointObserver }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _tooltip: [{\n                type: ViewChild,\n                args: ['tooltip', {\n                        // Use a static query here since we interact directly with\n                        // the DOM which can happen before `ngAfterViewInit`.\n                        static: true,\n                    }]\n            }] } });\n\n/**\n * @deprecated Use `MatTooltipModule` from `@angular/material/tooltip` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nclass MatLegacyTooltipModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyTooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyTooltipModule, declarations: [MatLegacyTooltip, LegacyTooltipComponent], imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule], exports: [MatLegacyTooltip, LegacyTooltipComponent, MatCommonModule, CdkScrollableModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyTooltipModule, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule, MatCommonModule, CdkScrollableModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatLegacyTooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule],\n                    exports: [MatLegacyTooltip, LegacyTooltipComponent, MatCommonModule, CdkScrollableModule],\n                    declarations: [MatLegacyTooltip, LegacyTooltipComponent],\n                    providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * Animations used by MatTooltip.\n * @docs-private\n * @deprecated Use `matTooltipAnimations` from `@angular/material/tooltip` instead. See https://material.angular.io/guide/mdc-migration for information about migrating.\n * @breaking-change 17.0.0\n */\nconst matLegacyTooltipAnimations = {\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: trigger('state', [\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0)', offset: 0 }),\n            style({ opacity: 0.5, transform: 'scale(0.99)', offset: 0.5 }),\n            style({ opacity: 1, transform: 'scale(1)', offset: 1 }),\n        ]))),\n        transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 0 }))),\n    ]),\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LegacyTooltipComponent, MatLegacyTooltip, MatLegacyTooltipModule, matLegacyTooltipAnimations };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n// Boilerplate for applying mixins to MatProgressBar.\nconst _MatProgressSpinnerBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n/**\n * Base reference size of the spinner.\n */\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n */\nconst BASE_STROKE_WIDTH = 10;\nclass MatProgressSpinner extends _MatProgressSpinnerBase {\n    constructor(elementRef, animationMode, defaults) {\n        super(elementRef);\n        /**\n         * Mode of the progress bar.\n         *\n         * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n         * 'determinate'.\n         * Mirrored to mode attribute.\n         */\n        this.mode = this._elementRef.nativeElement.nodeName.toLowerCase() === 'mat-spinner'\n            ? 'indeterminate'\n            : 'determinate';\n        this._value = 0;\n        this._diameter = BASE_SIZE;\n        this._noopAnimations =\n            animationMode === 'NoopAnimations' && !!defaults && !defaults._forceAnimations;\n        if (defaults) {\n            if (defaults.color) {\n                this.color = this.defaultColor = defaults.color;\n            }\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(v) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(v)));\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() {\n        return this._diameter;\n    }\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth ?? this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    _circleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _viewBox() {\n        const viewBox = this._circleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _strokeCircumference() {\n        return 2 * Math.PI * this._circleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _strokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return (this._strokeCircumference() * (100 - this._value)) / 100;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _circleStrokeWidth() {\n        return (this.strokeWidth / this.diameter) * 100;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatProgressSpinner, deps: [{ token: i0.ElementRef }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatProgressSpinner, selector: \"mat-progress-spinner, mat-spinner\", inputs: { color: \"color\", mode: \"mode\", value: \"value\", diameter: \"diameter\", strokeWidth: \"strokeWidth\" }, host: { attributes: { \"role\": \"progressbar\", \"tabindex\": \"-1\" }, properties: { \"class._mat-animation-noopable\": \"_noopAnimations\", \"class.mdc-circular-progress--indeterminate\": \"mode === \\\"indeterminate\\\"\", \"style.width.px\": \"diameter\", \"style.height.px\": \"diameter\", \"style.--mdc-circular-progress-size\": \"diameter + \\\"px\\\"\", \"style.--mdc-circular-progress-active-indicator-width\": \"diameter + \\\"px\\\"\", \"attr.aria-valuemin\": \"0\", \"attr.aria-valuemax\": \"100\", \"attr.aria-valuenow\": \"mode === \\\"determinate\\\" ? value : null\", \"attr.mode\": \"mode\" }, classAttribute: \"mat-mdc-progress-spinner mdc-circular-progress\" }, viewQueries: [{ propertyName: \"_determinateCircle\", first: true, predicate: [\"determinateSpinner\"], descendants: true }], exportAs: [\"matProgressSpinner\"], usesInheritance: true, ngImport: i0, template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\"@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-color-1-fade-in-out{from{opacity:.99}25%{opacity:.99}26%{opacity:0}89%{opacity:0}90%{opacity:.99}to{opacity:.99}}@keyframes mdc-circular-progress-color-2-fade-in-out{from{opacity:0}15%{opacity:0}25%{opacity:.99}50%{opacity:.99}51%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-3-fade-in-out{from{opacity:0}40%{opacity:0}50%{opacity:.99}75%{opacity:.99}76%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-4-fade-in-out{from{opacity:0}65%{opacity:0}75%{opacity:.99}90%{opacity:.99}to{opacity:0}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}.mdc-circular-progress{display:inline-flex;position:relative;direction:ltr;line-height:0;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-1{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-1-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-2{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-2-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-3{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-3-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-4{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-4-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--closed{opacity:0}.mat-mdc-progress-spinner{--mdc-circular-progress-active-indicator-width:4px;--mdc-circular-progress-size:48px}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-1 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-2 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-3 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-4 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner .mdc-circular-progress{width:var(--mdc-circular-progress-size) !important;height:var(--mdc-circular-progress-size) !important}.mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}\"], dependencies: [{ kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatProgressSpinner, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-progress-spinner, mat-spinner', exportAs: 'matProgressSpinner', host: {\n                        'role': 'progressbar',\n                        'class': 'mat-mdc-progress-spinner mdc-circular-progress',\n                        // set tab index to -1 so screen readers will read the aria-label\n                        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                        'tabindex': '-1',\n                        '[class._mat-animation-noopable]': `_noopAnimations`,\n                        '[class.mdc-circular-progress--indeterminate]': 'mode === \"indeterminate\"',\n                        '[style.width.px]': 'diameter',\n                        '[style.height.px]': 'diameter',\n                        '[style.--mdc-circular-progress-size]': 'diameter + \"px\"',\n                        '[style.--mdc-circular-progress-active-indicator-width]': 'diameter + \"px\"',\n                        '[attr.aria-valuemin]': '0',\n                        '[attr.aria-valuemax]': '100',\n                        '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                        '[attr.mode]': 'mode',\n                    }, inputs: ['color'], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\"@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-color-1-fade-in-out{from{opacity:.99}25%{opacity:.99}26%{opacity:0}89%{opacity:0}90%{opacity:.99}to{opacity:.99}}@keyframes mdc-circular-progress-color-2-fade-in-out{from{opacity:0}15%{opacity:0}25%{opacity:.99}50%{opacity:.99}51%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-3-fade-in-out{from{opacity:0}40%{opacity:0}50%{opacity:.99}75%{opacity:.99}76%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-4-fade-in-out{from{opacity:0}65%{opacity:0}75%{opacity:.99}90%{opacity:.99}to{opacity:0}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}.mdc-circular-progress{display:inline-flex;position:relative;direction:ltr;line-height:0;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-1{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-1-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-2{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-2-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-3{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-3-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-4{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-4-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--closed{opacity:0}.mat-mdc-progress-spinner{--mdc-circular-progress-active-indicator-width:4px;--mdc-circular-progress-size:48px}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-1 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-2 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-3 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-4 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner .mdc-circular-progress{width:var(--mdc-circular-progress-size) !important;height:var(--mdc-circular-progress-size) !important}.mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n                }] }]; }, propDecorators: { _determinateCircle: [{\n                type: ViewChild,\n                args: ['determinateSpinner']\n            }], mode: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], diameter: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }] } });\n/**\n * @deprecated Import Progress Spinner instead. Note that the\n *    `mat-spinner` selector isn't deprecated.\n * @breaking-change 16.0.0\n */\n// tslint:disable-next-line:variable-name\nconst MatSpinner = MatProgressSpinner;\n\nclass MatProgressSpinnerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatProgressSpinnerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatProgressSpinnerModule, declarations: [MatProgressSpinner, MatSpinner], imports: [CommonModule], exports: [MatProgressSpinner, MatSpinner, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatProgressSpinnerModule, imports: [CommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatProgressSpinnerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [MatProgressSpinner, MatSpinner, MatCommonModule],\n                    declarations: [MatProgressSpinner, MatSpinner],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nconst _MatToolbarBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\nclass MatToolbarRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarRow, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatToolbarRow, selector: \"mat-toolbar-row\", host: { classAttribute: \"mat-toolbar-row\" }, exportAs: [\"matToolbarRow\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-toolbar-row',\n                    exportAs: 'matToolbarRow',\n                    host: { 'class': 'mat-toolbar-row' },\n                }]\n        }] });\nclass MatToolbar extends _MatToolbarBase {\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._checkToolbarMixedModes();\n            this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n        }\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     */\n    _checkToolbarMixedModes() {\n        if (this._toolbarRows.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            // Check if there are any other DOM nodes that can display content but aren't inside of\n            // a <mat-toolbar-row> element.\n            const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n                .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n                .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n                .some(node => !!(node.textContent && node.textContent.trim()));\n            if (isCombinedUsage) {\n                throwToolbarMixedModesError();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbar, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatToolbar, selector: \"mat-toolbar\", inputs: { color: \"color\" }, host: { properties: { \"class.mat-toolbar-multiple-rows\": \"_toolbarRows.length > 0\", \"class.mat-toolbar-single-row\": \"_toolbarRows.length === 0\" }, classAttribute: \"mat-toolbar\" }, queries: [{ propertyName: \"_toolbarRows\", predicate: MatToolbarRow, descendants: true }], exportAs: [\"matToolbar\"], usesInheritance: true, ngImport: i0, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-toolbar', exportAs: 'matToolbar', inputs: ['color'], host: {\n                        'class': 'mat-toolbar',\n                        '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                        '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\", styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar .mat-mdc-button-base.mat-unthemed{--mdc-text-button-label-text-color: inherit;--mdc-outlined-button-label-text-color: inherit}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { _toolbarRows: [{\n                type: ContentChildren,\n                args: [MatToolbarRow, { descendants: true }]\n            }] } });\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\nclass MatToolbarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, declarations: [MatToolbar, MatToolbarRow], imports: [MatCommonModule], exports: [MatToolbar, MatToolbarRow, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, imports: [MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatToolbarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                    declarations: [MatToolbar, MatToolbarRow],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n","import * as i0 from '@angular/core';\nimport { NgModule, InjectionToken, Injectable } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AttributeValue } from '@rollthecloudinc/attributes';\nimport * as i1 from '@rollthecloudinc/plugin';\nimport { Plugin, BasePluginManager, PluginDef } from '@rollthecloudinc/plugin';\nimport { of } from 'rxjs';\nimport * as i2 from '@rollthecloudinc/utils';\n\n/*import { defaultPluginManagerFactory, pluginManagerToken } from '@rollthecloudinc/plugin';\nimport { ContentPlugin, ContentPluginDef } from './models/content.models';\nimport { ContentPluginManager } from './services/content-plugin-manager.service';*/\nclass ContentModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: ContentModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.5\", ngImport: i0, type: ContentModule, imports: [CommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: ContentModule, imports: [CommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: ContentModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule]\n                }]\n        }] });\n\nclass ContentPlugin extends Plugin {\n    constructor(data) {\n        super(data);\n        this.fileTypes = [];\n        if (data) {\n            this.name = this.id;\n            this.handler = data.handler !== undefined ? data.handler : undefined;\n            this.selectionComponent = data.selectionComponent ? data.selectionComponent : undefined;\n            this.renderComponent = data.renderComponent ? data.renderComponent : undefined;\n            this.editorComponent = data.editorComponent ? data.editorComponent : undefined;\n        }\n    }\n}\nclass ContentBinding {\n    constructor(data) {\n        if (data) {\n            this.type = data.type;\n            this.id = data.id;\n        }\n    }\n}\nclass ContentInstance {\n    constructor(data) {\n        this.settings = [];\n        if (data) {\n            this.pluginName = data.pluginName;\n            if (data.settings) {\n                this.settings = data.settings.map(s => new AttributeValue(s));\n            }\n        }\n    }\n}\n/*export class Snippet {\n  content: string;\n  contentType: string;\n  jsFile?: string;\n  jsScript?: string;\n  constructor(data?: Snippet) {\n    if(data) {\n      this.content = data.content;\n      this.contentType = data.contentType;\n      if (data.jsFile && data.jsFile !== '') {\n        this.jsFile = data.jsFile;\n      }\n      if (data.jsScript && data.jsScript !== '') {\n        this.jsScript = data.jsScript;\n      }\n    }\n  }\n}*/\nclass ContentPluginEditorOptions {\n    constructor(data) {\n        this.fullscreen = false;\n        if (data) {\n            this.fullscreen = data.fullscreen;\n        }\n    }\n}\n\nconst CONTENT_PLUGIN = new InjectionToken('ContentPlugin');\n\nclass ContentPluginManager extends BasePluginManager {\n    constructor(pcm, moduleLoader) {\n        super(pcm, moduleLoader);\n    }\n    pluginDef() {\n        return of(new PluginDef({ name: 'content' }));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: ContentPluginManager, deps: [{ token: i1.PluginConfigurationManager }, { token: i2.ModuleLoaderService }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: ContentPluginManager, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: ContentPluginManager, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.PluginConfigurationManager }, { type: i2.ModuleLoaderService }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CONTENT_PLUGIN, ContentBinding, ContentInstance, ContentModule, ContentPlugin, ContentPluginEditorOptions, ContentPluginManager };\n","import * as i0 from '@angular/core';\nimport { NgModule, Injectable } from '@angular/core';\nimport * as i2 from '@rollthecloudinc/utils';\nimport { UtilsModule } from '@rollthecloudinc/utils';\nimport { of, forkJoin } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nclass PluginModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: PluginModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.5\", ngImport: i0, type: PluginModule, imports: [UtilsModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: PluginModule, imports: [UtilsModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: PluginModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [],\n                    imports: [\n                        UtilsModule\n                    ],\n                    exports: []\n                }]\n        }] });\n\nclass PluginConfigurationManager {\n    constructor() {\n        this.configs = [];\n    }\n    addConfig(cfg) {\n        this.configs.push(cfg);\n    }\n    getConfigs() {\n        return this.configs;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: PluginConfigurationManager, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: PluginConfigurationManager, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: PluginConfigurationManager, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nclass ConfigDiscovery {\n    constructor(pcm, moduleLoader) {\n        this.pcm = pcm;\n        this.moduleLoader = moduleLoader;\n    }\n    loadPlugins(pluginDef, ids = []) {\n        const configs = this.pcm.getConfigs();\n        const len = configs.length;\n        const loadModules$ = [];\n        for (let i = 0; i < len; i++) {\n            const len2 = configs[i].modules.length;\n            for (let j = 0; j < len2; j++) {\n                if (configs[i].modules[j].plugins.has(pluginDef.name) &&\n                    (ids.length === 0 ||\n                        ids.some(id => configs[i].modules[j].plugins.get(pluginDef.name).findIndex(p => p === id) > -1))) {\n                    loadModules$.push(this.moduleLoader.loadModule(configs[i].modules[j].module));\n                }\n            }\n        }\n        if (loadModules$.length === 0) {\n            return of(true);\n        }\n        else {\n            return forkJoin(loadModules$).pipe(map(() => true));\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: ConfigDiscovery, deps: [{ token: PluginConfigurationManager }, { token: i2.ModuleLoaderService }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: ConfigDiscovery, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: ConfigDiscovery, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: PluginConfigurationManager }, { type: i2.ModuleLoaderService }]; } });\n\n// import { Injectable } from '@angular/core';\n// @Injectable()\nclass BasePluginManager {\n    constructor(pcm, moduleLoader) {\n        this.pcm = pcm;\n        this.moduleLoader = moduleLoader;\n        this.pluginInstances = new Map();\n        this.discoveryPipeline = [];\n        this.discovery();\n    }\n    discovery() {\n        this.discoveryPipeline.push(new ConfigDiscovery(this.pcm, this.moduleLoader));\n    }\n    addDiscovery(d) {\n        this.discoveryPipeline.push(d);\n    }\n    register(plugin) {\n        this.pluginInstances.set(plugin.id, plugin);\n    }\n    getPlugins(ids) {\n        const newPlugins = ids ? ids.filter(id => !this.pluginInstances.has(id)) : [];\n        if (ids && newPlugins.length === 0) {\n            return of(new Map(ids.map(id => [id, this.pluginInstances.get(id)])));\n        }\n        else {\n            return this.pluginDef().pipe(switchMap(def => forkJoin(this.discoveryPipeline.map(d => d.loadPlugins(def, newPlugins))).pipe(map(() => ids ? new Map(ids.map(id => [id, this.pluginInstances.get(id)])) : this.pluginInstances))));\n        }\n    }\n    getPlugin(id) {\n        if (this.pluginInstances.has(id)) {\n            return of(this.pluginInstances.get(id));\n        }\n        else {\n            return this.pluginDef().pipe(switchMap(def => forkJoin(this.discoveryPipeline.map(d => d.loadPlugins(def, [id]))).pipe(map(() => this.pluginInstances.get(id)))));\n        }\n    }\n}\n\nclass PluginConfig {\n    constructor(data) {\n        this.modules = [];\n        if (data) {\n            if (data.modules) {\n                this.modules = data.modules.map(m => new PluginConfigModule(m));\n            }\n        }\n    }\n}\nclass Plugin {\n    constructor(data) {\n        if (data) {\n            this.id = data.id;\n            this.title = data.title;\n        }\n    }\n}\nclass PluginDef {\n    constructor(data) {\n        if (data) {\n            this.name = data.name;\n        }\n    }\n}\nclass PluginConfigModule {\n    constructor(data) {\n        if (data) {\n            this.module = data.module;\n            if (data.plugins) {\n                this.plugins = new Map([...data.plugins]);\n            }\n        }\n    }\n}\n/*export class BasePlugin implements Plugin {\n}*/\n\n/*\n * Public API Surface of plugin\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePluginManager, ConfigDiscovery, Plugin, PluginConfig, PluginConfigModule, PluginConfigurationManager, PluginDef, PluginModule };\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27]}