{"version":3,"file":"5094.48f75c29014d695d.js","mappings":"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","names":["ObjectUnsubscribedError","createErrorClass","_super","this","name","message","Subject","_Observable","_inherits","_createSuper","_this","_classCallCheck","call","closed","currentObservers","observers","isStopped","hasError","thrownError","_createClass","key","value","operator","subject","AnonymousSubject","_this2","errorContext","_throwIfClosed","Array","from","_step","_iterator","_createForOfIteratorHelper","s","n","done","next","err","e","f","_this3","length","shift","error","_this4","complete","get","_a","subscriber","_get","_getPrototypeOf","prototype","_checkFinalizedStatuses","_innerSubscribe","_this5","EMPTY_SUBSCRIPTION","push","Subscription","arrRemove","observable","Observable","source","create","destination","_Subject","_super2","_this6","_b","subscribe","EMPTY","createOperatorSubscriber","onNext","onComplete","onError","onFinalize","OperatorSubscriber","_Subscriber","shouldUnsubscribe","_thisSuper","_thisSuper2","_thisSuper3","_next","_assertThisInitialized","_error","unsubscribe","_complete","Subscriber","take","count","operate","seen","takeUntil","notifier","innerFrom","noop","hasLift","isFunction","lift","init","liftedSource","TypeError","SimpleSnackBar_div_2_Template","rf","ctx","_r2","i0","ctx_r1","action","ctx_r0","data","_c0","MatSnackBarContainer_ng_template_4_Template","MAX_TIMEOUT","Math","pow","MatSnackBarRef","containerInstance","_overlayRef","_afterDismissed","_afterOpened","_onAction","_dismissedByAction","_onExit","_finishDismiss","exit","clearTimeout","_durationTimeoutId","dismiss","dismissWithAction","duration","setTimeout","min","dispose","dismissedByAction","_onEnter","MAT_SNACK_BAR_DATA","InjectionToken","MatSnackBarConfig","politeness","announcementMessage","horizontalPosition","verticalPosition","MatSnackBarLabel","ɵfac","t","ɵdir","type","selectors","hostAttrs","MatSnackBarActions","MatSnackBarAction","SimpleSnackBar","snackBarRef","ɵcmp","exportAs","decls","vars","consts","template","hasAction","dependencies","i2","i3","styles","encapsulation","changeDetection","matSnackBarAnimations","snackBarState","trigger","state","style","transform","opacity","transition","animate","uniqueId","_MatSnackBarContainerBase","_BasePortalOutlet","_ngZone","_elementRef","_changeDetectorRef","_platform","snackBarConfig","_document","inject","DOCUMENT","_trackedModals","Set","_announceDelay","_destroyed","_onAnnounce","_animationState","_liveElementId","concat","attachDomPortal","portal","_assertNotAttached","result","_portalOutlet","_afterPortalAttached","_live","FIREFOX","_role","attachComponentPortal","attachTemplatePortal","event","toState","fromState","_completeExit","onEnter","run","detectChanges","_screenReaderAnnounce","nativeElement","setAttribute","_announceTimeoutId","_clearFromModals","onMicrotaskEmpty","pipe","element","panelClasses","panelClass","isArray","forEach","cssClass","classList","add","_exposeToModals","id","modals","querySelectorAll","i","modal","ariaOwns","getAttribute","indexOf","newValue","replace","trim","removeAttribute","clear","hasAttached","_this7","runOutsideAngular","inertElement","querySelector","liveElement","_focusedElement","focusedElement","isBrowser","document","activeElement","HTMLElement","contains","appendChild","focus","BasePortalOutlet","i1","viewQuery","_t","CdkPortalOutlet","first","features","MatSnackBarContainer","_MatSnackBarContainer","apply","arguments","label","_label","labelClass","toggle","ɵMatSnackBarContainer_BaseFactory","hostVars","hostBindings","$event","onAnimationEnd","i3$1","animation","MatSnackBarModule","ɵmod","ɵinj","imports","OverlayModule","PortalModule","CommonModule","MatButtonModule","MatCommonModule","MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY","MAT_SNACK_BAR_DEFAULT_OPTIONS","providedIn","factory","_MatSnackBarBase","_overlay","_injector","_breakpointObserver","_parentSnackBar","_defaultConfig","_snackBarRefAtThisLevel","parent","_openedSnackBarRef","set","component","config","_attach","undefined","_config","_objectSpread","openFromComponent","simpleSnackBarComponent","overlayRef","injector","Injector","viewContainerRef","providers","provide","useValue","containerPortal","ComponentPortal","snackBarContainerComponent","containerRef","attach","instance","content","userConfig","_this8","_createOverlay","container","_attachSnackBarContainer","TemplateRef","TemplatePortal","$implicit","_createInjector","contentRef","observe","Breakpoints","detachments","overlayElement","handsetCssClass","matches","announce","_animateSnackBar","_this9","afterDismissed","enter","afterOpened","_dismissAfter","overlayConfig","OverlayConfig","direction","positionStrategy","position","global","isRtl","isLeft","isRight","left","right","centerHorizontally","top","bottom","i1$1","i2$1","i3$2","ɵprov","token","MatSnackBar","_MatSnackBarBase2","_super3","overlay","live","breakpointObserver","parentSnackBar","defaultConfig","_this10","_arrayLikeToArray","arr","len","arr2","o","allowArrayLike","it","Symbol","iterator","_unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_0__","Z","F","_e","normalCompletion","didErr","step","_e2","return","_defineProperty","obj","_toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__","Object","defineProperty","enumerable","configurable","writable","_iterableToArray","iter","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread2","target","_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__","getOwnPropertyDescriptors","defineProperties","_toConsumableArray","_arrayWithoutHoles","arrayLikeToArray","iterableToArray","unsupportedIterableToArray","_nonIterableSpread","_unsupportedIterableToArray","minLen","_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__","toString","slice","constructor","test"],"sourceRoot":"webpack:///","sources":["./node_modules/rxjs/dist/esm/internal/util/ObjectUnsubscribedError.js","./node_modules/rxjs/dist/esm/internal/Subject.js","./node_modules/rxjs/dist/esm/internal/observable/empty.js","./node_modules/rxjs/dist/esm/internal/operators/OperatorSubscriber.js","./node_modules/rxjs/dist/esm/internal/operators/take.js","./node_modules/rxjs/dist/esm/internal/operators/takeUntil.js","./node_modules/rxjs/dist/esm/internal/util/lift.js","./node_modules/@angular/material/fesm2022/snack-bar.mjs","./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","./node_modules/@babel/runtime/helpers/esm/defineProperty.js","./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","./node_modules/@babel/runtime/helpers/esm/objectSpread2.js","./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js"],"sourcesContent":["import { createErrorClass } from './createErrorClass';\nexport const ObjectUnsubscribedError = createErrorClass((_super) => function ObjectUnsubscribedErrorImpl() {\n    _super(this);\n    this.name = 'ObjectUnsubscribedError';\n    this.message = 'object unsubscribed';\n});\n","import { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nexport class Subject extends Observable {\n    constructor() {\n        super();\n        this.closed = false;\n        this.currentObservers = null;\n        this.observers = [];\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    lift(operator) {\n        const subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    }\n    _throwIfClosed() {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n    }\n    next(value) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                if (!this.currentObservers) {\n                    this.currentObservers = Array.from(this.observers);\n                }\n                for (const observer of this.currentObservers) {\n                    observer.next(value);\n                }\n            }\n        });\n    }\n    error(err) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.hasError = this.isStopped = true;\n                this.thrownError = err;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().error(err);\n                }\n            }\n        });\n    }\n    complete() {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.isStopped = true;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().complete();\n                }\n            }\n        });\n    }\n    unsubscribe() {\n        this.isStopped = this.closed = true;\n        this.observers = this.currentObservers = null;\n    }\n    get observed() {\n        var _a;\n        return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    _trySubscribe(subscriber) {\n        this._throwIfClosed();\n        return super._trySubscribe(subscriber);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._checkFinalizedStatuses(subscriber);\n        return this._innerSubscribe(subscriber);\n    }\n    _innerSubscribe(subscriber) {\n        const { hasError, isStopped, observers } = this;\n        if (hasError || isStopped) {\n            return EMPTY_SUBSCRIPTION;\n        }\n        this.currentObservers = null;\n        observers.push(subscriber);\n        return new Subscription(() => {\n            this.currentObservers = null;\n            arrRemove(observers, subscriber);\n        });\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, thrownError, isStopped } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped) {\n            subscriber.complete();\n        }\n    }\n    asObservable() {\n        const observable = new Observable();\n        observable.source = this;\n        return observable;\n    }\n}\nSubject.create = (destination, source) => {\n    return new AnonymousSubject(destination, source);\n};\nexport class AnonymousSubject extends Subject {\n    constructor(destination, source) {\n        super();\n        this.destination = destination;\n        this.source = source;\n    }\n    next(value) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n    }\n    error(err) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n    }\n    complete() {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    _subscribe(subscriber) {\n        var _a, _b;\n        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n    }\n}\n","import { Observable } from '../Observable';\nexport const EMPTY = new Observable((subscriber) => subscriber.complete());\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n","import { Subscriber } from '../Subscriber';\nexport function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {\n    return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\nexport class OperatorSubscriber extends Subscriber {\n    constructor(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {\n        super(destination);\n        this.onFinalize = onFinalize;\n        this.shouldUnsubscribe = shouldUnsubscribe;\n        this._next = onNext\n            ? function (value) {\n                try {\n                    onNext(value);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n            }\n            : super._next;\n        this._error = onError\n            ? function (err) {\n                try {\n                    onError(err);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._error;\n        this._complete = onComplete\n            ? function () {\n                try {\n                    onComplete();\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._complete;\n    }\n    unsubscribe() {\n        var _a;\n        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n            const { closed } = this;\n            super.unsubscribe();\n            !closed && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n        }\n    }\n}\n","import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function take(count) {\n    return count <= 0\n        ?\n            () => EMPTY\n        : operate((source, subscriber) => {\n            let seen = 0;\n            source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n                if (++seen <= count) {\n                    subscriber.next(value);\n                    if (count <= seen) {\n                        subscriber.complete();\n                    }\n                }\n            }));\n        });\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\nexport function takeUntil(notifier) {\n    return operate((source, subscriber) => {\n        innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n        !subscriber.closed && source.subscribe(subscriber);\n    });\n}\n","import { isFunction } from './isFunction';\nexport function hasLift(source) {\n    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n    return (source) => {\n        if (hasLift(source)) {\n            return source.lift(function (liftedSource) {\n                try {\n                    return init(liftedSource, this);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            });\n        }\n        throw new TypeError('Unable to lift unknown Observable type');\n    };\n}\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, inject, ViewChild, NgModule, Injector, TemplateRef, Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i3 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i3$1 from '@angular/cdk/portal';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport * as i1 from '@angular/cdk/platform';\nimport { take, takeUntil } from 'rxjs/operators';\nimport * as i2$1 from '@angular/cdk/a11y';\nimport * as i3$2 from '@angular/cdk/layout';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayModule, OverlayConfig } from '@angular/cdk/overlay';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Maximum amount of milliseconds that can be passed into setTimeout. */\nconst MAX_TIMEOUT = Math.pow(2, 31) - 1;\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n */\nclass MatSnackBarRef {\n    constructor(containerInstance, _overlayRef) {\n        this._overlayRef = _overlayRef;\n        /** Subject for notifying the user that the snack bar has been dismissed. */\n        this._afterDismissed = new Subject();\n        /** Subject for notifying the user that the snack bar has opened and appeared. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the snack bar action was called. */\n        this._onAction = new Subject();\n        /** Whether the snack bar was dismissed using the action button. */\n        this._dismissedByAction = false;\n        this.containerInstance = containerInstance;\n        containerInstance._onExit.subscribe(() => this._finishDismiss());\n    }\n    /** Dismisses the snack bar. */\n    dismiss() {\n        if (!this._afterDismissed.closed) {\n            this.containerInstance.exit();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /** Marks the snackbar action clicked. */\n    dismissWithAction() {\n        if (!this._onAction.closed) {\n            this._dismissedByAction = true;\n            this._onAction.next();\n            this._onAction.complete();\n            this.dismiss();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /**\n     * Marks the snackbar action clicked.\n     * @deprecated Use `dismissWithAction` instead.\n     * @breaking-change 8.0.0\n     */\n    closeWithAction() {\n        this.dismissWithAction();\n    }\n    /** Dismisses the snack bar after some duration */\n    _dismissAfter(duration) {\n        // Note that we need to cap the duration to the maximum value for setTimeout, because\n        // it'll revert to 1 if somebody passes in something greater (e.g. `Infinity`). See #17234.\n        this._durationTimeoutId = setTimeout(() => this.dismiss(), Math.min(duration, MAX_TIMEOUT));\n    }\n    /** Marks the snackbar as opened */\n    _open() {\n        if (!this._afterOpened.closed) {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }\n    }\n    /** Cleans up the DOM after closing. */\n    _finishDismiss() {\n        this._overlayRef.dispose();\n        if (!this._onAction.closed) {\n            this._onAction.complete();\n        }\n        this._afterDismissed.next({ dismissedByAction: this._dismissedByAction });\n        this._afterDismissed.complete();\n        this._dismissedByAction = false;\n    }\n    /** Gets an observable that is notified when the snack bar is finished closing. */\n    afterDismissed() {\n        return this._afterDismissed;\n    }\n    /** Gets an observable that is notified when the snack bar has opened and appeared. */\n    afterOpened() {\n        return this.containerInstance._onEnter;\n    }\n    /** Gets an observable that is notified when the snack bar action is called. */\n    onAction() {\n        return this._onAction;\n    }\n}\n\n/** Injection token that can be used to access the data that was passed in to a snack bar. */\nconst MAT_SNACK_BAR_DATA = new InjectionToken('MatSnackBarData');\n/**\n * Configuration used when opening a snack-bar.\n */\nclass MatSnackBarConfig {\n    constructor() {\n        /** The politeness level for the MatAriaLiveAnnouncer announcement. */\n        this.politeness = 'assertive';\n        /**\n         * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n         * component or template, the announcement message will default to the specified message.\n         */\n        this.announcementMessage = '';\n        /** The length of time in milliseconds to wait before automatically dismissing the snack bar. */\n        this.duration = 0;\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** The horizontal position to place the snack bar. */\n        this.horizontalPosition = 'center';\n        /** The vertical position to place the snack bar. */\n        this.verticalPosition = 'bottom';\n    }\n}\n\n/** Directive that should be applied to the text element to be rendered in the snack bar. */\nclass MatSnackBarLabel {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBarLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatSnackBarLabel, selector: \"[matSnackBarLabel]\", host: { classAttribute: \"mat-mdc-snack-bar-label mdc-snackbar__label\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBarLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[matSnackBarLabel]`,\n                    host: {\n                        'class': 'mat-mdc-snack-bar-label mdc-snackbar__label',\n                    },\n                }]\n        }] });\n/** Directive that should be applied to the element containing the snack bar's action buttons. */\nclass MatSnackBarActions {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBarActions, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatSnackBarActions, selector: \"[matSnackBarActions]\", host: { classAttribute: \"mat-mdc-snack-bar-actions mdc-snackbar__actions\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBarActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[matSnackBarActions]`,\n                    host: {\n                        'class': 'mat-mdc-snack-bar-actions mdc-snackbar__actions',\n                    },\n                }]\n        }] });\n/** Directive that should be applied to each of the snack bar's action buttons. */\nclass MatSnackBarAction {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBarAction, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatSnackBarAction, selector: \"[matSnackBarAction]\", host: { classAttribute: \"mat-mdc-snack-bar-action mdc-snackbar__action\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBarAction, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[matSnackBarAction]`,\n                    host: {\n                        'class': 'mat-mdc-snack-bar-action mdc-snackbar__action',\n                    },\n                }]\n        }] });\n\nclass SimpleSnackBar {\n    constructor(snackBarRef, data) {\n        this.snackBarRef = snackBarRef;\n        this.data = data;\n    }\n    /** Performs the action on the snack bar. */\n    action() {\n        this.snackBarRef.dismissWithAction();\n    }\n    /** If the action button should be shown. */\n    get hasAction() {\n        return !!this.data.action;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: SimpleSnackBar, deps: [{ token: MatSnackBarRef }, { token: MAT_SNACK_BAR_DATA }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: SimpleSnackBar, selector: \"simple-snack-bar\", host: { classAttribute: \"mat-mdc-simple-snack-bar\" }, exportAs: [\"matSnackBar\"], ngImport: i0, template: \"<div matSnackBarLabel>\\n  {{data.message}}\\n</div>\\n\\n<div matSnackBarActions *ngIf=\\\"hasAction\\\">\\n  <button mat-button matSnackBarAction (click)=\\\"action()\\\">\\n    {{data.action}}\\n  </button>\\n</div>\\n\", styles: [\".mat-mdc-simple-snack-bar{display:flex}\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i3.MatButton, selector: \"    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  \", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }, { kind: \"directive\", type: MatSnackBarLabel, selector: \"[matSnackBarLabel]\" }, { kind: \"directive\", type: MatSnackBarActions, selector: \"[matSnackBarActions]\" }, { kind: \"directive\", type: MatSnackBarAction, selector: \"[matSnackBarAction]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: SimpleSnackBar, decorators: [{\n            type: Component,\n            args: [{ selector: 'simple-snack-bar', exportAs: 'matSnackBar', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'class': 'mat-mdc-simple-snack-bar',\n                    }, template: \"<div matSnackBarLabel>\\n  {{data.message}}\\n</div>\\n\\n<div matSnackBarActions *ngIf=\\\"hasAction\\\">\\n  <button mat-button matSnackBarAction (click)=\\\"action()\\\">\\n    {{data.action}}\\n  </button>\\n</div>\\n\", styles: [\".mat-mdc-simple-snack-bar{display:flex}\"] }]\n        }], ctorParameters: function () { return [{ type: MatSnackBarRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SNACK_BAR_DATA]\n                }] }]; } });\n\n/**\n * Animations used by the Material snack bar.\n * @docs-private\n */\nconst matSnackBarAnimations = {\n    /** Animation that shows and hides a snack bar. */\n    snackBarState: trigger('state', [\n        state('void, hidden', style({\n            transform: 'scale(0.8)',\n            opacity: 0,\n        })),\n        state('visible', style({\n            transform: 'scale(1)',\n            opacity: 1,\n        })),\n        transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void, * => hidden', animate('75ms cubic-bezier(0.4, 0.0, 1, 1)', style({\n            opacity: 0,\n        }))),\n    ]),\n};\n\nlet uniqueId = 0;\n/**\n * Base class for snack bar containers.\n * @docs-private\n */\nclass _MatSnackBarContainerBase extends BasePortalOutlet {\n    constructor(_ngZone, _elementRef, _changeDetectorRef, _platform, \n    /** The snack bar configuration. */\n    snackBarConfig) {\n        super();\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._platform = _platform;\n        this.snackBarConfig = snackBarConfig;\n        this._document = inject(DOCUMENT);\n        this._trackedModals = new Set();\n        /** The number of milliseconds to wait before announcing the snack bar's content. */\n        this._announceDelay = 150;\n        /** Whether the component has been destroyed. */\n        this._destroyed = false;\n        /** Subject for notifying that the snack bar has announced to screen readers. */\n        this._onAnnounce = new Subject();\n        /** Subject for notifying that the snack bar has exited from view. */\n        this._onExit = new Subject();\n        /** Subject for notifying that the snack bar has finished entering the view. */\n        this._onEnter = new Subject();\n        /** The state of the snack bar animations. */\n        this._animationState = 'void';\n        /** Unique ID of the aria-live element. */\n        this._liveElementId = `mat-snack-bar-container-live-${uniqueId++}`;\n        /**\n         * Attaches a DOM portal to the snack bar container.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            this._assertNotAttached();\n            const result = this._portalOutlet.attachDomPortal(portal);\n            this._afterPortalAttached();\n            return result;\n        };\n        // Use aria-live rather than a live role like 'alert' or 'status'\n        // because NVDA and JAWS have show inconsistent behavior with live roles.\n        if (snackBarConfig.politeness === 'assertive' && !snackBarConfig.announcementMessage) {\n            this._live = 'assertive';\n        }\n        else if (snackBarConfig.politeness === 'off') {\n            this._live = 'off';\n        }\n        else {\n            this._live = 'polite';\n        }\n        // Only set role for Firefox. Set role based on aria-live because setting role=\"alert\" implies\n        // aria-live=\"assertive\" which may cause issues if aria-live is set to \"polite\" above.\n        if (this._platform.FIREFOX) {\n            if (this._live === 'polite') {\n                this._role = 'status';\n            }\n            if (this._live === 'assertive') {\n                this._role = 'alert';\n            }\n        }\n    }\n    /** Attach a component portal as content to this snack bar container. */\n    attachComponentPortal(portal) {\n        this._assertNotAttached();\n        const result = this._portalOutlet.attachComponentPortal(portal);\n        this._afterPortalAttached();\n        return result;\n    }\n    /** Attach a template portal as content to this snack bar container. */\n    attachTemplatePortal(portal) {\n        this._assertNotAttached();\n        const result = this._portalOutlet.attachTemplatePortal(portal);\n        this._afterPortalAttached();\n        return result;\n    }\n    /** Handle end of animations, updating the state of the snackbar. */\n    onAnimationEnd(event) {\n        const { fromState, toState } = event;\n        if ((toState === 'void' && fromState !== 'void') || toState === 'hidden') {\n            this._completeExit();\n        }\n        if (toState === 'visible') {\n            // Note: we shouldn't use `this` inside the zone callback,\n            // because it can cause a memory leak.\n            const onEnter = this._onEnter;\n            this._ngZone.run(() => {\n                onEnter.next();\n                onEnter.complete();\n            });\n        }\n    }\n    /** Begin animation of snack bar entrance into view. */\n    enter() {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            this._changeDetectorRef.detectChanges();\n            this._screenReaderAnnounce();\n        }\n    }\n    /** Begin animation of the snack bar exiting from view. */\n    exit() {\n        // It's common for snack bars to be opened by random outside calls like HTTP requests or\n        // errors. Run inside the NgZone to ensure that it functions correctly.\n        this._ngZone.run(() => {\n            // Note: this one transitions to `hidden`, rather than `void`, in order to handle the case\n            // where multiple snack bars are opened in quick succession (e.g. two consecutive calls to\n            // `MatSnackBar.open`).\n            this._animationState = 'hidden';\n            // Mark this element with an 'exit' attribute to indicate that the snackbar has\n            // been dismissed and will soon be removed from the DOM. This is used by the snackbar\n            // test harness.\n            this._elementRef.nativeElement.setAttribute('mat-exit', '');\n            // If the snack bar hasn't been announced by the time it exits it wouldn't have been open\n            // long enough to visually read it either, so clear the timeout for announcing.\n            clearTimeout(this._announceTimeoutId);\n        });\n        return this._onExit;\n    }\n    /** Makes sure the exit callbacks have been invoked when the element is destroyed. */\n    ngOnDestroy() {\n        this._destroyed = true;\n        this._clearFromModals();\n        this._completeExit();\n    }\n    /**\n     * Waits for the zone to settle before removing the element. Helps prevent\n     * errors where we end up removing an element which is in the middle of an animation.\n     */\n    _completeExit() {\n        this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n            this._ngZone.run(() => {\n                this._onExit.next();\n                this._onExit.complete();\n            });\n        });\n    }\n    /**\n     * Called after the portal contents have been attached. Can be\n     * used to modify the DOM once it's guaranteed to be in place.\n     */\n    _afterPortalAttached() {\n        const element = this._elementRef.nativeElement;\n        const panelClasses = this.snackBarConfig.panelClass;\n        if (panelClasses) {\n            if (Array.isArray(panelClasses)) {\n                // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n                panelClasses.forEach(cssClass => element.classList.add(cssClass));\n            }\n            else {\n                element.classList.add(panelClasses);\n            }\n        }\n        this._exposeToModals();\n    }\n    /**\n     * Some browsers won't expose the accessibility node of the live element if there is an\n     * `aria-modal` and the live element is outside of it. This method works around the issue by\n     * pointing the `aria-owns` of all modals to the live element.\n     */\n    _exposeToModals() {\n        // TODO(crisbeto): consider de-duplicating this with the `LiveAnnouncer`.\n        // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n        // section of the DOM we need to look through. This should cover all the cases we support, but\n        // the selector can be expanded if it turns out to be too narrow.\n        const id = this._liveElementId;\n        const modals = this._document.querySelectorAll('body > .cdk-overlay-container [aria-modal=\"true\"]');\n        for (let i = 0; i < modals.length; i++) {\n            const modal = modals[i];\n            const ariaOwns = modal.getAttribute('aria-owns');\n            this._trackedModals.add(modal);\n            if (!ariaOwns) {\n                modal.setAttribute('aria-owns', id);\n            }\n            else if (ariaOwns.indexOf(id) === -1) {\n                modal.setAttribute('aria-owns', ariaOwns + ' ' + id);\n            }\n        }\n    }\n    /** Clears the references to the live element from any modals it was added to. */\n    _clearFromModals() {\n        this._trackedModals.forEach(modal => {\n            const ariaOwns = modal.getAttribute('aria-owns');\n            if (ariaOwns) {\n                const newValue = ariaOwns.replace(this._liveElementId, '').trim();\n                if (newValue.length > 0) {\n                    modal.setAttribute('aria-owns', newValue);\n                }\n                else {\n                    modal.removeAttribute('aria-owns');\n                }\n            }\n        });\n        this._trackedModals.clear();\n    }\n    /** Asserts that no content is already attached to the container. */\n    _assertNotAttached() {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempting to attach snack bar content after content is already attached');\n        }\n    }\n    /**\n     * Starts a timeout to move the snack bar content to the live region so screen readers will\n     * announce it.\n     */\n    _screenReaderAnnounce() {\n        if (!this._announceTimeoutId) {\n            this._ngZone.runOutsideAngular(() => {\n                this._announceTimeoutId = setTimeout(() => {\n                    const inertElement = this._elementRef.nativeElement.querySelector('[aria-hidden]');\n                    const liveElement = this._elementRef.nativeElement.querySelector('[aria-live]');\n                    if (inertElement && liveElement) {\n                        // If an element in the snack bar content is focused before being moved\n                        // track it and restore focus after moving to the live region.\n                        let focusedElement = null;\n                        if (this._platform.isBrowser &&\n                            document.activeElement instanceof HTMLElement &&\n                            inertElement.contains(document.activeElement)) {\n                            focusedElement = document.activeElement;\n                        }\n                        inertElement.removeAttribute('aria-hidden');\n                        liveElement.appendChild(inertElement);\n                        focusedElement?.focus();\n                        this._onAnnounce.next();\n                        this._onAnnounce.complete();\n                    }\n                }, this._announceDelay);\n            });\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: _MatSnackBarContainerBase, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.Platform }, { token: MatSnackBarConfig }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: _MatSnackBarContainerBase, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: _MatSnackBarContainerBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.Platform }, { type: MatSnackBarConfig }]; }, propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }] } });\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n */\nclass MatSnackBarContainer extends _MatSnackBarContainerBase {\n    /** Applies the correct CSS class to the label based on its content. */\n    _afterPortalAttached() {\n        super._afterPortalAttached();\n        // Check to see if the attached component or template uses the MDC template structure,\n        // specifically the MDC label. If not, the container should apply the MDC label class to this\n        // component's label container, which will apply MDC's label styles to the attached view.\n        const label = this._label.nativeElement;\n        const labelClass = 'mdc-snackbar__label';\n        label.classList.toggle(labelClass, !label.querySelector(`.${labelClass}`));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBarContainer, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatSnackBarContainer, selector: \"mat-snack-bar-container\", host: { listeners: { \"@state.done\": \"onAnimationEnd($event)\" }, properties: { \"@state\": \"_animationState\" }, classAttribute: \"mdc-snackbar mat-mdc-snack-bar-container mdc-snackbar--open\" }, viewQueries: [{ propertyName: \"_label\", first: true, predicate: [\"label\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mdc-snackbar__surface\\\">\\n  <!--\\n    This outer label wrapper will have the class `mdc-snackbar__label` applied if\\n    the attached template/component does not contain it.\\n  -->\\n  <div class=\\\"mat-mdc-snack-bar-label\\\" #label>\\n    <!-- Initialy holds the snack bar content, will be empty after announcing to screen readers. -->\\n    <div aria-hidden=\\\"true\\\">\\n      <ng-template cdkPortalOutlet></ng-template>\\n    </div>\\n\\n    <!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n    <div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\" [attr.id]=\\\"_liveElementId\\\"></div>\\n  </div>\\n</div>\\n\", styles: [\".mdc-snackbar{display:none;position:fixed;right:0;bottom:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;pointer-events:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mdc-snackbar--opening,.mdc-snackbar--open,.mdc-snackbar--closing{display:flex}.mdc-snackbar--open .mdc-snackbar__label,.mdc-snackbar--open .mdc-snackbar__actions{visibility:visible}.mdc-snackbar__surface{padding-left:0;padding-right:8px;display:flex;align-items:center;justify-content:flex-start;box-sizing:border-box;transform:scale(0.8);opacity:0}.mdc-snackbar__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-snackbar__surface::before{border-color:CanvasText}}[dir=rtl] .mdc-snackbar__surface,.mdc-snackbar__surface[dir=rtl]{padding-left:8px;padding-right:0}.mdc-snackbar--open .mdc-snackbar__surface{transform:scale(1);opacity:1;pointer-events:auto}.mdc-snackbar--closing .mdc-snackbar__surface{transform:scale(1)}.mdc-snackbar__label{padding-left:16px;padding-right:8px;width:100%;flex-grow:1;box-sizing:border-box;margin:0;visibility:hidden;padding-top:14px;padding-bottom:14px}[dir=rtl] .mdc-snackbar__label,.mdc-snackbar__label[dir=rtl]{padding-left:8px;padding-right:16px}.mdc-snackbar__label::before{display:inline;content:attr(data-mdc-snackbar-label-text)}.mdc-snackbar__actions{display:flex;flex-shrink:0;align-items:center;box-sizing:border-box;visibility:hidden}.mdc-snackbar__action+.mdc-snackbar__dismiss{margin-left:8px;margin-right:0}[dir=rtl] .mdc-snackbar__action+.mdc-snackbar__dismiss,.mdc-snackbar__action+.mdc-snackbar__dismiss[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-snack-bar-container{margin:8px;--mdc-snackbar-container-shape:4px;position:static}.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:344px}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:100%}}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container{width:100vw}}.mat-mdc-snack-bar-container .mdc-snackbar__surface{max-width:672px}.mat-mdc-snack-bar-container .mdc-snackbar__surface{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{background-color:var(--mdc-snackbar-container-color)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{border-radius:var(--mdc-snackbar-container-shape)}.mat-mdc-snack-bar-container .mdc-snackbar__label{color:var(--mdc-snackbar-supporting-text-color)}.mat-mdc-snack-bar-container .mdc-snackbar__label{font-size:var(--mdc-snackbar-supporting-text-size);font-family:var(--mdc-snackbar-supporting-text-font);font-weight:var(--mdc-snackbar-supporting-text-weight);line-height:var(--mdc-snackbar-supporting-text-line-height)}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled){color:var(--mat-snack-bar-button-color);--mat-mdc-button-persistent-ripple-color: currentColor}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled) .mat-ripple-element{background-color:currentColor;opacity:.1}.mat-mdc-snack-bar-container .mdc-snackbar__label::before{display:none}.mat-mdc-snack-bar-handset,.mat-mdc-snack-bar-container,.mat-mdc-snack-bar-label{flex:1 1 auto}.mat-mdc-snack-bar-handset .mdc-snackbar__surface{width:100%}\"], dependencies: [{ kind: \"directive\", type: i3$1.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matSnackBarAnimations.snackBarState], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBarContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-snack-bar-container', changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, animations: [matSnackBarAnimations.snackBarState], host: {\n                        'class': 'mdc-snackbar mat-mdc-snack-bar-container mdc-snackbar--open',\n                        '[@state]': '_animationState',\n                        '(@state.done)': 'onAnimationEnd($event)',\n                    }, template: \"<div class=\\\"mdc-snackbar__surface\\\">\\n  <!--\\n    This outer label wrapper will have the class `mdc-snackbar__label` applied if\\n    the attached template/component does not contain it.\\n  -->\\n  <div class=\\\"mat-mdc-snack-bar-label\\\" #label>\\n    <!-- Initialy holds the snack bar content, will be empty after announcing to screen readers. -->\\n    <div aria-hidden=\\\"true\\\">\\n      <ng-template cdkPortalOutlet></ng-template>\\n    </div>\\n\\n    <!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n    <div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\" [attr.id]=\\\"_liveElementId\\\"></div>\\n  </div>\\n</div>\\n\", styles: [\".mdc-snackbar{display:none;position:fixed;right:0;bottom:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;pointer-events:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mdc-snackbar--opening,.mdc-snackbar--open,.mdc-snackbar--closing{display:flex}.mdc-snackbar--open .mdc-snackbar__label,.mdc-snackbar--open .mdc-snackbar__actions{visibility:visible}.mdc-snackbar__surface{padding-left:0;padding-right:8px;display:flex;align-items:center;justify-content:flex-start;box-sizing:border-box;transform:scale(0.8);opacity:0}.mdc-snackbar__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-snackbar__surface::before{border-color:CanvasText}}[dir=rtl] .mdc-snackbar__surface,.mdc-snackbar__surface[dir=rtl]{padding-left:8px;padding-right:0}.mdc-snackbar--open .mdc-snackbar__surface{transform:scale(1);opacity:1;pointer-events:auto}.mdc-snackbar--closing .mdc-snackbar__surface{transform:scale(1)}.mdc-snackbar__label{padding-left:16px;padding-right:8px;width:100%;flex-grow:1;box-sizing:border-box;margin:0;visibility:hidden;padding-top:14px;padding-bottom:14px}[dir=rtl] .mdc-snackbar__label,.mdc-snackbar__label[dir=rtl]{padding-left:8px;padding-right:16px}.mdc-snackbar__label::before{display:inline;content:attr(data-mdc-snackbar-label-text)}.mdc-snackbar__actions{display:flex;flex-shrink:0;align-items:center;box-sizing:border-box;visibility:hidden}.mdc-snackbar__action+.mdc-snackbar__dismiss{margin-left:8px;margin-right:0}[dir=rtl] .mdc-snackbar__action+.mdc-snackbar__dismiss,.mdc-snackbar__action+.mdc-snackbar__dismiss[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-snack-bar-container{margin:8px;--mdc-snackbar-container-shape:4px;position:static}.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:344px}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:100%}}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container{width:100vw}}.mat-mdc-snack-bar-container .mdc-snackbar__surface{max-width:672px}.mat-mdc-snack-bar-container .mdc-snackbar__surface{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{background-color:var(--mdc-snackbar-container-color)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{border-radius:var(--mdc-snackbar-container-shape)}.mat-mdc-snack-bar-container .mdc-snackbar__label{color:var(--mdc-snackbar-supporting-text-color)}.mat-mdc-snack-bar-container .mdc-snackbar__label{font-size:var(--mdc-snackbar-supporting-text-size);font-family:var(--mdc-snackbar-supporting-text-font);font-weight:var(--mdc-snackbar-supporting-text-weight);line-height:var(--mdc-snackbar-supporting-text-line-height)}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled){color:var(--mat-snack-bar-button-color);--mat-mdc-button-persistent-ripple-color: currentColor}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled) .mat-ripple-element{background-color:currentColor;opacity:.1}.mat-mdc-snack-bar-container .mdc-snackbar__label::before{display:none}.mat-mdc-snack-bar-handset,.mat-mdc-snack-bar-container,.mat-mdc-snack-bar-label{flex:1 1 auto}.mat-mdc-snack-bar-handset .mdc-snackbar__surface{width:100%}\"] }]\n        }], propDecorators: { _label: [{\n                type: ViewChild,\n                args: ['label', { static: true }]\n            }] } });\n\nclass MatSnackBarModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBarModule, declarations: [SimpleSnackBar,\n            MatSnackBarContainer,\n            MatSnackBarLabel,\n            MatSnackBarActions,\n            MatSnackBarAction], imports: [OverlayModule, PortalModule, CommonModule, MatButtonModule, MatCommonModule], exports: [MatCommonModule,\n            MatSnackBarContainer,\n            MatSnackBarLabel,\n            MatSnackBarActions,\n            MatSnackBarAction] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBarModule, imports: [OverlayModule, PortalModule, CommonModule, MatButtonModule, MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, PortalModule, CommonModule, MatButtonModule, MatCommonModule],\n                    exports: [\n                        MatCommonModule,\n                        MatSnackBarContainer,\n                        MatSnackBarLabel,\n                        MatSnackBarActions,\n                        MatSnackBarAction,\n                    ],\n                    declarations: [\n                        SimpleSnackBar,\n                        MatSnackBarContainer,\n                        MatSnackBarLabel,\n                        MatSnackBarActions,\n                        MatSnackBarAction,\n                    ],\n                }]\n        }] });\n\n/** @docs-private */\nfunction MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY() {\n    return new MatSnackBarConfig();\n}\n/** Injection token that can be used to specify default snack bar. */\nconst MAT_SNACK_BAR_DEFAULT_OPTIONS = new InjectionToken('mat-snack-bar-default-options', {\n    providedIn: 'root',\n    factory: MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY,\n});\nclass _MatSnackBarBase {\n    /** Reference to the currently opened snackbar at *any* level. */\n    get _openedSnackBarRef() {\n        const parent = this._parentSnackBar;\n        return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\n    }\n    set _openedSnackBarRef(value) {\n        if (this._parentSnackBar) {\n            this._parentSnackBar._openedSnackBarRef = value;\n        }\n        else {\n            this._snackBarRefAtThisLevel = value;\n        }\n    }\n    constructor(_overlay, _live, _injector, _breakpointObserver, _parentSnackBar, _defaultConfig) {\n        this._overlay = _overlay;\n        this._live = _live;\n        this._injector = _injector;\n        this._breakpointObserver = _breakpointObserver;\n        this._parentSnackBar = _parentSnackBar;\n        this._defaultConfig = _defaultConfig;\n        /**\n         * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n         * If there is a parent snack-bar service, all operations should delegate to that parent\n         * via `_openedSnackBarRef`.\n         */\n        this._snackBarRefAtThisLevel = null;\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom component for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param component Component to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    openFromComponent(component, config) {\n        return this._attach(component, config);\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom template for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param template Template to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    openFromTemplate(template, config) {\n        return this._attach(template, config);\n    }\n    /**\n     * Opens a snackbar with a message and an optional action.\n     * @param message The message to show in the snackbar.\n     * @param action The label for the snackbar action.\n     * @param config Additional configuration options for the snackbar.\n     */\n    open(message, action = '', config) {\n        const _config = { ...this._defaultConfig, ...config };\n        // Since the user doesn't have access to the component, we can\n        // override the data to pass in our own message and action.\n        _config.data = { message, action };\n        // Since the snack bar has `role=\"alert\"`, we don't\n        // want to announce the same message twice.\n        if (_config.announcementMessage === message) {\n            _config.announcementMessage = undefined;\n        }\n        return this.openFromComponent(this.simpleSnackBarComponent, _config);\n    }\n    /**\n     * Dismisses the currently-visible snack bar.\n     */\n    dismiss() {\n        if (this._openedSnackBarRef) {\n            this._openedSnackBarRef.dismiss();\n        }\n    }\n    ngOnDestroy() {\n        // Only dismiss the snack bar at the current level on destroy.\n        if (this._snackBarRefAtThisLevel) {\n            this._snackBarRefAtThisLevel.dismiss();\n        }\n    }\n    /**\n     * Attaches the snack bar container component to the overlay.\n     */\n    _attachSnackBarContainer(overlayRef, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatSnackBarConfig, useValue: config }],\n        });\n        const containerPortal = new ComponentPortal(this.snackBarContainerComponent, config.viewContainerRef, injector);\n        const containerRef = overlayRef.attach(containerPortal);\n        containerRef.instance.snackBarConfig = config;\n        return containerRef.instance;\n    }\n    /**\n     * Places a new component or a template as the content of the snack bar container.\n     */\n    _attach(content, userConfig) {\n        const config = { ...new MatSnackBarConfig(), ...this._defaultConfig, ...userConfig };\n        const overlayRef = this._createOverlay(config);\n        const container = this._attachSnackBarContainer(overlayRef, config);\n        const snackBarRef = new MatSnackBarRef(container, overlayRef);\n        if (content instanceof TemplateRef) {\n            const portal = new TemplatePortal(content, null, {\n                $implicit: config.data,\n                snackBarRef,\n            });\n            snackBarRef.instance = container.attachTemplatePortal(portal);\n        }\n        else {\n            const injector = this._createInjector(config, snackBarRef);\n            const portal = new ComponentPortal(content, undefined, injector);\n            const contentRef = container.attachComponentPortal(portal);\n            // We can't pass this via the injector, because the injector is created earlier.\n            snackBarRef.instance = contentRef.instance;\n        }\n        // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as\n        // appropriate. This class is applied to the overlay element because the overlay must expand to\n        // fill the width of the screen for full width snackbars.\n        this._breakpointObserver\n            .observe(Breakpoints.HandsetPortrait)\n            .pipe(takeUntil(overlayRef.detachments()))\n            .subscribe(state => {\n            overlayRef.overlayElement.classList.toggle(this.handsetCssClass, state.matches);\n        });\n        if (config.announcementMessage) {\n            // Wait until the snack bar contents have been announced then deliver this message.\n            container._onAnnounce.subscribe(() => {\n                this._live.announce(config.announcementMessage, config.politeness);\n            });\n        }\n        this._animateSnackBar(snackBarRef, config);\n        this._openedSnackBarRef = snackBarRef;\n        return this._openedSnackBarRef;\n    }\n    /** Animates the old snack bar out and the new one in. */\n    _animateSnackBar(snackBarRef, config) {\n        // When the snackbar is dismissed, clear the reference to it.\n        snackBarRef.afterDismissed().subscribe(() => {\n            // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n            if (this._openedSnackBarRef == snackBarRef) {\n                this._openedSnackBarRef = null;\n            }\n            if (config.announcementMessage) {\n                this._live.clear();\n            }\n        });\n        if (this._openedSnackBarRef) {\n            // If a snack bar is already in view, dismiss it and enter the\n            // new snack bar after exit animation is complete.\n            this._openedSnackBarRef.afterDismissed().subscribe(() => {\n                snackBarRef.containerInstance.enter();\n            });\n            this._openedSnackBarRef.dismiss();\n        }\n        else {\n            // If no snack bar is in view, enter the new snack bar.\n            snackBarRef.containerInstance.enter();\n        }\n        // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n        if (config.duration && config.duration > 0) {\n            snackBarRef.afterOpened().subscribe(() => snackBarRef._dismissAfter(config.duration));\n        }\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified snack bar config.\n     */\n    _createOverlay(config) {\n        const overlayConfig = new OverlayConfig();\n        overlayConfig.direction = config.direction;\n        let positionStrategy = this._overlay.position().global();\n        // Set horizontal position.\n        const isRtl = config.direction === 'rtl';\n        const isLeft = config.horizontalPosition === 'left' ||\n            (config.horizontalPosition === 'start' && !isRtl) ||\n            (config.horizontalPosition === 'end' && isRtl);\n        const isRight = !isLeft && config.horizontalPosition !== 'center';\n        if (isLeft) {\n            positionStrategy.left('0');\n        }\n        else if (isRight) {\n            positionStrategy.right('0');\n        }\n        else {\n            positionStrategy.centerHorizontally();\n        }\n        // Set horizontal position.\n        if (config.verticalPosition === 'top') {\n            positionStrategy.top('0');\n        }\n        else {\n            positionStrategy.bottom('0');\n        }\n        overlayConfig.positionStrategy = positionStrategy;\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a snack bar component.\n     * @param config Config that was used to create the snack bar.\n     * @param snackBarRef Reference to the snack bar.\n     */\n    _createInjector(config, snackBarRef) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        return Injector.create({\n            parent: userInjector || this._injector,\n            providers: [\n                { provide: MatSnackBarRef, useValue: snackBarRef },\n                { provide: MAT_SNACK_BAR_DATA, useValue: config.data },\n            ],\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: _MatSnackBarBase, deps: [{ token: i1$1.Overlay }, { token: i2$1.LiveAnnouncer }, { token: i0.Injector }, { token: i3$2.BreakpointObserver }, { token: _MatSnackBarBase, optional: true, skipSelf: true }, { token: MAT_SNACK_BAR_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: _MatSnackBarBase }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: _MatSnackBarBase, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Overlay }, { type: i2$1.LiveAnnouncer }, { type: i0.Injector }, { type: i3$2.BreakpointObserver }, { type: _MatSnackBarBase, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: MatSnackBarConfig, decorators: [{\n                    type: Inject,\n                    args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n                }] }]; } });\n/**\n * Service to dispatch Material Design snack bar messages.\n */\nclass MatSnackBar extends _MatSnackBarBase {\n    constructor(overlay, live, injector, breakpointObserver, parentSnackBar, defaultConfig) {\n        super(overlay, live, injector, breakpointObserver, parentSnackBar, defaultConfig);\n        this.simpleSnackBarComponent = SimpleSnackBar;\n        this.snackBarContainerComponent = MatSnackBarContainer;\n        this.handsetCssClass = 'mat-mdc-snack-bar-handset';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBar, deps: [{ token: i1$1.Overlay }, { token: i2$1.LiveAnnouncer }, { token: i0.Injector }, { token: i3$2.BreakpointObserver }, { token: MatSnackBar, optional: true, skipSelf: true }, { token: MAT_SNACK_BAR_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBar, providedIn: MatSnackBarModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatSnackBar, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: MatSnackBarModule }]\n        }], ctorParameters: function () { return [{ type: i1$1.Overlay }, { type: i2$1.LiveAnnouncer }, { type: i0.Injector }, { type: i3$2.BreakpointObserver }, { type: MatSnackBar, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: MatSnackBarConfig, decorators: [{\n                    type: Inject,\n                    args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n                }] }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SNACK_BAR_DATA, MAT_SNACK_BAR_DEFAULT_OPTIONS, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MatSnackBar, MatSnackBarAction, MatSnackBarActions, MatSnackBarConfig, MatSnackBarContainer, MatSnackBarLabel, MatSnackBarModule, MatSnackBarRef, SimpleSnackBar, _MatSnackBarBase, _MatSnackBarContainerBase, matSnackBarAnimations };\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]}