{"version":3,"file":"2512.8486909d30dd5906.js","mappings":"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","names":["urlParsingNode","BrowserDomAdapter","_GenericBrowserDomAda","_inherits","_super2","_createSuper","_classCallCheck","this","apply","arguments","_createClass","key","value","el","evt","listener","addEventListener","removeEventListener","dispatchEvent","node","parentNode","removeChild","tagName","doc","getDefaultDocument","createElement","document","implementation","createHTMLDocument","nodeType","Node","ELEMENT_NODE","DocumentFragment","target","window","body","href","getBaseElementHref","baseElement","querySelector","getAttribute","relativePath","url","setAttribute","pathName","pathname","charAt","concat","navigator","userAgent","name","ɵparseCookieValue","cookie","ɵsetRootDomAdapter","_ɵDomAdapter","GenericBrowserDomAdapter","_super","_this","supportsDOMEvents","ɵDomAdapter","BrowserGetTestability","registry","ɵglobal","elem","testability","findTestabilityInTree","length","undefined","ɵRuntimeError","ngDevMode","getAllTestabilities","getAllRootElements","callback","testabilities","count","didWork","decrement","didWork_","forEach","whenStable","findInAncestors","getTestability","ɵgetDOM","isShadowRoot","host","parentElement","BrowserXhr","XMLHttpRequest","ɵfac","t","ɵprov","i0","token","factory","EVENT_MANAGER_PLUGINS","InjectionToken","EventManager","plugins","_zone","_this2","_eventNameToPlugin","Map","plugin","manager","_plugins","slice","reverse","element","eventName","handler","_findPluginFor","get","find","supports","set","EventManagerPlugin","_doc","APP_ID_ATTRIBUTE_NAME","SharedStylesHost","appId","nonce","platformId","styleRef","hostNodes","Set","styleNodesInDOM","collectServerRenderedStyles","platformIsServer","isPlatformServer","resetHostNodes","styles","_step","_iterator","_createForOfIteratorHelper","s","n","done","style","changeUsageCount","onStyleAdded","err","e","f","_step2","_iterator2","onStyleRemoved","remove","clear","_step3","_iterator3","getAllStyles","hostNode","add","_step4","_iterator4","addStyleToHost","delete","keys","_step5","_iterator5","_styleRef$get","_styleRef$get$element","elements","_this$doc$head","head","querySelectorAll","styleMap","textContent","delta","map","has","styleRefValue","usage","styleEl","removeAttribute","_styleRef$get2","getStyleElement","appendChild","styleElRef","push","DOCUMENT","APP_ID","CSP_NONCE","PLATFORM_ID","NAMESPACE_URIS","svg","xhtml","xlink","xml","xmlns","math","COMPONENT_REGEX","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","REMOVE_STYLES_ON_COMPONENT_DESTROY","providedIn","shimStylesContent","compId","replace","DomRendererFactory2","eventManager","sharedStylesHost","removeStylesOnCompDestory","ngZone","rendererByCompId","defaultRenderer","DefaultDomRenderer2","type","encapsulation","ViewEncapsulation","_objectSpread","renderer","getOrCreateRenderer","EmulatedEncapsulationDomRenderer2","applyToHost","NoneEncapsulationDomRenderer","applyStyles","id","ShadowDomRenderer","onDestroy","data","Object","create","destroyNode","namespace","createElementNS","createComment","createTextNode","parent","newChild","isTemplateNode","content","refChild","insertBefore","oldChild","selectorOrNode","preserveContent","nextSibling","namespaceUri","setAttributeNS","removeAttributeNS","classList","flags","RendererStyleFlags2","setProperty","removeProperty","nodeValue","event","getGlobalEventTarget","Error","decoratePreventDefault","eventHandler","_this3","runGuarded","preventDefault","_DefaultDomRenderer","_super3","hostEl","component","_this4","call","shadowRoot","attachShadow","mode","addHost","_step6","_iterator6","_get","_getPrototypeOf","prototype","nodeOrShadowRoot","removeHost","_DefaultDomRenderer2","_super4","_this5","rendererUsageCount","addStyles","_this$onDestroy","removeStyles","_NoneEncapsulationDom","_super5","_this6","contentAttr","shimContentAttribute","componentShortId","hostAttr","shimHostAttribute","DomEventsPlugin","_EventManagerPlugin","_super6","_this7","MODIFIER_KEYS","_keyMap","Del","Esc","Left","Right","Up","Down","Menu","Scroll","Win","MODIFIER_KEY_GETTERS","alt","altKey","control","ctrlKey","meta","metaKey","shift","shiftKey","KeyEventsPlugin","_EventManagerPlugin2","_super7","parseEventName","parsedEvent","outsideHandler","eventCallback","fullKey","getZone","runOutsideAngular","onAndCancel","domEventName","parts","toLowerCase","split","_normalizeKey","pop","codeIX","indexOf","splice","modifierName","index","result","fullKeyCode","keycode","code","modifierGetter","zone","matchEventFullKeyCode","keyName","bootstrapApplication","rootComponent","options","ɵinternalCreateApplication","createProvidersConfig","createApplication","_options$providers","appProviders","BROWSER_MODULE_PROVIDERS","_toConsumableArray","providers","platformProviders","INTERNAL_BROWSER_PLATFORM_PROVIDERS","provideProtractorTestingSupport","TESTABILITY_PROVIDERS","initDomAdapter","makeCurrent","provide","useValue","ɵPLATFORM_BROWSER_ID","PLATFORM_INITIALIZER","multi","useFactory","_document","ɵsetDocument","deps","platformBrowser","createPlatformFactory","platformCore","BROWSER_MODULE_PROVIDERS_MARKER","ɵTESTABILITY_GETTER","useClass","ɵTESTABILITY","Testability","NgZone","TestabilityRegistry","ɵINJECTOR_SCOPE","ErrorHandler","errorHandler","RendererFactory2","useExisting","XhrFactory","BrowserModule","providersAlreadyPresent","params","ngModule","ɵmod","ɵinj","imports","CommonModule","ApplicationModule","Meta","_dom","tag","_getOrCreateElement","tags","_this8","forceCreation","reduce","attrSelector","list","selector","_parseSelector","getTag","_setMetaElementAttributes","removeTagElement","_this9","getTags","filter","_containsAttributes","getElementsByTagName","_this10","prop","_getMetaKeyMap","attr","_this11","every","META_KEYS_MAP","createMeta","ɵɵinject","httpEquiv","Title","title","newTitle","createTitle","exportNgVar","COMPILED","win","ChangeDetectionPerfRecord","msPerTick","numTicks","AngularProfiler","ref","appRef","injector","ApplicationRef","config","record","profileName","isProfilerAvailable","console","profile","start","performanceNow","tick","end","profileEnd","log","toFixed","performance","now","Date","getTime","PROFILER_GLOBAL_NAME","enableDebugTools","disableDebugTools","By","debugElement","nativeElement","elementMatches","isElementNode","matches","msMatchesSelector","webkitMatchesSelector","debugNode","providerTokens","EVENT_NAMES","pan","panstart","panmove","panend","pancancel","panleft","panright","panup","pandown","pinch","pinchstart","pinchmove","pinchend","pinchcancel","pinchin","pinchout","press","pressup","rotate","rotatestart","rotatemove","rotateend","rotatecancel","swipe","swipeleft","swiperight","swipeup","swipedown","tap","doubletap","HAMMER_GESTURE_CONFIG","HAMMER_LOADER","HammerGestureConfig","events","overrides","mc","Hammer","enable","HammerGesturesPlugin","_EventManagerPlugin3","_super8","_config","loader","_this12","_loaderPromise","hasOwnProperty","isCustomEvent","_this13","cancelRegistration","deregister","then","catch","buildHammer","eventObj","on","off","destroy","HammerModule","ɵConsole","Optional","DomSanitizer","DomSanitizerImpl","_DomSanitizer","_super9","_this14","ctx","SecurityContext","ɵallowSanitizationBypassAndThrow","ɵunwrapSafeValue","ɵ_sanitizeHtml","String","toString","ɵ_sanitizeUrl","ɵbypassSanitizationTrustHtml","ɵbypassSanitizationTrustStyle","ɵbypassSanitizationTrustScript","ɵbypassSanitizationTrustUrl","ɵbypassSanitizationTrustResourceUrl","r","domSanitizerImplFactory","Injector","hydrationFeature","kind","ɵkind","ɵproviders","withNoDomReuse","withNoHttpTransferCache","provideClientHydration","featuresKind","_len","features","Array","_key","_i","_features","_features$_i","makeEnvironmentProviders","ɵwithDomHydration","ɵwithHttpTransferCache","VERSION","Version","makeStateKey","makeStateKey$1","TransferState","TransferState$1","_defineProperty","obj","_toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__","Z","defineProperty","enumerable","configurable","writable","Reflect","bind","property","receiver","base","_superPropBase","object","getPrototypeOf","desc","getOwnPropertyDescriptor","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","_objectSpread2","i","source","_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":"webpack:///","sources":["./node_modules/@angular/platform-browser/fesm2022/platform-browser.mjs","./node_modules/@babel/runtime/helpers/esm/defineProperty.js","./node_modules/@babel/runtime/helpers/esm/get.js","./node_modules/@babel/runtime/helpers/esm/superPropBase.js","./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["/**\n * @license Angular v16.0.5\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { ɵglobal, ɵRuntimeError, Injectable, InjectionToken, Inject, APP_ID, CSP_NONCE, PLATFORM_ID, Optional, ViewEncapsulation, RendererStyleFlags2, ɵinternalCreateApplication, ErrorHandler, ɵsetDocument, PLATFORM_INITIALIZER, createPlatformFactory, platformCore, ɵTESTABILITY_GETTER, ɵTESTABILITY, Testability, NgZone, TestabilityRegistry, ɵINJECTOR_SCOPE, RendererFactory2, ApplicationModule, NgModule, SkipSelf, ɵɵinject, ApplicationRef, ɵConsole, forwardRef, ɵXSS_SECURITY_URL, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, Injector, ENVIRONMENT_INITIALIZER, inject, ɵformatRuntimeError, makeEnvironmentProviders, ɵwithDomHydration, Version, makeStateKey as makeStateKey$1, TransferState as TransferState$1 } from '@angular/core';\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, isPlatformServer, DOCUMENT, ɵPLATFORM_BROWSER_ID, XhrFactory, CommonModule } from '@angular/common';\nexport { ɵgetDOM } from '@angular/common';\nimport { ɵwithHttpTransferCache } from '@angular/common/http';\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass GenericBrowserDomAdapter extends ɵDomAdapter {\n    constructor() {\n        super(...arguments);\n        this.supportsDOMEvents = true;\n    }\n}\n\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n    static makeCurrent() {\n        ɵsetRootDomAdapter(new BrowserDomAdapter());\n    }\n    onAndCancel(el, evt, listener) {\n        el.addEventListener(evt, listener);\n        return () => {\n            el.removeEventListener(evt, listener);\n        };\n    }\n    dispatchEvent(el, evt) {\n        el.dispatchEvent(evt);\n    }\n    remove(node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n    }\n    createElement(tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElement(tagName);\n    }\n    createHtmlDocument() {\n        return document.implementation.createHTMLDocument('fakeTitle');\n    }\n    getDefaultDocument() {\n        return document;\n    }\n    isElementNode(node) {\n        return node.nodeType === Node.ELEMENT_NODE;\n    }\n    isShadowRoot(node) {\n        return node instanceof DocumentFragment;\n    }\n    /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n    getGlobalEventTarget(doc, target) {\n        if (target === 'window') {\n            return window;\n        }\n        if (target === 'document') {\n            return doc;\n        }\n        if (target === 'body') {\n            return doc.body;\n        }\n        return null;\n    }\n    getBaseHref(doc) {\n        const href = getBaseElementHref();\n        return href == null ? null : relativePath(href);\n    }\n    resetBaseElement() {\n        baseElement = null;\n    }\n    getUserAgent() {\n        return window.navigator.userAgent;\n    }\n    getCookie(name) {\n        return ɵparseCookieValue(document.cookie, name);\n    }\n}\nlet baseElement = null;\nfunction getBaseElementHref() {\n    baseElement = baseElement || document.querySelector('base');\n    return baseElement ? baseElement.getAttribute('href') : null;\n}\n// based on urlUtils.js in AngularJS 1\nlet urlParsingNode;\nfunction relativePath(url) {\n    urlParsingNode = urlParsingNode || document.createElement('a');\n    urlParsingNode.setAttribute('href', url);\n    const pathName = urlParsingNode.pathname;\n    return pathName.charAt(0) === '/' ? pathName : `/${pathName}`;\n}\n\nclass BrowserGetTestability {\n    addToWindow(registry) {\n        ɵglobal['getAngularTestability'] = (elem, findInAncestors = true) => {\n            const testability = registry.findTestabilityInTree(elem, findInAncestors);\n            if (testability == null) {\n                throw new ɵRuntimeError(5103 /* RuntimeErrorCode.TESTABILITY_NOT_FOUND */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    'Could not find testability for element.');\n            }\n            return testability;\n        };\n        ɵglobal['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n        ɵglobal['getAllAngularRootElements'] = () => registry.getAllRootElements();\n        const whenAllStable = (callback /** TODO #9100 */) => {\n            const testabilities = ɵglobal['getAllAngularTestabilities']();\n            let count = testabilities.length;\n            let didWork = false;\n            const decrement = function (didWork_ /** TODO #9100 */) {\n                didWork = didWork || didWork_;\n                count--;\n                if (count == 0) {\n                    callback(didWork);\n                }\n            };\n            testabilities.forEach(function (testability /** TODO #9100 */) {\n                testability.whenStable(decrement);\n            });\n        };\n        if (!ɵglobal['frameworkStabilizers']) {\n            ɵglobal['frameworkStabilizers'] = [];\n        }\n        ɵglobal['frameworkStabilizers'].push(whenAllStable);\n    }\n    findTestabilityInTree(registry, elem, findInAncestors) {\n        if (elem == null) {\n            return null;\n        }\n        const t = registry.getTestability(elem);\n        if (t != null) {\n            return t;\n        }\n        else if (!findInAncestors) {\n            return null;\n        }\n        if (ɵgetDOM().isShadowRoot(elem)) {\n            return this.findTestabilityInTree(registry, elem.host, true);\n        }\n        return this.findTestabilityInTree(registry, elem.parentElement, true);\n    }\n}\n\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n */\nclass BrowserXhr {\n    build() {\n        return new XMLHttpRequest();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: BrowserXhr, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: BrowserXhr }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: BrowserXhr, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nconst EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nclass EventManager {\n    /**\n     * Initializes an instance of the event-manager service.\n     */\n    constructor(plugins, _zone) {\n        this._zone = _zone;\n        this._eventNameToPlugin = new Map();\n        plugins.forEach((plugin) => {\n            plugin.manager = this;\n        });\n        this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * Registers a handler for a specific element and event.\n     *\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns  A callback function that can be used to remove the handler.\n     */\n    addEventListener(element, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addEventListener(element, eventName, handler);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n    getZone() {\n        return this._zone;\n    }\n    /** @internal */\n    _findPluginFor(eventName) {\n        let plugin = this._eventNameToPlugin.get(eventName);\n        if (plugin) {\n            return plugin;\n        }\n        const plugins = this._plugins;\n        plugin = plugins.find((plugin) => plugin.supports(eventName));\n        if (!plugin) {\n            throw new ɵRuntimeError(5101 /* RuntimeErrorCode.NO_PLUGIN_FOR_EVENT */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                `No event manager plugin found for event ${eventName}`);\n        }\n        this._eventNameToPlugin.set(eventName, plugin);\n        return plugin;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: EventManager, deps: [{ token: EVENT_MANAGER_PLUGINS }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: EventManager }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: EventManager, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [EVENT_MANAGER_PLUGINS]\n                }] }, { type: i0.NgZone }]; } });\nclass EventManagerPlugin {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n}\n\n/** The style elements attribute name used to set value of `APP_ID` token. */\nconst APP_ID_ATTRIBUTE_NAME = 'ng-app-id';\nclass SharedStylesHost {\n    constructor(doc, appId, nonce, platformId = {}) {\n        this.doc = doc;\n        this.appId = appId;\n        this.nonce = nonce;\n        this.platformId = platformId;\n        // Maps all registered host nodes to a list of style nodes that have been added to the host node.\n        this.styleRef = new Map();\n        this.hostNodes = new Set();\n        this.styleNodesInDOM = this.collectServerRenderedStyles();\n        this.platformIsServer = isPlatformServer(platformId);\n        this.resetHostNodes();\n    }\n    addStyles(styles) {\n        for (const style of styles) {\n            const usageCount = this.changeUsageCount(style, 1);\n            if (usageCount === 1) {\n                this.onStyleAdded(style);\n            }\n        }\n    }\n    removeStyles(styles) {\n        for (const style of styles) {\n            const usageCount = this.changeUsageCount(style, -1);\n            if (usageCount <= 0) {\n                this.onStyleRemoved(style);\n            }\n        }\n    }\n    ngOnDestroy() {\n        const styleNodesInDOM = this.styleNodesInDOM;\n        if (styleNodesInDOM) {\n            styleNodesInDOM.forEach((node) => node.remove());\n            styleNodesInDOM.clear();\n        }\n        for (const style of this.getAllStyles()) {\n            this.onStyleRemoved(style);\n        }\n        this.resetHostNodes();\n    }\n    addHost(hostNode) {\n        this.hostNodes.add(hostNode);\n        for (const style of this.getAllStyles()) {\n            this.addStyleToHost(hostNode, style);\n        }\n    }\n    removeHost(hostNode) {\n        this.hostNodes.delete(hostNode);\n    }\n    getAllStyles() {\n        return this.styleRef.keys();\n    }\n    onStyleAdded(style) {\n        for (const host of this.hostNodes) {\n            this.addStyleToHost(host, style);\n        }\n    }\n    onStyleRemoved(style) {\n        const styleRef = this.styleRef;\n        styleRef.get(style)?.elements?.forEach((node) => node.remove());\n        styleRef.delete(style);\n    }\n    collectServerRenderedStyles() {\n        const styles = this.doc.head?.querySelectorAll(`style[${APP_ID_ATTRIBUTE_NAME}=\"${this.appId}\"]`);\n        if (styles?.length) {\n            const styleMap = new Map();\n            styles.forEach((style) => {\n                if (style.textContent != null) {\n                    styleMap.set(style.textContent, style);\n                }\n            });\n            return styleMap;\n        }\n        return null;\n    }\n    changeUsageCount(style, delta) {\n        const map = this.styleRef;\n        if (map.has(style)) {\n            const styleRefValue = map.get(style);\n            styleRefValue.usage += delta;\n            return styleRefValue.usage;\n        }\n        map.set(style, { usage: delta, elements: [] });\n        return delta;\n    }\n    getStyleElement(host, style) {\n        const styleNodesInDOM = this.styleNodesInDOM;\n        const styleEl = styleNodesInDOM?.get(style);\n        if (styleEl?.parentNode === host) {\n            // `styleNodesInDOM` cannot be undefined due to the above `styleNodesInDOM?.get`.\n            styleNodesInDOM.delete(style);\n            styleEl.removeAttribute(APP_ID_ATTRIBUTE_NAME);\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                // This attribute is solely used for debugging purposes.\n                styleEl.setAttribute('ng-style-reused', '');\n            }\n            return styleEl;\n        }\n        else {\n            const styleEl = this.doc.createElement('style');\n            if (this.nonce) {\n                styleEl.setAttribute('nonce', this.nonce);\n            }\n            styleEl.textContent = style;\n            if (this.platformIsServer) {\n                styleEl.setAttribute(APP_ID_ATTRIBUTE_NAME, this.appId);\n            }\n            return styleEl;\n        }\n    }\n    addStyleToHost(host, style) {\n        const styleEl = this.getStyleElement(host, style);\n        host.appendChild(styleEl);\n        const styleRef = this.styleRef;\n        const styleElRef = styleRef.get(style)?.elements;\n        if (styleElRef) {\n            styleElRef.push(styleEl);\n        }\n        else {\n            styleRef.set(style, { elements: [styleEl], usage: 1 });\n        }\n    }\n    resetHostNodes() {\n        const hostNodes = this.hostNodes;\n        hostNodes.clear();\n        // Re-add the head element back since this is the default host.\n        hostNodes.add(this.doc.head);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: SharedStylesHost, deps: [{ token: DOCUMENT }, { token: APP_ID }, { token: CSP_NONCE, optional: true }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: SharedStylesHost }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: SharedStylesHost, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CSP_NONCE]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\n\nconst NAMESPACE_URIS = {\n    'svg': 'http://www.w3.org/2000/svg',\n    'xhtml': 'http://www.w3.org/1999/xhtml',\n    'xlink': 'http://www.w3.org/1999/xlink',\n    'xml': 'http://www.w3.org/XML/1998/namespace',\n    'xmlns': 'http://www.w3.org/2000/xmlns/',\n    'math': 'http://www.w3.org/1998/MathML/',\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n/**\n * The default value for the `REMOVE_STYLES_ON_COMPONENT_DESTROY` DI token.\n */\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT = false;\n/**\n * A [DI token](guide/glossary#di-token \"DI token definition\") that indicates whether styles\n * of destroyed components should be removed from DOM.\n *\n * By default, the value is set to `false`. This will be changed in the next major version.\n * @publicApi\n */\nconst REMOVE_STYLES_ON_COMPONENT_DESTROY = new InjectionToken('RemoveStylesOnCompDestory', {\n    providedIn: 'root',\n    factory: () => REMOVE_STYLES_ON_COMPONENT_DESTROY_DEFAULT,\n});\nfunction shimContentAttribute(componentShortId) {\n    return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n    return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimStylesContent(compId, styles) {\n    return styles.map(s => s.replace(COMPONENT_REGEX, compId));\n}\nclass DomRendererFactory2 {\n    constructor(eventManager, sharedStylesHost, appId, removeStylesOnCompDestory, doc, platformId, ngZone, nonce = null) {\n        this.eventManager = eventManager;\n        this.sharedStylesHost = sharedStylesHost;\n        this.appId = appId;\n        this.removeStylesOnCompDestory = removeStylesOnCompDestory;\n        this.doc = doc;\n        this.platformId = platformId;\n        this.ngZone = ngZone;\n        this.nonce = nonce;\n        this.rendererByCompId = new Map();\n        this.platformIsServer = isPlatformServer(platformId);\n        this.defaultRenderer =\n            new DefaultDomRenderer2(eventManager, doc, ngZone, this.platformIsServer);\n    }\n    createRenderer(element, type) {\n        if (!element || !type) {\n            return this.defaultRenderer;\n        }\n        if (this.platformIsServer && type.encapsulation === ViewEncapsulation.ShadowDom) {\n            // Domino does not support shadow DOM.\n            type = { ...type, encapsulation: ViewEncapsulation.Emulated };\n        }\n        const renderer = this.getOrCreateRenderer(element, type);\n        // Renderers have different logic due to different encapsulation behaviours.\n        // Ex: for emulated, an attribute is added to the element.\n        if (renderer instanceof EmulatedEncapsulationDomRenderer2) {\n            renderer.applyToHost(element);\n        }\n        else if (renderer instanceof NoneEncapsulationDomRenderer) {\n            renderer.applyStyles();\n        }\n        return renderer;\n    }\n    getOrCreateRenderer(element, type) {\n        const rendererByCompId = this.rendererByCompId;\n        let renderer = rendererByCompId.get(type.id);\n        if (!renderer) {\n            const doc = this.doc;\n            const ngZone = this.ngZone;\n            const eventManager = this.eventManager;\n            const sharedStylesHost = this.sharedStylesHost;\n            const removeStylesOnCompDestory = this.removeStylesOnCompDestory;\n            const platformIsServer = this.platformIsServer;\n            switch (type.encapsulation) {\n                case ViewEncapsulation.Emulated:\n                    renderer = new EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, type, this.appId, removeStylesOnCompDestory, doc, ngZone, platformIsServer);\n                    break;\n                case ViewEncapsulation.ShadowDom:\n                    return new ShadowDomRenderer(eventManager, sharedStylesHost, element, type, doc, ngZone, this.nonce, platformIsServer);\n                default:\n                    renderer = new NoneEncapsulationDomRenderer(eventManager, sharedStylesHost, type, removeStylesOnCompDestory, doc, ngZone, platformIsServer);\n                    break;\n            }\n            renderer.onDestroy = () => rendererByCompId.delete(type.id);\n            rendererByCompId.set(type.id, renderer);\n        }\n        return renderer;\n    }\n    ngOnDestroy() {\n        this.rendererByCompId.clear();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: DomRendererFactory2, deps: [{ token: EventManager }, { token: SharedStylesHost }, { token: APP_ID }, { token: REMOVE_STYLES_ON_COMPONENT_DESTROY }, { token: DOCUMENT }, { token: PLATFORM_ID }, { token: i0.NgZone }, { token: CSP_NONCE }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: DomRendererFactory2 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: DomRendererFactory2, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: EventManager }, { type: SharedStylesHost }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [REMOVE_STYLES_ON_COMPONENT_DESTROY]\n                }] }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CSP_NONCE]\n                }] }]; } });\nclass DefaultDomRenderer2 {\n    constructor(eventManager, doc, ngZone, platformIsServer) {\n        this.eventManager = eventManager;\n        this.doc = doc;\n        this.ngZone = ngZone;\n        this.platformIsServer = platformIsServer;\n        this.data = Object.create(null);\n        this.destroyNode = null;\n    }\n    destroy() { }\n    createElement(name, namespace) {\n        if (namespace) {\n            // TODO: `|| namespace` was added in\n            // https://github.com/angular/angular/commit/2b9cc8503d48173492c29f5a271b61126104fbdb to\n            // support how Ivy passed around the namespace URI rather than short name at the time. It did\n            // not, however extend the support to other parts of the system (setAttribute, setAttribute,\n            // and the ServerRenderer). We should decide what exactly the semantics for dealing with\n            // namespaces should be and make it consistent.\n            // Related issues:\n            // https://github.com/angular/angular/issues/44028\n            // https://github.com/angular/angular/issues/44883\n            return this.doc.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n        }\n        return this.doc.createElement(name);\n    }\n    createComment(value) {\n        return this.doc.createComment(value);\n    }\n    createText(value) {\n        return this.doc.createTextNode(value);\n    }\n    appendChild(parent, newChild) {\n        const targetParent = isTemplateNode(parent) ? parent.content : parent;\n        targetParent.appendChild(newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        if (parent) {\n            const targetParent = isTemplateNode(parent) ? parent.content : parent;\n            targetParent.insertBefore(newChild, refChild);\n        }\n    }\n    removeChild(parent, oldChild) {\n        if (parent) {\n            parent.removeChild(oldChild);\n        }\n    }\n    selectRootElement(selectorOrNode, preserveContent) {\n        let el = typeof selectorOrNode === 'string' ? this.doc.querySelector(selectorOrNode) :\n            selectorOrNode;\n        if (!el) {\n            throw new ɵRuntimeError(5104 /* RuntimeErrorCode.ROOT_NODE_NOT_FOUND */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                `The selector \"${selectorOrNode}\" did not match any elements`);\n        }\n        if (!preserveContent) {\n            el.textContent = '';\n        }\n        return el;\n    }\n    parentNode(node) {\n        return node.parentNode;\n    }\n    nextSibling(node) {\n        return node.nextSibling;\n    }\n    setAttribute(el, name, value, namespace) {\n        if (namespace) {\n            name = namespace + ':' + name;\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.setAttributeNS(namespaceUri, name, value);\n            }\n            else {\n                el.setAttribute(name, value);\n            }\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n    }\n    removeAttribute(el, name, namespace) {\n        if (namespace) {\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.removeAttributeNS(namespaceUri, name);\n            }\n            else {\n                el.removeAttribute(`${namespace}:${name}`);\n            }\n        }\n        else {\n            el.removeAttribute(name);\n        }\n    }\n    addClass(el, name) {\n        el.classList.add(name);\n    }\n    removeClass(el, name) {\n        el.classList.remove(name);\n    }\n    setStyle(el, style, value, flags) {\n        if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n            el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n        }\n        else {\n            el.style[style] = value;\n        }\n    }\n    removeStyle(el, style, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            // removeProperty has no effect when used on camelCased properties.\n            el.style.removeProperty(style);\n        }\n        else {\n            el.style[style] = '';\n        }\n    }\n    setProperty(el, name, value) {\n        (typeof ngDevMode === 'undefined' || ngDevMode) && checkNoSyntheticProp(name, 'property');\n        el[name] = value;\n    }\n    setValue(node, value) {\n        node.nodeValue = value;\n    }\n    listen(target, event, callback) {\n        (typeof ngDevMode === 'undefined' || ngDevMode) && checkNoSyntheticProp(event, 'listener');\n        if (typeof target === 'string') {\n            target = ɵgetDOM().getGlobalEventTarget(this.doc, target);\n            if (!target) {\n                throw new Error(`Unsupported event target ${target} for event ${event}`);\n            }\n        }\n        return this.eventManager.addEventListener(target, event, this.decoratePreventDefault(callback));\n    }\n    decoratePreventDefault(eventHandler) {\n        // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n        // decoratePreventDefault or is a listener added outside the Angular context so it can handle\n        // the two differently. In the first case, the special '__ngUnwrap__' token is passed to the\n        // unwrap the listener (see below).\n        return (event) => {\n            // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The\n            // debug_node can inspect the listener toString contents for the existence of this special\n            // token. Because the token is a string literal, it is ensured to not be modified by compiled\n            // code.\n            if (event === '__ngUnwrap__') {\n                return eventHandler;\n            }\n            // Run the event handler inside the ngZone because event handlers are not patched\n            // by Zone on the server. This is required only for tests.\n            const allowDefaultBehavior = this.platformIsServer ?\n                this.ngZone.runGuarded(() => eventHandler(event)) :\n                eventHandler(event);\n            if (allowDefaultBehavior === false) {\n                event.preventDefault();\n            }\n            return undefined;\n        };\n    }\n}\nconst AT_CHARCODE = (() => '@'.charCodeAt(0))();\nfunction checkNoSyntheticProp(name, nameKind) {\n    if (name.charCodeAt(0) === AT_CHARCODE) {\n        throw new ɵRuntimeError(5105 /* RuntimeErrorCode.UNEXPECTED_SYNTHETIC_PROPERTY */, `Unexpected synthetic ${nameKind} ${name} found. Please make sure that:\n  - Either \\`BrowserAnimationsModule\\` or \\`NoopAnimationsModule\\` are imported in your application.\n  - There is corresponding configuration for the animation named \\`${name}\\` defined in the \\`animations\\` field of the \\`@Component\\` decorator (see https://angular.io/api/core/Component#animations).`);\n    }\n}\nfunction isTemplateNode(node) {\n    return node.tagName === 'TEMPLATE' && node.content !== undefined;\n}\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, hostEl, component, doc, ngZone, nonce, platformIsServer) {\n        super(eventManager, doc, ngZone, platformIsServer);\n        this.sharedStylesHost = sharedStylesHost;\n        this.hostEl = hostEl;\n        this.shadowRoot = hostEl.attachShadow({ mode: 'open' });\n        this.sharedStylesHost.addHost(this.shadowRoot);\n        const styles = shimStylesContent(component.id, component.styles);\n        for (const style of styles) {\n            const styleEl = document.createElement('style');\n            if (nonce) {\n                styleEl.setAttribute('nonce', nonce);\n            }\n            styleEl.textContent = style;\n            this.shadowRoot.appendChild(styleEl);\n        }\n    }\n    nodeOrShadowRoot(node) {\n        return node === this.hostEl ? this.shadowRoot : node;\n    }\n    appendChild(parent, newChild) {\n        return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n    }\n    removeChild(parent, oldChild) {\n        return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n    }\n    parentNode(node) {\n        return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n    }\n    destroy() {\n        this.sharedStylesHost.removeHost(this.shadowRoot);\n    }\n}\nclass NoneEncapsulationDomRenderer extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, component, removeStylesOnCompDestory, doc, ngZone, platformIsServer, compId) {\n        super(eventManager, doc, ngZone, platformIsServer);\n        this.sharedStylesHost = sharedStylesHost;\n        this.removeStylesOnCompDestory = removeStylesOnCompDestory;\n        this.rendererUsageCount = 0;\n        this.styles = compId ? shimStylesContent(compId, component.styles) : component.styles;\n    }\n    applyStyles() {\n        this.sharedStylesHost.addStyles(this.styles);\n        this.rendererUsageCount++;\n    }\n    destroy() {\n        if (!this.removeStylesOnCompDestory) {\n            return;\n        }\n        this.sharedStylesHost.removeStyles(this.styles);\n        this.rendererUsageCount--;\n        if (this.rendererUsageCount === 0) {\n            this.onDestroy?.();\n        }\n    }\n}\nclass EmulatedEncapsulationDomRenderer2 extends NoneEncapsulationDomRenderer {\n    constructor(eventManager, sharedStylesHost, component, appId, removeStylesOnCompDestory, doc, ngZone, platformIsServer) {\n        const compId = appId + '-' + component.id;\n        super(eventManager, sharedStylesHost, component, removeStylesOnCompDestory, doc, ngZone, platformIsServer, compId);\n        this.contentAttr = shimContentAttribute(compId);\n        this.hostAttr = shimHostAttribute(compId);\n    }\n    applyToHost(element) {\n        this.applyStyles();\n        this.setAttribute(element, this.hostAttr, '');\n    }\n    createElement(parent, name) {\n        const el = super.createElement(parent, name);\n        super.setAttribute(el, this.contentAttr, '');\n        return el;\n    }\n}\n\nclass DomEventsPlugin extends EventManagerPlugin {\n    constructor(doc) {\n        super(doc);\n    }\n    // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n    supports(eventName) {\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        element.addEventListener(eventName, handler, false);\n        return () => this.removeEventListener(element, eventName, handler);\n    }\n    removeEventListener(target, eventName, callback) {\n        return target.removeEventListener(eventName, callback);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: DomEventsPlugin, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: DomEventsPlugin }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: DomEventsPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\n// The following values are here for cross-browser compatibility and to match the W3C standard\n// cf https://www.w3.org/TR/DOM-Level-3-Events-key/\nconst _keyMap = {\n    '\\b': 'Backspace',\n    '\\t': 'Tab',\n    '\\x7F': 'Delete',\n    '\\x1B': 'Escape',\n    'Del': 'Delete',\n    'Esc': 'Escape',\n    'Left': 'ArrowLeft',\n    'Right': 'ArrowRight',\n    'Up': 'ArrowUp',\n    'Down': 'ArrowDown',\n    'Menu': 'ContextMenu',\n    'Scroll': 'ScrollLock',\n    'Win': 'OS'\n};\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS = {\n    'alt': (event) => event.altKey,\n    'control': (event) => event.ctrlKey,\n    'meta': (event) => event.metaKey,\n    'shift': (event) => event.shiftKey\n};\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nclass KeyEventsPlugin extends EventManagerPlugin {\n    /**\n     * Initializes an instance of the browser plug-in.\n     * @param doc The document in which key events will be detected.\n     */\n    constructor(doc) {\n        super(doc);\n    }\n    /**\n     * Reports whether a named key event is supported.\n     * @param eventName The event name to query.\n     * @return True if the named key event is supported.\n     */\n    supports(eventName) {\n        return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n     */\n    addEventListener(element, eventName, handler) {\n        const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n        const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n        return this.manager.getZone().runOutsideAngular(() => {\n            return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n        });\n    }\n    /**\n     * Parses the user provided full keyboard event definition and normalizes it for\n     * later internal use. It ensures the string is all lowercase, converts special\n     * characters to a standard spelling, and orders all the values consistently.\n     *\n     * @param eventName The name of the key event to listen for.\n     * @returns an object with the full, normalized string, and the dom event name\n     * or null in the case when the event doesn't match a keyboard event.\n     */\n    static parseEventName(eventName) {\n        const parts = eventName.toLowerCase().split('.');\n        const domEventName = parts.shift();\n        if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n            return null;\n        }\n        const key = KeyEventsPlugin._normalizeKey(parts.pop());\n        let fullKey = '';\n        let codeIX = parts.indexOf('code');\n        if (codeIX > -1) {\n            parts.splice(codeIX, 1);\n            fullKey = 'code.';\n        }\n        MODIFIER_KEYS.forEach(modifierName => {\n            const index = parts.indexOf(modifierName);\n            if (index > -1) {\n                parts.splice(index, 1);\n                fullKey += modifierName + '.';\n            }\n        });\n        fullKey += key;\n        if (parts.length != 0 || key.length === 0) {\n            // returning null instead of throwing to let another plugin process the event\n            return null;\n        }\n        // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n        //       The code must remain in the `result['domEventName']` form.\n        // return {domEventName, fullKey};\n        const result = {};\n        result['domEventName'] = domEventName;\n        result['fullKey'] = fullKey;\n        return result;\n    }\n    /**\n     * Determines whether the actual keys pressed match the configured key code string.\n     * The `fullKeyCode` event is normalized in the `parseEventName` method when the\n     * event is attached to the DOM during the `addEventListener` call. This is unseen\n     * by the end user and is normalized for internal consistency and parsing.\n     *\n     * @param event The keyboard event.\n     * @param fullKeyCode The normalized user defined expected key event string\n     * @returns boolean.\n     */\n    static matchEventFullKeyCode(event, fullKeyCode) {\n        let keycode = _keyMap[event.key] || event.key;\n        let key = '';\n        if (fullKeyCode.indexOf('code.') > -1) {\n            keycode = event.code;\n            key = 'code.';\n        }\n        // the keycode could be unidentified so we have to check here\n        if (keycode == null || !keycode)\n            return false;\n        keycode = keycode.toLowerCase();\n        if (keycode === ' ') {\n            keycode = 'space'; // for readability\n        }\n        else if (keycode === '.') {\n            keycode = 'dot'; // because '.' is used as a separator in event names\n        }\n        MODIFIER_KEYS.forEach(modifierName => {\n            if (modifierName !== keycode) {\n                const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                if (modifierGetter(event)) {\n                    key += modifierName + '.';\n                }\n            }\n        });\n        key += keycode;\n        return key === fullKeyCode;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n    static eventCallback(fullKey, handler, zone) {\n        return (event) => {\n            if (KeyEventsPlugin.matchEventFullKeyCode(event, fullKey)) {\n                zone.runGuarded(() => handler(event));\n            }\n        };\n    }\n    /** @internal */\n    static _normalizeKey(keyName) {\n        // TODO: switch to a Map if the mapping grows too much\n        switch (keyName) {\n            case 'esc':\n                return 'escape';\n            default:\n                return keyName;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: KeyEventsPlugin, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: KeyEventsPlugin }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: KeyEventsPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * Bootstraps an instance of an Angular application and renders a standalone component as the\n * application's root component. More information about standalone components can be found in [this\n * guide](guide/standalone-components).\n *\n * @usageNotes\n * The root component passed into this function *must* be a standalone one (should have the\n * `standalone: true` flag in the `@Component` decorator config).\n *\n * ```typescript\n * @Component({\n *   standalone: true,\n *   template: 'Hello world!'\n * })\n * class RootComponent {}\n *\n * const appRef: ApplicationRef = await bootstrapApplication(RootComponent);\n * ```\n *\n * You can add the list of providers that should be available in the application injector by\n * specifying the `providers` field in an object passed as the second argument:\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     {provide: BACKEND_URL, useValue: 'https://yourdomain.com/api'}\n *   ]\n * });\n * ```\n *\n * The `importProvidersFrom` helper method can be used to collect all providers from any\n * existing NgModule (and transitively from all NgModules that it imports):\n *\n * ```typescript\n * await bootstrapApplication(RootComponent, {\n *   providers: [\n *     importProvidersFrom(SomeNgModule)\n *   ]\n * });\n * ```\n *\n * Note: the `bootstrapApplication` method doesn't include [Testability](api/core/Testability) by\n * default. You can add [Testability](api/core/Testability) by getting the list of necessary\n * providers using `provideProtractorTestingSupport()` function and adding them into the `providers`\n * array, for example:\n *\n * ```typescript\n * import {provideProtractorTestingSupport} from '@angular/platform-browser';\n *\n * await bootstrapApplication(RootComponent, {providers: [provideProtractorTestingSupport()]});\n * ```\n *\n * @param rootComponent A reference to a standalone component that should be rendered.\n * @param options Extra configuration for the bootstrap operation, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction bootstrapApplication(rootComponent, options) {\n    return ɵinternalCreateApplication({ rootComponent, ...createProvidersConfig(options) });\n}\n/**\n * Create an instance of an Angular application without bootstrapping any components. This is useful\n * for the situation where one wants to decouple application environment creation (a platform and\n * associated injectors) from rendering components on a screen. Components can be subsequently\n * bootstrapped on the returned `ApplicationRef`.\n *\n * @param options Extra configuration for the application environment, see `ApplicationConfig` for\n *     additional info.\n * @returns A promise that returns an `ApplicationRef` instance once resolved.\n *\n * @publicApi\n */\nfunction createApplication(options) {\n    return ɵinternalCreateApplication(createProvidersConfig(options));\n}\nfunction createProvidersConfig(options) {\n    return {\n        appProviders: [\n            ...BROWSER_MODULE_PROVIDERS,\n            ...(options?.providers ?? []),\n        ],\n        platformProviders: INTERNAL_BROWSER_PLATFORM_PROVIDERS\n    };\n}\n/**\n * Returns a set of providers required to setup [Testability](api/core/Testability) for an\n * application bootstrapped using the `bootstrapApplication` function. The set of providers is\n * needed to support testing an application with Protractor (which relies on the Testability APIs\n * to be present).\n *\n * @returns An array of providers required to setup Testability for an application and make it\n *     available for testing using Protractor.\n *\n * @publicApi\n */\nfunction provideProtractorTestingSupport() {\n    // Return a copy to prevent changes to the original array in case any in-place\n    // alterations are performed to the `provideProtractorTestingSupport` call results in app\n    // code.\n    return [...TESTABILITY_PROVIDERS];\n}\nfunction initDomAdapter() {\n    BrowserDomAdapter.makeCurrent();\n}\nfunction errorHandler() {\n    return new ErrorHandler();\n}\nfunction _document() {\n    // Tell ivy about the global document\n    ɵsetDocument(document);\n    return document;\n}\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n    { provide: PLATFORM_ID, useValue: ɵPLATFORM_BROWSER_ID },\n    { provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n    { provide: DOCUMENT, useFactory: _document, deps: [] },\n];\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * Internal marker to signal whether providers from the `BrowserModule` are already present in DI.\n * This is needed to avoid loading `BrowserModule` providers twice. We can't rely on the\n * `BrowserModule` presence itself, since the standalone-based bootstrap just imports\n * `BrowserModule` providers without referencing the module itself.\n */\nconst BROWSER_MODULE_PROVIDERS_MARKER = new InjectionToken((typeof ngDevMode === 'undefined' || ngDevMode) ? 'BrowserModule Providers Marker' : '');\nconst TESTABILITY_PROVIDERS = [\n    {\n        provide: ɵTESTABILITY_GETTER,\n        useClass: BrowserGetTestability,\n        deps: [],\n    },\n    {\n        provide: ɵTESTABILITY,\n        useClass: Testability,\n        deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n    },\n    {\n        provide: Testability,\n        useClass: Testability,\n        deps: [NgZone, TestabilityRegistry, ɵTESTABILITY_GETTER]\n    }\n];\nconst BROWSER_MODULE_PROVIDERS = [\n    { provide: ɵINJECTOR_SCOPE, useValue: 'root' },\n    { provide: ErrorHandler, useFactory: errorHandler, deps: [] }, {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: DomEventsPlugin,\n        multi: true,\n        deps: [DOCUMENT, NgZone, PLATFORM_ID]\n    },\n    { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT] },\n    DomRendererFactory2, SharedStylesHost, EventManager,\n    { provide: RendererFactory2, useExisting: DomRendererFactory2 },\n    { provide: XhrFactory, useClass: BrowserXhr, deps: [] },\n    (typeof ngDevMode === 'undefined' || ngDevMode) ?\n        { provide: BROWSER_MODULE_PROVIDERS_MARKER, useValue: true } :\n        []\n];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nclass BrowserModule {\n    constructor(providersAlreadyPresent) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && providersAlreadyPresent) {\n            throw new ɵRuntimeError(5100 /* RuntimeErrorCode.BROWER_MODULE_ALREADY_LOADED */, `Providers from the \\`BrowserModule\\` have already been loaded. If you need access ` +\n                `to common directives such as NgIf and NgFor, import the \\`CommonModule\\` instead.`);\n        }\n    }\n    /**\n     * Configures a browser-based app to transition from a server-rendered app, if\n     * one is present on the page.\n     *\n     * @param params An object containing an identifier for the app to transition.\n     * The ID must match between the client and server versions of the app.\n     * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n     *\n     * @deprecated Use {@link APP_ID} instead to set the application ID.\n     */\n    static withServerTransition(params) {\n        return {\n            ngModule: BrowserModule,\n            providers: [\n                { provide: APP_ID, useValue: params.appId },\n            ],\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: BrowserModule, deps: [{ token: BROWSER_MODULE_PROVIDERS_MARKER, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.5\", ngImport: i0, type: BrowserModule, exports: [CommonModule, ApplicationModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: BrowserModule, providers: [...BROWSER_MODULE_PROVIDERS, ...TESTABILITY_PROVIDERS], imports: [CommonModule, ApplicationModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: BrowserModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [...BROWSER_MODULE_PROVIDERS, ...TESTABILITY_PROVIDERS],\n                    exports: [CommonModule, ApplicationModule],\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [BROWSER_MODULE_PROVIDERS_MARKER]\n                }] }]; } });\n\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\nfunction createMeta() {\n    return new Meta(ɵɵinject(DOCUMENT));\n}\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nclass Meta {\n    constructor(_doc) {\n        this._doc = _doc;\n        this._dom = ɵgetDOM();\n    }\n    /**\n     * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * If an existing element is found, it is returned and is not modified in any way.\n     * @param tag The definition of a `<meta>` element to match or create.\n     * @param forceCreation True to create a new element without checking whether one already exists.\n     * @returns The existing element with the same attributes and values if found,\n     * the new element if no match is found, or `null` if the tag parameter is not defined.\n     */\n    addTag(tag, forceCreation = false) {\n        if (!tag)\n            return null;\n        return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * @param tags An array of tag definitions to match or create.\n     * @param forceCreation True to create new elements without checking whether they already exist.\n     * @returns The matching elements if found, or the new elements.\n     */\n    addTags(tags, forceCreation = false) {\n        if (!tags)\n            return [];\n        return tags.reduce((result, tag) => {\n            if (tag) {\n                result.push(this._getOrCreateElement(tag, forceCreation));\n            }\n            return result;\n        }, []);\n    }\n    /**\n     * Retrieves a `<meta>` tag element in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching element, if any.\n     */\n    getTag(attrSelector) {\n        if (!attrSelector)\n            return null;\n        return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n    }\n    /**\n     * Retrieves a set of `<meta>` tag elements in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching elements, if any.\n     */\n    getTags(attrSelector) {\n        if (!attrSelector)\n            return [];\n        const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n        return list ? [].slice.call(list) : [];\n    }\n    /**\n     * Modifies an existing `<meta>` tag element in the current HTML document.\n     * @param tag The tag description with which to replace the existing tag content.\n     * @param selector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n     * replacement tag.\n     * @return The modified element.\n     */\n    updateTag(tag, selector) {\n        if (!tag)\n            return null;\n        selector = selector || this._parseSelector(tag);\n        const meta = this.getTag(selector);\n        if (meta) {\n            return this._setMetaElementAttributes(tag, meta);\n        }\n        return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param attrSelector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     */\n    removeTag(attrSelector) {\n        this.removeTagElement(this.getTag(attrSelector));\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param meta The tag definition to match against to identify an existing tag.\n     */\n    removeTagElement(meta) {\n        if (meta) {\n            this._dom.remove(meta);\n        }\n    }\n    _getOrCreateElement(meta, forceCreation = false) {\n        if (!forceCreation) {\n            const selector = this._parseSelector(meta);\n            // It's allowed to have multiple elements with the same name so it's not enough to\n            // just check that element with the same name already present on the page. We also need to\n            // check if element has tag attributes\n            const elem = this.getTags(selector).filter(elem => this._containsAttributes(meta, elem))[0];\n            if (elem !== undefined)\n                return elem;\n        }\n        const element = this._dom.createElement('meta');\n        this._setMetaElementAttributes(meta, element);\n        const head = this._doc.getElementsByTagName('head')[0];\n        head.appendChild(element);\n        return element;\n    }\n    _setMetaElementAttributes(tag, el) {\n        Object.keys(tag).forEach((prop) => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n        return el;\n    }\n    _parseSelector(tag) {\n        const attr = tag.name ? 'name' : 'property';\n        return `${attr}=\"${tag[attr]}\"`;\n    }\n    _containsAttributes(tag, elem) {\n        return Object.keys(tag).every((key) => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n    }\n    _getMetaKeyMap(prop) {\n        return META_KEYS_MAP[prop] || prop;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: Meta, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: Meta, providedIn: 'root', useFactory: createMeta, deps: [] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: Meta, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: createMeta, deps: [] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP = {\n    httpEquiv: 'http-equiv'\n};\n\n/**\n * Factory to create Title service.\n */\nfunction createTitle() {\n    return new Title(ɵɵinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nclass Title {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     */\n    getTitle() {\n        return this._doc.title;\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n    setTitle(newTitle) {\n        this._doc.title = newTitle || '';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: Title, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: Title, providedIn: 'root', useFactory: createTitle, deps: [] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: Title, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: createTitle, deps: [] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n    if (typeof COMPILED === 'undefined' || !COMPILED) {\n        // Note: we can't export `ng` when using closure enhanced optimization as:\n        // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n        // - we can't declare a closure extern as the namespace `ng` is already used within Google\n        //   for typings for angularJS (via `goog.provide('ng....')`).\n        const ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n        ng[name] = value;\n    }\n}\n\nconst win = typeof window !== 'undefined' && window || {};\n\nclass ChangeDetectionPerfRecord {\n    constructor(msPerTick, numTicks) {\n        this.msPerTick = msPerTick;\n        this.numTicks = numTicks;\n    }\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nclass AngularProfiler {\n    constructor(ref) {\n        this.appRef = ref.injector.get(ApplicationRef);\n    }\n    // tslint:disable:no-console\n    /**\n     * Exercises change detection in a loop and then prints the average amount of\n     * time in milliseconds how long a single round of change detection takes for\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n     * of 500 milliseconds.\n     *\n     * Optionally, a user may pass a `config` parameter containing a map of\n     * options. Supported options are:\n     *\n     * `record` (boolean) - causes the profiler to record a CPU profile while\n     * it exercises the change detector. Example:\n     *\n     * ```\n     * ng.profiler.timeChangeDetection({record: true})\n     * ```\n     */\n    timeChangeDetection(config) {\n        const record = config && config['record'];\n        const profileName = 'Change Detection';\n        // Profiler is not available in Android browsers without dev tools opened\n        const isProfilerAvailable = win.console.profile != null;\n        if (record && isProfilerAvailable) {\n            win.console.profile(profileName);\n        }\n        const start = performanceNow();\n        let numTicks = 0;\n        while (numTicks < 5 || (performanceNow() - start) < 500) {\n            this.appRef.tick();\n            numTicks++;\n        }\n        const end = performanceNow();\n        if (record && isProfilerAvailable) {\n            win.console.profileEnd(profileName);\n        }\n        const msPerTick = (end - start) / numTicks;\n        win.console.log(`ran ${numTicks} change detection cycles`);\n        win.console.log(`${msPerTick.toFixed(2)} ms per check`);\n        return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    }\n}\nfunction performanceNow() {\n    return win.performance && win.performance.now ? win.performance.now() :\n        new Date().getTime();\n}\n\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n    exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n    return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n    exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nclass By {\n    /**\n     * Match all nodes.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    static all() {\n        return () => true;\n    }\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n    static css(selector) {\n        return (debugElement) => {\n            return debugElement.nativeElement != null ?\n                elementMatches(debugElement.nativeElement, selector) :\n                false;\n        };\n    }\n    /**\n     * Match nodes that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n    static directive(type) {\n        return (debugNode) => debugNode.providerTokens.indexOf(type) !== -1;\n    }\n}\nfunction elementMatches(n, selector) {\n    if (ɵgetDOM().isElementNode(n)) {\n        return n.matches && n.matches(selector) ||\n            n.msMatchesSelector && n.msMatchesSelector(selector) ||\n            n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n    }\n    return false;\n}\n\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n    // pan\n    'pan': true,\n    'panstart': true,\n    'panmove': true,\n    'panend': true,\n    'pancancel': true,\n    'panleft': true,\n    'panright': true,\n    'panup': true,\n    'pandown': true,\n    // pinch\n    'pinch': true,\n    'pinchstart': true,\n    'pinchmove': true,\n    'pinchend': true,\n    'pinchcancel': true,\n    'pinchin': true,\n    'pinchout': true,\n    // press\n    'press': true,\n    'pressup': true,\n    // rotate\n    'rotate': true,\n    'rotatestart': true,\n    'rotatemove': true,\n    'rotateend': true,\n    'rotatecancel': true,\n    // swipe\n    'swipe': true,\n    'swipeleft': true,\n    'swiperight': true,\n    'swipeup': true,\n    'swipedown': true,\n    // tap\n    'tap': true,\n    'doubletap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @ngModule HammerModule\n * @publicApi\n */\nconst HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nconst HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nclass HammerGestureConfig {\n    constructor() {\n        /**\n         * A set of supported event names for gestures to be used in Angular.\n         * Angular supports all built-in recognizers, as listed in\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         */\n        this.events = [];\n        /**\n         * Maps gesture event names to a set of configuration options\n         * that specify overrides to the default values for specific properties.\n         *\n         * The key is a supported event name to be configured,\n         * and the options object contains a set of properties, with override values\n         * to be applied to the named recognizer event.\n         * For example, to disable recognition of the rotate event, specify\n         *  `{\"rotate\": {\"enable\": false}}`.\n         *\n         * Properties that are not present take the HammerJS default values.\n         * For information about which properties are supported for which events,\n         * and their allowed and default values, see\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         *\n         */\n        this.overrides = {};\n    }\n    /**\n     * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n     * and attaches it to a given HTML element.\n     * @param element The element that will recognize gestures.\n     * @returns A HammerJS event-manager object.\n     */\n    buildHammer(element) {\n        const mc = new Hammer(element, this.options);\n        mc.get('pinch').set({ enable: true });\n        mc.get('rotate').set({ enable: true });\n        for (const eventName in this.overrides) {\n            mc.get(eventName).set(this.overrides[eventName]);\n        }\n        return mc;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: HammerGestureConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: HammerGestureConfig }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: HammerGestureConfig, decorators: [{\n            type: Injectable\n        }] });\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nclass HammerGesturesPlugin extends EventManagerPlugin {\n    constructor(doc, _config, console, loader) {\n        super(doc);\n        this._config = _config;\n        this.console = console;\n        this.loader = loader;\n        this._loaderPromise = null;\n    }\n    supports(eventName) {\n        if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n            return false;\n        }\n        if (!window.Hammer && !this.loader) {\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n                    `loaded and no custom loader has been specified.`);\n            }\n            return false;\n        }\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        const zone = this.manager.getZone();\n        eventName = eventName.toLowerCase();\n        // If Hammer is not present but a loader is specified, we defer adding the event listener\n        // until Hammer is loaded.\n        if (!window.Hammer && this.loader) {\n            this._loaderPromise = this._loaderPromise || zone.runOutsideAngular(() => this.loader());\n            // This `addEventListener` method returns a function to remove the added listener.\n            // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n            // than remove anything.\n            let cancelRegistration = false;\n            let deregister = () => {\n                cancelRegistration = true;\n            };\n            zone.runOutsideAngular(() => this._loaderPromise\n                .then(() => {\n                // If Hammer isn't actually loaded when the custom loader resolves, give up.\n                if (!window.Hammer) {\n                    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                        this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n                    }\n                    deregister = () => { };\n                    return;\n                }\n                if (!cancelRegistration) {\n                    // Now that Hammer is loaded and the listener is being loaded for real,\n                    // the deregistration function changes from canceling registration to\n                    // removal.\n                    deregister = this.addEventListener(element, eventName, handler);\n                }\n            })\n                .catch(() => {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` +\n                        `Hammer.JS loader failed.`);\n                }\n                deregister = () => { };\n            }));\n            // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n            // can change the behavior of `deregister` once the listener is added. Using a closure in\n            // this way allows us to avoid any additional data structures to track listener removal.\n            return () => {\n                deregister();\n            };\n        }\n        return zone.runOutsideAngular(() => {\n            // Creating the manager bind events, must be done outside of angular\n            const mc = this._config.buildHammer(element);\n            const callback = function (eventObj) {\n                zone.runGuarded(function () {\n                    handler(eventObj);\n                });\n            };\n            mc.on(eventName, callback);\n            return () => {\n                mc.off(eventName, callback);\n                // destroy mc to prevent memory leak\n                if (typeof mc.destroy === 'function') {\n                    mc.destroy();\n                }\n            };\n        });\n    }\n    isCustomEvent(eventName) {\n        return this._config.events.indexOf(eventName) > -1;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: HammerGesturesPlugin, deps: [{ token: DOCUMENT }, { token: HAMMER_GESTURE_CONFIG }, { token: i0.ɵConsole }, { token: HAMMER_LOADER, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: HammerGesturesPlugin }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: HammerGesturesPlugin, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: HammerGestureConfig, decorators: [{\n                    type: Inject,\n                    args: [HAMMER_GESTURE_CONFIG]\n                }] }, { type: i0.ɵConsole }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [HAMMER_LOADER]\n                }] }]; } });\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\nclass HammerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: HammerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.5\", ngImport: i0, type: HammerModule }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: HammerModule, providers: [\n            {\n                provide: EVENT_MANAGER_PLUGINS,\n                useClass: HammerGesturesPlugin,\n                multi: true,\n                deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n            },\n            { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n        ] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: HammerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        {\n                            provide: EVENT_MANAGER_PLUGINS,\n                            useClass: HammerGesturesPlugin,\n                            multi: true,\n                            deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n                        },\n                        { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n                    ]\n                }]\n        }] });\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\nclass DomSanitizer {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: DomSanitizer, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: DomSanitizer, providedIn: 'root', useExisting: i0.forwardRef(function () { return DomSanitizerImpl; }) }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: DomSanitizer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useExisting: forwardRef(() => DomSanitizerImpl) }]\n        }] });\nfunction domSanitizerImplFactory(injector) {\n    return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\nclass DomSanitizerImpl extends DomSanitizer {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n    }\n    sanitize(ctx, value) {\n        if (value == null)\n            return null;\n        switch (ctx) {\n            case SecurityContext.NONE:\n                return value;\n            case SecurityContext.HTML:\n                if (ɵallowSanitizationBypassAndThrow(value, \"HTML\" /* BypassType.Html */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeHtml(this._doc, String(value)).toString();\n            case SecurityContext.STYLE:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Style\" /* BypassType.Style */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return value;\n            case SecurityContext.SCRIPT:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Script\" /* BypassType.Script */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new ɵRuntimeError(5200 /* RuntimeErrorCode.SANITIZATION_UNSAFE_SCRIPT */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    'unsafe value used in a script context');\n            case SecurityContext.URL:\n                if (ɵallowSanitizationBypassAndThrow(value, \"URL\" /* BypassType.Url */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeUrl(String(value));\n            case SecurityContext.RESOURCE_URL:\n                if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\" /* BypassType.ResourceUrl */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new ɵRuntimeError(5201 /* RuntimeErrorCode.SANITIZATION_UNSAFE_RESOURCE_URL */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    `unsafe value used in a resource URL context (see ${ɵXSS_SECURITY_URL})`);\n            default:\n                throw new ɵRuntimeError(5202 /* RuntimeErrorCode.SANITIZATION_UNEXPECTED_CTX */, (typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    `Unexpected SecurityContext ${ctx} (see ${ɵXSS_SECURITY_URL})`);\n        }\n    }\n    bypassSecurityTrustHtml(value) {\n        return ɵbypassSanitizationTrustHtml(value);\n    }\n    bypassSecurityTrustStyle(value) {\n        return ɵbypassSanitizationTrustStyle(value);\n    }\n    bypassSecurityTrustScript(value) {\n        return ɵbypassSanitizationTrustScript(value);\n    }\n    bypassSecurityTrustUrl(value) {\n        return ɵbypassSanitizationTrustUrl(value);\n    }\n    bypassSecurityTrustResourceUrl(value) {\n        return ɵbypassSanitizationTrustResourceUrl(value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: DomSanitizerImpl, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: DomSanitizerImpl, providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [{ token: Injector }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: DomSanitizerImpl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [Injector] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/**\n * Helper function to create an object that represents a Hydration feature.\n */\nfunction hydrationFeature(kind, providers = []) {\n    return { ɵkind: kind, ɵproviders: providers };\n}\n/**\n * Disables DOM nodes reuse during hydration. Effectively makes\n * Angular re-render an application from scratch on the client.\n *\n * When this option is enabled, make sure that the initial navigation\n * option is configured for the Router as `enabledBlocking` by using the\n * `withEnabledBlockingInitialNavigation` in the `provideRouter` call:\n *\n * ```\n * bootstrapApplication(RootComponent, {\n *   providers: [\n *     provideRouter(\n *       // ... other features ...\n *       withEnabledBlockingInitialNavigation()\n *     ),\n *     provideClientHydration(withNoDomReuse())\n *   ]\n * });\n * ```\n *\n * This would ensure that the application is rerendered after all async\n * operations in the Router (such as lazy-loading of components,\n * waiting for async guards and resolvers) are completed to avoid\n * clearing the DOM on the client too soon, thus causing content flicker.\n *\n * @see `provideRouter`\n * @see `withEnabledBlockingInitialNavigation`\n *\n * @publicApi\n * @developerPreview\n */\nfunction withNoDomReuse() {\n    // This feature has no providers and acts as a flag that turns off\n    // non-destructive hydration (which otherwise is turned on by default).\n    return hydrationFeature(0 /* HydrationFeatureKind.NoDomReuseFeature */);\n}\n/**\n * Disables HTTP transfer cache. Effectively causes HTTP requests to be performed twice: once on the\n * server and other one on the browser.\n *\n * @publicApi\n * @developerPreview\n */\nfunction withNoHttpTransferCache() {\n    // This feature has no providers and acts as a flag that turns off\n    // HTTP transfer cache (which otherwise is turned on by default).\n    return hydrationFeature(1 /* HydrationFeatureKind.NoHttpTransferCache */);\n}\n/**\n * Returns an `ENVIRONMENT_INITIALIZER` token setup with a function\n * that verifies whether compatible ZoneJS was used in an application\n * and logs a warning in a console if it's not the case.\n */\nfunction provideZoneJsCompatibilityDetector() {\n    return [{\n            provide: ENVIRONMENT_INITIALIZER,\n            useValue: () => {\n                const ngZone = inject(NgZone);\n                // Checking `ngZone instanceof NgZone` would be insufficient here,\n                // because custom implementations might use NgZone as a base class.\n                if (ngZone.constructor !== NgZone) {\n                    const console = inject(ɵConsole);\n                    const message = ɵformatRuntimeError(-5000 /* RuntimeErrorCode.UNSUPPORTED_ZONEJS_INSTANCE */, 'Angular detected that hydration was enabled for an application ' +\n                        'that uses a custom or a noop Zone.js implementation. ' +\n                        'This is not yet a fully supported configuration.');\n                    // tslint:disable-next-line:no-console\n                    console.warn(message);\n                }\n            },\n            multi: true,\n        }];\n}\n/**\n * Sets up providers necessary to enable hydration functionality for the application.\n * By default, the function enables the recommended set of features for the optimal\n * performance for most of the applications. You can enable/disable features by\n * passing special functions (from the `HydrationFeatures` set) as arguments to the\n * `provideClientHydration` function.\n *\n * @usageNotes\n *\n * Basic example of how you can enable hydration in your application when\n * `bootstrapApplication` function is used:\n * ```\n * bootstrapApplication(AppComponent, {\n *   providers: [provideClientHydration()]\n * });\n * ```\n *\n * Alternatively if you are using NgModules, you would add `provideClientHydration`\n * to your root app module's provider list.\n * ```\n * @NgModule({\n *   declarations: [RootCmp],\n *   bootstrap: [RootCmp],\n *   providers: [provideClientHydration()],\n * })\n * export class AppModule {}\n * ```\n *\n * @see `withNoDomReuse`\n * @see `withNoHttpTransferCache`\n *\n * @param features Optional features to configure additional router behaviors.\n * @returns A set of providers to enable hydration.\n *\n * @publicApi\n * @developerPreview\n */\nfunction provideClientHydration(...features) {\n    const providers = [];\n    const featuresKind = new Set();\n    for (const { ɵproviders, ɵkind } of features) {\n        featuresKind.add(ɵkind);\n        if (ɵproviders.length) {\n            providers.push(ɵproviders);\n        }\n    }\n    return makeEnvironmentProviders([\n        (typeof ngDevMode !== 'undefined' && ngDevMode) ? provideZoneJsCompatibilityDetector() : [],\n        (featuresKind.has(0 /* HydrationFeatureKind.NoDomReuseFeature */) ? [] : ɵwithDomHydration()),\n        (featuresKind.has(1 /* HydrationFeatureKind.NoHttpTransferCache */) ? [] : ɵwithHttpTransferCache()),\n        providers,\n    ]);\n}\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the platform-browser package.\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('16.0.5');\n\n// Re-export TransferState to the public API of the `platform-browser` for backwards-compatibility.\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n * @deprecated `makeStateKey` has moved, please import `makeStateKey` from `@angular/core` instead.\n */\n// The below is a workaround to add a deprecated message.\nconst makeStateKey = makeStateKey$1;\n// The below type is needed for G3 due to JSC_CONFORMANCE_VIOLATION.\nconst TransferState = TransferState$1;\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, Meta, REMOVE_STYLES_ON_COMPONENT_DESTROY, Title, TransferState, VERSION, bootstrapApplication, createApplication, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, provideClientHydration, provideProtractorTestingSupport, withNoDomReuse, withNoHttpTransferCache, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, SharedStylesHost as ɵSharedStylesHost, initDomAdapter as ɵinitDomAdapter };\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}"],"x_google_ignoreList":[0,1,2,3,4]}