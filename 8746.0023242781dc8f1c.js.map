{"version":3,"file":"8746.0023242781dc8f1c.js","mappings":"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","names":["ObjectUnsubscribedError","createErrorClass","_super","this","name","message","Subject","_Observable","_inherits","_createSuper","_this","_classCallCheck","call","closed","currentObservers","observers","isStopped","hasError","thrownError","_createClass","key","value","operator","subject","AnonymousSubject","_this2","errorContext","_throwIfClosed","Array","from","_step","_iterator","_createForOfIteratorHelper","s","n","done","next","err","e","f","_this3","length","shift","error","_this4","complete","get","_a","subscriber","_get","_getPrototypeOf","prototype","_checkFinalizedStatuses","_innerSubscribe","_this5","EMPTY_SUBSCRIPTION","push","Subscription","arrRemove","observable","Observable","source","create","destination","_Subject","_super2","_this6","_b","subscribe","EMPTY","createOperatorSubscriber","onNext","onComplete","onError","onFinalize","OperatorSubscriber","_Subscriber","shouldUnsubscribe","_thisSuper","_thisSuper2","_thisSuper3","_next","_assertThisInitialized","_error","unsubscribe","_complete","Subscriber","take","count","operate","seen","takeUntil","notifier","innerFrom","noop","hasLift","isFunction","lift","init","liftedSource","TypeError","_c0","SCROLL_THROTTLE_MS","getMatTooltipInvalidPositionError","position","Error","concat","MAT_TOOLTIP_SCROLL_STRATEGY","InjectionToken","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","scrollThrottle","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","Overlay","useFactory","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","MAT_TOOLTIP_DEFAULT_OPTIONS","providedIn","factory","TOOLTIP_PANEL_CLASS","PANEL_CLASS","passiveListenerOptions","normalizePassiveListenerOptions","passive","_MatTooltipBase","_overlay","_elementRef","_scrollDispatcher","_viewContainerRef","_ngZone","_platform","_ariaDescriber","_focusMonitor","scrollStrategy","_dir","_defaultOptions","_document","_position","_positionAtOrigin","_disabled","_viewInitialized","_pointerExitEventsInitialized","_viewportMargin","_cssClassPrefix","touchGestures","_message","_passiveListeners","_destroyed","_scrollStrategy","_showDelay","_hideDelay","positionAtOrigin","change","pipe","_overlayRef","_updatePosition","set","_this$_tooltipInstanc","_tooltipInstance","show","updatePosition","coerceBooleanProperty","_detach","hide","_setupPointerEnterEventsIfNeeded","coerceNumberProperty","_mouseLeaveHideDelay","removeDescription","nativeElement","String","trim","_isTooltipVisible","_updateTooltipMessage","runOutsideAngular","Promise","resolve","then","describe","_tooltipClass","_setTooltipClass","monitor","origin","run","clearTimeout","_touchstartTimeout","dispose","forEach","_ref","_ref2","_slicedToArray","removeEventListener","stopMonitoring","delay","arguments","undefined","disabled","_this$_tooltipInstanc2","_cancelPendingAnimations","overlayRef","_createOverlay","_portal","ComponentPortal","_tooltipComponent","instance","attach","_triggerElement","afterHidden","isVisible","_this$_defaultOptions","existingStrategy","getConfig","positionStrategy","_origin","ElementRef","scrollableAncestors","getAncestorScrollContainers","strategy","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withScrollableContainers","positionChanges","_updateCurrentPositionClass","connectionPair","scrollableViewProperties","isOverlayClipped","direction","panelClass","detachments","outsidePointerEvents","_this5$_tooltipInstan","_handleBodyInteraction","keydownEvents","event","keyCode","ESCAPE","hasModifierKey","preventDefault","stopPropagation","disableTooltipInteractivity","addPanelClass","hasAttached","detach","_getOrigin","_getOverlayPosition","withPositions","_addOffset","_objectSpread","main","fallback","originPosition","isLtr","originX","originY","_this$_invertPosition","_invertPosition","x","y","overlayPosition","overlayX","overlayY","_this$_invertPosition2","_markForCheck","onMicrotaskEmpty","tooltipClass","newPosition","_currentPosition","classPrefix","removePanelClass","_this7","_platformSupportsMouseEvents","_setupPointerExitEventsIfNeeded","point","_disableNativeGesturesIfNecessary","_event$targetTouches","touch","targetTouches","clientX","clientY","setTimeout","_addListeners","_this$_passiveListene","_this8","exitListeners","_this8$_overlayRef","newTarget","relatedTarget","overlayElement","contains","_wheelListener","touchendListener","apply","listeners","_this9","_ref3","_ref4","addEventListener","IOS","ANDROID","elementUnderPointer","elementFromPoint","element","gestures","style","nodeName","userSelect","msUserSelect","webkitUserSelect","MozUserSelect","draggable","webkitUserDrag","touchAction","webkitTapHighlightColor","ɵfac","t","i0","ɵdir","type","inputs","MatTooltip","_MatTooltipBase2","elementRef","scrollDispatcher","viewContainerRef","ngZone","platform","ariaDescriber","focusMonitor","dir","defaultOptions","_this10","TooltipComponent","offsetY","offsetX","i1","i2","i3","i4","DOCUMENT","selectors","hostAttrs","exportAs","features","_TooltipComponentBase","_changeDetectorRef","animationMode","_closeOnInteraction","_isVisible","_onHide","_animationsDisabled","_this11","_hideTimeoutId","_showTimeoutId","_toggleVisibility","_this12","markForCheck","_ref5","_finalizeAnimation","_ref6","animationName","_showAnimation","_hideAnimation","toVisible","tooltip","_tooltip","showClass","hideClass","classList","remove","add","getComputedStyle","styles","getPropertyValue","_onShow","ANIMATION_MODULE_TYPE","_TooltipComponentBase2","changeDetectorRef","_this13","_isMultiline","_isTooltipMultiline","rect","getBoundingClientRect","height","width","ɵcmp","viewQuery","rf","ctx","_t","first","hostVars","hostBindings","$event","_handleMouseLeave","decls","vars","consts","template","_handleAnimationEnd","dependencies","i5","encapsulation","changeDetection","matTooltipAnimations","tooltipState","trigger","state","opacity","transform","transition","animate","MatTooltipModule","ɵmod","ɵinj","providers","imports","A11yModule","CommonModule","OverlayModule","MatCommonModule","CdkScrollableModule","_arrayLikeToArray","arr","len","i","arr2","_arrayWithHoles","isArray","o","allowArrayLike","it","Symbol","iterator","_unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_0__","Z","F","_e","normalCompletion","didErr","step","_e2","return","_defineProperty","obj","_toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__","Object","defineProperty","enumerable","configurable","writable","Reflect","bind","target","property","receiver","base","_superPropBase","object","hasOwnProperty","getPrototypeOf","desc","getOwnPropertyDescriptor","_iterableToArray","iter","_nonIterableRest","ownKeys","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","_objectSpread2","_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__","getOwnPropertyDescriptors","defineProperties","arrayWithHoles","_iterableToArrayLimit","_i","_s","_x","_r","_arr","_n","_d","unsupportedIterableToArray","nonIterableRest","_toConsumableArray","_arrayWithoutHoles","arrayLikeToArray","iterableToArray","_nonIterableSpread","_unsupportedIterableToArray","minLen","_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__","toString","slice","constructor","test"],"sourceRoot":"webpack:///","sources":["./node_modules/rxjs/dist/esm/internal/util/ObjectUnsubscribedError.js","./node_modules/rxjs/dist/esm/internal/Subject.js","./node_modules/rxjs/dist/esm/internal/observable/empty.js","./node_modules/rxjs/dist/esm/internal/operators/OperatorSubscriber.js","./node_modules/rxjs/dist/esm/internal/operators/take.js","./node_modules/rxjs/dist/esm/internal/operators/takeUntil.js","./node_modules/rxjs/dist/esm/internal/util/lift.js","./node_modules/@angular/material/fesm2022/tooltip.mjs","./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","./node_modules/@babel/runtime/helpers/esm/defineProperty.js","./node_modules/@babel/runtime/helpers/esm/get.js","./node_modules/@babel/runtime/helpers/esm/superPropBase.js","./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","./node_modules/@babel/runtime/helpers/esm/objectSpread2.js","./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js"],"sourcesContent":["import { createErrorClass } from './createErrorClass';\nexport const ObjectUnsubscribedError = createErrorClass((_super) => function ObjectUnsubscribedErrorImpl() {\n    _super(this);\n    this.name = 'ObjectUnsubscribedError';\n    this.message = 'object unsubscribed';\n});\n","import { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nexport class Subject extends Observable {\n    constructor() {\n        super();\n        this.closed = false;\n        this.currentObservers = null;\n        this.observers = [];\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    lift(operator) {\n        const subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    }\n    _throwIfClosed() {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n    }\n    next(value) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                if (!this.currentObservers) {\n                    this.currentObservers = Array.from(this.observers);\n                }\n                for (const observer of this.currentObservers) {\n                    observer.next(value);\n                }\n            }\n        });\n    }\n    error(err) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.hasError = this.isStopped = true;\n                this.thrownError = err;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().error(err);\n                }\n            }\n        });\n    }\n    complete() {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.isStopped = true;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().complete();\n                }\n            }\n        });\n    }\n    unsubscribe() {\n        this.isStopped = this.closed = true;\n        this.observers = this.currentObservers = null;\n    }\n    get observed() {\n        var _a;\n        return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    _trySubscribe(subscriber) {\n        this._throwIfClosed();\n        return super._trySubscribe(subscriber);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._checkFinalizedStatuses(subscriber);\n        return this._innerSubscribe(subscriber);\n    }\n    _innerSubscribe(subscriber) {\n        const { hasError, isStopped, observers } = this;\n        if (hasError || isStopped) {\n            return EMPTY_SUBSCRIPTION;\n        }\n        this.currentObservers = null;\n        observers.push(subscriber);\n        return new Subscription(() => {\n            this.currentObservers = null;\n            arrRemove(observers, subscriber);\n        });\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, thrownError, isStopped } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped) {\n            subscriber.complete();\n        }\n    }\n    asObservable() {\n        const observable = new Observable();\n        observable.source = this;\n        return observable;\n    }\n}\nSubject.create = (destination, source) => {\n    return new AnonymousSubject(destination, source);\n};\nexport class AnonymousSubject extends Subject {\n    constructor(destination, source) {\n        super();\n        this.destination = destination;\n        this.source = source;\n    }\n    next(value) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n    }\n    error(err) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n    }\n    complete() {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    _subscribe(subscriber) {\n        var _a, _b;\n        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n    }\n}\n","import { Observable } from '../Observable';\nexport const EMPTY = new Observable((subscriber) => subscriber.complete());\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n","import { Subscriber } from '../Subscriber';\nexport function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {\n    return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\nexport class OperatorSubscriber extends Subscriber {\n    constructor(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {\n        super(destination);\n        this.onFinalize = onFinalize;\n        this.shouldUnsubscribe = shouldUnsubscribe;\n        this._next = onNext\n            ? function (value) {\n                try {\n                    onNext(value);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n            }\n            : super._next;\n        this._error = onError\n            ? function (err) {\n                try {\n                    onError(err);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._error;\n        this._complete = onComplete\n            ? function () {\n                try {\n                    onComplete();\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._complete;\n    }\n    unsubscribe() {\n        var _a;\n        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n            const { closed } = this;\n            super.unsubscribe();\n            !closed && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n        }\n    }\n}\n","import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function take(count) {\n    return count <= 0\n        ?\n            () => EMPTY\n        : operate((source, subscriber) => {\n            let seen = 0;\n            source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n                if (++seen <= count) {\n                    subscriber.next(value);\n                    if (count <= seen) {\n                        subscriber.complete();\n                    }\n                }\n            }));\n        });\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\nexport function takeUntil(notifier) {\n    return operate((source, subscriber) => {\n        innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n        !subscriber.closed && source.subscribe(subscriber);\n    });\n}\n","import { isFunction } from './isFunction';\nexport function hasLift(source) {\n    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n    return (source) => {\n        if (hasLift(source)) {\n            return source.lift(function (liftedSource) {\n                try {\n                    return init(liftedSource, this);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            });\n        }\n        throw new TypeError('Unable to lift unknown Observable type');\n    };\n}\n","import { takeUntil, take } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, ElementRef, Directive, Inject, Input, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport * as i5 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i3 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/bidi';\nimport * as i1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Time in ms to throttle repositioning after scroll events. */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy');\n/** @docs-private */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n/** @docs-private */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/** @docs-private */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-mdc-tooltip-panel';\nconst PANEL_CLASS = 'tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Time between the user putting the pointer on a tooltip\n * trigger and the long press event being fired.\n */\nconst LONGPRESS_DELAY = 500;\n// These constants were taken from MDC's `numbers` object. We can't import them from MDC,\n// because they have some top-level references to `window` which break during SSR.\nconst MIN_VIEWPORT_TOOLTIP_THRESHOLD = 8;\nconst UNBOUNDED_ANCHOR_GAP = 8;\nconst MIN_HEIGHT = 24;\nconst MAX_WIDTH = 200;\nclass _MatTooltipBase {\n    /** Allows the user to define the position of the tooltip relative to the parent element */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n                this._tooltipInstance?.show(0);\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /**\n     * Whether tooltip should be relative to the click or touch origin\n     * instead of outside the element bounding box.\n     */\n    get positionAtOrigin() {\n        return this._positionAtOrigin;\n    }\n    set positionAtOrigin(value) {\n        this._positionAtOrigin = coerceBooleanProperty(value);\n        this._detach();\n        this._overlayRef = null;\n    }\n    /** Disables the display of the tooltip. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n        }\n    }\n    /** The default delay in ms before showing the tooltip after show is called */\n    get showDelay() {\n        return this._showDelay;\n    }\n    set showDelay(value) {\n        this._showDelay = coerceNumberProperty(value);\n    }\n    /** The default delay in ms before hiding the tooltip after hide is called */\n    get hideDelay() {\n        return this._hideDelay;\n    }\n    set hideDelay(value) {\n        this._hideDelay = coerceNumberProperty(value);\n        if (this._tooltipInstance) {\n            this._tooltipInstance._mouseLeaveHideDelay = this._hideDelay;\n        }\n    }\n    /** The message to be displayed in the tooltip */\n    get message() {\n        return this._message;\n    }\n    set message(value) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message, 'tooltip');\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        // Must convert with `String(value)`, not `${value}`, otherwise Closure Compiler optimises\n        // away the string-conversion: https://github.com/angular/components/issues/20684\n        this._message = value != null ? String(value).trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n            this._updateTooltipMessage();\n            this._ngZone.runOutsideAngular(() => {\n                // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n                // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n                // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n                // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n                Promise.resolve().then(() => {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');\n                });\n            });\n        }\n    }\n    /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n    get tooltipClass() {\n        return this._tooltipClass;\n    }\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, _document) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._positionAtOrigin = false;\n        this._disabled = false;\n        this._viewInitialized = false;\n        this._pointerExitEventsInitialized = false;\n        this._viewportMargin = 8;\n        this._cssClassPrefix = 'mat';\n        /**\n         * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n         * uses a long press gesture to show and hide, however it can conflict with the native browser\n         * gestures. To work around the conflict, Angular Material disables native gestures on the\n         * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n         * elements). The different values for this option configure the touch event handling as follows:\n         * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n         *   browser gestures on particular elements. In particular, it allows text selection on inputs\n         *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n         * - `on` - Enables touch gestures for all elements and disables native\n         *   browser gestures with no exceptions.\n         * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n         *   showing on touch devices.\n         */\n        this.touchGestures = 'auto';\n        this._message = '';\n        /** Manually-bound passive event listeners. */\n        this._passiveListeners = [];\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        this._scrollStrategy = scrollStrategy;\n        this._document = _document;\n        if (_defaultOptions) {\n            this._showDelay = _defaultOptions.showDelay;\n            this._hideDelay = _defaultOptions.hideDelay;\n            if (_defaultOptions.position) {\n                this.position = _defaultOptions.position;\n            }\n            if (_defaultOptions.positionAtOrigin) {\n                this.positionAtOrigin = _defaultOptions.positionAtOrigin;\n            }\n            if (_defaultOptions.touchGestures) {\n                this.touchGestures = _defaultOptions.touchGestures;\n            }\n        }\n        _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n            }\n        });\n    }\n    ngAfterViewInit() {\n        // This needs to happen after view init so the initial values for all inputs have been set.\n        this._viewInitialized = true;\n        this._setupPointerEnterEventsIfNeeded();\n        this._focusMonitor\n            .monitor(this._elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                this._ngZone.run(() => this.hide(0));\n            }\n            else if (origin === 'keyboard') {\n                this._ngZone.run(() => this.show());\n            }\n        });\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    ngOnDestroy() {\n        const nativeElement = this._elementRef.nativeElement;\n        clearTimeout(this._touchstartTimeout);\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        this._passiveListeners.forEach(([event, listener]) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        });\n        this._passiveListeners.length = 0;\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(nativeElement, this.message, 'tooltip');\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    show(delay = this.showDelay, origin) {\n        if (this.disabled || !this.message || this._isTooltipVisible()) {\n            this._tooltipInstance?._cancelPendingAnimations();\n            return;\n        }\n        const overlayRef = this._createOverlay(origin);\n        this._detach();\n        this._portal =\n            this._portal || new ComponentPortal(this._tooltipComponent, this._viewContainerRef);\n        const instance = (this._tooltipInstance = overlayRef.attach(this._portal).instance);\n        instance._triggerElement = this._elementRef.nativeElement;\n        instance._mouseLeaveHideDelay = this._hideDelay;\n        instance\n            .afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        instance.show(delay);\n    }\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    hide(delay = this.hideDelay) {\n        const instance = this._tooltipInstance;\n        if (instance) {\n            if (instance.isVisible()) {\n                instance.hide(delay);\n            }\n            else {\n                instance._cancelPendingAnimations();\n                this._detach();\n            }\n        }\n    }\n    /** Shows/hides the tooltip */\n    toggle(origin) {\n        this._isTooltipVisible() ? this.hide() : this.show(undefined, origin);\n    }\n    /** Returns true if the tooltip is currently visible to the user */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /** Create the overlay config and position strategy */\n    _createOverlay(origin) {\n        if (this._overlayRef) {\n            const existingStrategy = this._overlayRef.getConfig()\n                .positionStrategy;\n            if ((!this.positionAtOrigin || !origin) && existingStrategy._origin instanceof ElementRef) {\n                return this._overlayRef;\n            }\n            this._detach();\n        }\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this.positionAtOrigin ? origin || this._elementRef : this._elementRef)\n            .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)\n            .withFlexibleDimensions(false)\n            .withViewportMargin(this._viewportMargin)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n            this._updateCurrentPositionClass(change.connectionPair);\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide(0));\n                }\n            }\n        });\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: `${this._cssClassPrefix}-${PANEL_CLASS}`,\n            scrollStrategy: this._scrollStrategy(),\n        });\n        this._updatePosition(this._overlayRef);\n        this._overlayRef\n            .detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._overlayRef\n            .outsidePointerEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._tooltipInstance?._handleBodyInteraction());\n        this._overlayRef\n            .keydownEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(event => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run(() => this.hide(0));\n            }\n        });\n        if (this._defaultOptions?.disableTooltipInteractivity) {\n            this._overlayRef.addPanelClass(`${this._cssClassPrefix}-tooltip-panel-non-interactive`);\n        }\n        return this._overlayRef;\n    }\n    /** Detaches the currently-attached tooltip. */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /** Updates the position of the current tooltip. */\n    _updatePosition(overlayRef) {\n        const position = overlayRef.getConfig().positionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            this._addOffset({ ...origin.main, ...overlay.main }),\n            this._addOffset({ ...origin.fallback, ...overlay.fallback }),\n        ]);\n    }\n    /** Adds the configured offset to a position. Used as a hook for child classes. */\n    _addOffset(position) {\n        return position;\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y },\n        };\n    }\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y },\n        };\n    }\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                if (this._tooltipInstance) {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n    }\n    /** Updates the tooltip class */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /** Inverts an overlay position. */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /** Updates the class on the overlay panel based on the current position of the tooltip. */\n    _updateCurrentPositionClass(connectionPair) {\n        const { overlayY, originX, originY } = connectionPair;\n        let newPosition;\n        // If the overlay is in the middle along the Y axis,\n        // it means that it's either before or after.\n        if (overlayY === 'center') {\n            // Note that since this information is used for styling, we want to\n            // resolve `start` and `end` to their real values, otherwise consumers\n            // would have to remember to do it themselves on each consumption.\n            if (this._dir && this._dir.value === 'rtl') {\n                newPosition = originX === 'end' ? 'left' : 'right';\n            }\n            else {\n                newPosition = originX === 'start' ? 'left' : 'right';\n            }\n        }\n        else {\n            newPosition = overlayY === 'bottom' && originY === 'top' ? 'above' : 'below';\n        }\n        if (newPosition !== this._currentPosition) {\n            const overlayRef = this._overlayRef;\n            if (overlayRef) {\n                const classPrefix = `${this._cssClassPrefix}-${PANEL_CLASS}-`;\n                overlayRef.removePanelClass(classPrefix + this._currentPosition);\n                overlayRef.addPanelClass(classPrefix + newPosition);\n            }\n            this._currentPosition = newPosition;\n        }\n    }\n    /** Binds the pointer events to the tooltip trigger. */\n    _setupPointerEnterEventsIfNeeded() {\n        // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n        if (this._disabled ||\n            !this.message ||\n            !this._viewInitialized ||\n            this._passiveListeners.length) {\n            return;\n        }\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (this._platformSupportsMouseEvents()) {\n            this._passiveListeners.push([\n                'mouseenter',\n                event => {\n                    this._setupPointerExitEventsIfNeeded();\n                    let point = undefined;\n                    if (event.x !== undefined && event.y !== undefined) {\n                        point = event;\n                    }\n                    this.show(undefined, point);\n                },\n            ]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            this._passiveListeners.push([\n                'touchstart',\n                event => {\n                    const touch = event.targetTouches?.[0];\n                    const origin = touch ? { x: touch.clientX, y: touch.clientY } : undefined;\n                    // Note that it's important that we don't `preventDefault` here,\n                    // because it can prevent click events from firing on the element.\n                    this._setupPointerExitEventsIfNeeded();\n                    clearTimeout(this._touchstartTimeout);\n                    this._touchstartTimeout = setTimeout(() => this.show(undefined, origin), LONGPRESS_DELAY);\n                },\n            ]);\n        }\n        this._addListeners(this._passiveListeners);\n    }\n    _setupPointerExitEventsIfNeeded() {\n        if (this._pointerExitEventsInitialized) {\n            return;\n        }\n        this._pointerExitEventsInitialized = true;\n        const exitListeners = [];\n        if (this._platformSupportsMouseEvents()) {\n            exitListeners.push([\n                'mouseleave',\n                event => {\n                    const newTarget = event.relatedTarget;\n                    if (!newTarget || !this._overlayRef?.overlayElement.contains(newTarget)) {\n                        this.hide();\n                    }\n                },\n            ], ['wheel', event => this._wheelListener(event)]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            const touchendListener = () => {\n                clearTimeout(this._touchstartTimeout);\n                this.hide(this._defaultOptions.touchendHideDelay);\n            };\n            exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n        }\n        this._addListeners(exitListeners);\n        this._passiveListeners.push(...exitListeners);\n    }\n    _addListeners(listeners) {\n        listeners.forEach(([event, listener]) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        });\n    }\n    _platformSupportsMouseEvents() {\n        return !this._platform.IOS && !this._platform.ANDROID;\n    }\n    /** Listener for the `wheel` event on the element. */\n    _wheelListener(event) {\n        if (this._isTooltipVisible()) {\n            const elementUnderPointer = this._document.elementFromPoint(event.clientX, event.clientY);\n            const element = this._elementRef.nativeElement;\n            // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n            // won't fire if the user scrolls away using the wheel without moving their cursor. We\n            // work around it by finding the element under the user's cursor and closing the tooltip\n            // if it's not the trigger.\n            if (elementUnderPointer !== element && !element.contains(elementUnderPointer)) {\n                this.hide();\n            }\n        }\n    }\n    /** Disables the native browser gestures, based on how the tooltip has been configured. */\n    _disableNativeGesturesIfNecessary() {\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            const element = this._elementRef.nativeElement;\n            const style = element.style;\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect =\n                    style.msUserSelect =\n                        style.webkitUserSelect =\n                            style.MozUserSelect =\n                                'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                style.webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: _MatTooltipBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: _MatTooltipBase, inputs: { position: [\"matTooltipPosition\", \"position\"], positionAtOrigin: [\"matTooltipPositionAtOrigin\", \"positionAtOrigin\"], disabled: [\"matTooltipDisabled\", \"disabled\"], showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: _MatTooltipBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i1.Overlay }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i2.Platform }, { type: i3.AriaDescriber }, { type: i3.FocusMonitor }, { type: undefined }, { type: i4.Directionality }, { type: undefined }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { position: [{\n                type: Input,\n                args: ['matTooltipPosition']\n            }], positionAtOrigin: [{\n                type: Input,\n                args: ['matTooltipPositionAtOrigin']\n            }], disabled: [{\n                type: Input,\n                args: ['matTooltipDisabled']\n            }], showDelay: [{\n                type: Input,\n                args: ['matTooltipShowDelay']\n            }], hideDelay: [{\n                type: Input,\n                args: ['matTooltipHideDelay']\n            }], touchGestures: [{\n                type: Input,\n                args: ['matTooltipTouchGestures']\n            }], message: [{\n                type: Input,\n                args: ['matTooltip']\n            }], tooltipClass: [{\n                type: Input,\n                args: ['matTooltipClass']\n            }] } });\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip extends _MatTooltipBase {\n    constructor(overlay, elementRef, scrollDispatcher, viewContainerRef, ngZone, platform, ariaDescriber, focusMonitor, scrollStrategy, dir, defaultOptions, _document) {\n        super(overlay, elementRef, scrollDispatcher, viewContainerRef, ngZone, platform, ariaDescriber, focusMonitor, scrollStrategy, dir, defaultOptions, _document);\n        this._tooltipComponent = TooltipComponent;\n        this._cssClassPrefix = 'mat-mdc';\n        this._viewportMargin = MIN_VIEWPORT_TOOLTIP_THRESHOLD;\n    }\n    _addOffset(position) {\n        const offset = UNBOUNDED_ANCHOR_GAP;\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        if (position.originY === 'top') {\n            position.offsetY = -offset;\n        }\n        else if (position.originY === 'bottom') {\n            position.offsetY = offset;\n        }\n        else if (position.originX === 'start') {\n            position.offsetX = isLtr ? -offset : offset;\n        }\n        else if (position.originX === 'end') {\n            position.offsetX = isLtr ? offset : -offset;\n        }\n        return position;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatTooltip, deps: [{ token: i1.Overlay }, { token: i0.ElementRef }, { token: i1.ScrollDispatcher }, { token: i0.ViewContainerRef }, { token: i0.NgZone }, { token: i2.Platform }, { token: i3.AriaDescriber }, { token: i3.FocusMonitor }, { token: MAT_TOOLTIP_SCROLL_STRATEGY }, { token: i4.Directionality, optional: true }, { token: MAT_TOOLTIP_DEFAULT_OPTIONS, optional: true }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatTooltip, selector: \"[matTooltip]\", host: { classAttribute: \"mat-mdc-tooltip-trigger\" }, exportAs: [\"matTooltip\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatTooltip, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTooltip]',\n                    exportAs: 'matTooltip',\n                    host: {\n                        'class': 'mat-mdc-tooltip-trigger',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i1.Overlay }, { type: i0.ElementRef }, { type: i1.ScrollDispatcher }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i2.Platform }, { type: i3.AriaDescriber }, { type: i3.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n                }] }, { type: i4.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\nclass _TooltipComponentBase {\n    constructor(_changeDetectorRef, animationMode) {\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Whether interactions on the page should close the tooltip */\n        this._closeOnInteraction = false;\n        /** Whether the tooltip is currently visible. */\n        this._isVisible = false;\n        /** Subject for notifying that the tooltip has been hidden from the view */\n        this._onHide = new Subject();\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId != null) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        this._showTimeoutId = setTimeout(() => {\n            this._toggleVisibility(true);\n            this._showTimeoutId = undefined;\n        }, delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId != null) {\n            clearTimeout(this._showTimeoutId);\n        }\n        this._hideTimeoutId = setTimeout(() => {\n            this._toggleVisibility(false);\n            this._hideTimeoutId = undefined;\n        }, delay);\n    }\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden() {\n        return this._onHide;\n    }\n    /** Whether the tooltip is being displayed. */\n    isVisible() {\n        return this._isVisible;\n    }\n    ngOnDestroy() {\n        this._cancelPendingAnimations();\n        this._onHide.complete();\n        this._triggerElement = null;\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n    _handleMouseLeave({ relatedTarget }) {\n        if (!relatedTarget || !this._triggerElement.contains(relatedTarget)) {\n            if (this.isVisible()) {\n                this.hide(this._mouseLeaveHideDelay);\n            }\n            else {\n                this._finalizeAnimation(false);\n            }\n        }\n    }\n    /**\n     * Callback for when the timeout in this.show() gets completed.\n     * This method is only needed by the mdc-tooltip, and so it is only implemented\n     * in the mdc-tooltip, not here.\n     */\n    _onShow() { }\n    /** Event listener dispatched when an animation on the tooltip finishes. */\n    _handleAnimationEnd({ animationName }) {\n        if (animationName === this._showAnimation || animationName === this._hideAnimation) {\n            this._finalizeAnimation(animationName === this._showAnimation);\n        }\n    }\n    /** Cancels any pending animation sequences. */\n    _cancelPendingAnimations() {\n        if (this._showTimeoutId != null) {\n            clearTimeout(this._showTimeoutId);\n        }\n        if (this._hideTimeoutId != null) {\n            clearTimeout(this._hideTimeoutId);\n        }\n        this._showTimeoutId = this._hideTimeoutId = undefined;\n    }\n    /** Handles the cleanup after an animation has finished. */\n    _finalizeAnimation(toVisible) {\n        if (toVisible) {\n            this._closeOnInteraction = true;\n        }\n        else if (!this.isVisible()) {\n            this._onHide.next();\n        }\n    }\n    /** Toggles the visibility of the tooltip element. */\n    _toggleVisibility(isVisible) {\n        // We set the classes directly here ourselves so that toggling the tooltip state\n        // isn't bound by change detection. This allows us to hide it even if the\n        // view ref has been detached from the CD tree.\n        const tooltip = this._tooltip.nativeElement;\n        const showClass = this._showAnimation;\n        const hideClass = this._hideAnimation;\n        tooltip.classList.remove(isVisible ? hideClass : showClass);\n        tooltip.classList.add(isVisible ? showClass : hideClass);\n        this._isVisible = isVisible;\n        // It's common for internal apps to disable animations using `* { animation: none !important }`\n        // which can break the opening sequence. Try to detect such cases and work around them.\n        if (isVisible && !this._animationsDisabled && typeof getComputedStyle === 'function') {\n            const styles = getComputedStyle(tooltip);\n            // Use `getPropertyValue` to avoid issues with property renaming.\n            if (styles.getPropertyValue('animation-duration') === '0s' ||\n                styles.getPropertyValue('animation-name') === 'none') {\n                this._animationsDisabled = true;\n            }\n        }\n        if (isVisible) {\n            this._onShow();\n        }\n        if (this._animationsDisabled) {\n            tooltip.classList.add('_mat-animation-noopable');\n            this._finalizeAnimation(isVisible);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: _TooltipComponentBase, deps: [{ token: i0.ChangeDetectorRef }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: _TooltipComponentBase, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: _TooltipComponentBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; } });\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nclass TooltipComponent extends _TooltipComponentBase {\n    constructor(changeDetectorRef, _elementRef, animationMode) {\n        super(changeDetectorRef, animationMode);\n        this._elementRef = _elementRef;\n        /* Whether the tooltip text overflows to multiple lines */\n        this._isMultiline = false;\n        this._showAnimation = 'mat-mdc-tooltip-show';\n        this._hideAnimation = 'mat-mdc-tooltip-hide';\n    }\n    _onShow() {\n        this._isMultiline = this._isTooltipMultiline();\n        this._markForCheck();\n    }\n    /** Whether the tooltip text has overflown to the next line */\n    _isTooltipMultiline() {\n        const rect = this._elementRef.nativeElement.getBoundingClientRect();\n        return rect.height > MIN_HEIGHT && rect.width >= MAX_WIDTH;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: TooltipComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: TooltipComponent, selector: \"mat-tooltip-component\", host: { attributes: { \"aria-hidden\": \"true\" }, listeners: { \"mouseleave\": \"_handleMouseLeave($event)\" }, properties: { \"style.zoom\": \"isVisible() ? 1 : null\" } }, viewQueries: [{ propertyName: \"_tooltip\", first: true, predicate: [\"tooltip\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mdc-tooltip--shown mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mdc-tooltip__surface mdc-tooltip__surface-animation\\\">{{message}}</div>\\n</div>\\n\", styles: [\".mdc-tooltip__surface{word-break:var(--mdc-tooltip-word-break, normal);overflow-wrap:anywhere}.mdc-tooltip{position:fixed;display:none;z-index:9}.mdc-tooltip-wrapper--rich{position:relative}.mdc-tooltip--shown,.mdc-tooltip--showing,.mdc-tooltip--hide{display:inline-flex}.mdc-tooltip--shown.mdc-tooltip--rich,.mdc-tooltip--showing.mdc-tooltip--rich,.mdc-tooltip--hide.mdc-tooltip--rich{display:inline-block;left:-320px;position:absolute}.mdc-tooltip__surface{line-height:16px;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center}.mdc-tooltip__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-tooltip__surface::before{border-color:CanvasText}}.mdc-tooltip--rich .mdc-tooltip__surface{align-items:flex-start;display:flex;flex-direction:column;min-height:24px;min-width:40px;max-width:320px;position:relative}.mdc-tooltip--multiline .mdc-tooltip__surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mdc-tooltip__surface,.mdc-tooltip--multiline .mdc-tooltip__surface[dir=rtl]{text-align:right}.mdc-tooltip__surface .mdc-tooltip__title{margin:0 8px}.mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(200px - (2 * 8px));margin:8px;text-align:left}[dir=rtl] .mdc-tooltip__surface .mdc-tooltip__content,.mdc-tooltip__surface .mdc-tooltip__content[dir=rtl]{text-align:right}.mdc-tooltip--rich .mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(320px - (2 * 8px));align-self:stretch}.mdc-tooltip__surface .mdc-tooltip__content-link{text-decoration:none}.mdc-tooltip--rich-actions,.mdc-tooltip__content,.mdc-tooltip__title{z-index:1}.mdc-tooltip__surface-animation{opacity:0;transform:scale(0.8);will-change:transform,opacity}.mdc-tooltip--shown .mdc-tooltip__surface-animation{transform:scale(1);opacity:1}.mdc-tooltip--hide .mdc-tooltip__surface-animation{transform:scale(1)}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{position:absolute;height:24px;width:24px;transform:rotate(35deg) skewY(20deg) scaleX(0.9396926208)}.mdc-tooltip__caret-surface-top .mdc-elevation-overlay,.mdc-tooltip__caret-surface-bottom .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-tooltip__caret-surface-bottom{outline:1px solid rgba(0,0,0,0);z-index:-1}@media screen and (forced-colors: active){.mdc-tooltip__caret-surface-bottom{outline-color:CanvasText}}.mdc-tooltip__surface{background-color:var(--mdc-plain-tooltip-container-color, #fff)}.mdc-tooltip__surface{border-radius:var(--mdc-plain-tooltip-container-shape, var(--mdc-shape-small, 4px))}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{border-radius:var(--mdc-plain-tooltip-container-shape, var(--mdc-shape-small, 4px))}.mdc-tooltip__surface{color:var(--mdc-plain-tooltip-supporting-text-color, #000)}.mdc-tooltip__surface{font-family:var(--mdc-plain-tooltip-supporting-text-font, inherit);font-size:var(--mdc-plain-tooltip-supporting-text-size, inherit);font-weight:var(--mdc-plain-tooltip-supporting-text-weight, inherit);letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking, inherit)}.mat-mdc-tooltip{position:relative;transform:scale(0)}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\"], dependencies: [{ kind: \"directive\", type: i5.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: TooltipComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tooltip-component', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                        // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                        '[style.zoom]': 'isVisible() ? 1 : null',\n                        '(mouseleave)': '_handleMouseLeave($event)',\n                        'aria-hidden': 'true',\n                    }, template: \"<div\\n  #tooltip\\n  class=\\\"mdc-tooltip mdc-tooltip--shown mat-mdc-tooltip\\\"\\n  [ngClass]=\\\"tooltipClass\\\"\\n  (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n  [class.mdc-tooltip--multiline]=\\\"_isMultiline\\\">\\n  <div class=\\\"mdc-tooltip__surface mdc-tooltip__surface-animation\\\">{{message}}</div>\\n</div>\\n\", styles: [\".mdc-tooltip__surface{word-break:var(--mdc-tooltip-word-break, normal);overflow-wrap:anywhere}.mdc-tooltip{position:fixed;display:none;z-index:9}.mdc-tooltip-wrapper--rich{position:relative}.mdc-tooltip--shown,.mdc-tooltip--showing,.mdc-tooltip--hide{display:inline-flex}.mdc-tooltip--shown.mdc-tooltip--rich,.mdc-tooltip--showing.mdc-tooltip--rich,.mdc-tooltip--hide.mdc-tooltip--rich{display:inline-block;left:-320px;position:absolute}.mdc-tooltip__surface{line-height:16px;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center}.mdc-tooltip__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-tooltip__surface::before{border-color:CanvasText}}.mdc-tooltip--rich .mdc-tooltip__surface{align-items:flex-start;display:flex;flex-direction:column;min-height:24px;min-width:40px;max-width:320px;position:relative}.mdc-tooltip--multiline .mdc-tooltip__surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mdc-tooltip__surface,.mdc-tooltip--multiline .mdc-tooltip__surface[dir=rtl]{text-align:right}.mdc-tooltip__surface .mdc-tooltip__title{margin:0 8px}.mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(200px - (2 * 8px));margin:8px;text-align:left}[dir=rtl] .mdc-tooltip__surface .mdc-tooltip__content,.mdc-tooltip__surface .mdc-tooltip__content[dir=rtl]{text-align:right}.mdc-tooltip--rich .mdc-tooltip__surface .mdc-tooltip__content{max-width:calc(320px - (2 * 8px));align-self:stretch}.mdc-tooltip__surface .mdc-tooltip__content-link{text-decoration:none}.mdc-tooltip--rich-actions,.mdc-tooltip__content,.mdc-tooltip__title{z-index:1}.mdc-tooltip__surface-animation{opacity:0;transform:scale(0.8);will-change:transform,opacity}.mdc-tooltip--shown .mdc-tooltip__surface-animation{transform:scale(1);opacity:1}.mdc-tooltip--hide .mdc-tooltip__surface-animation{transform:scale(1)}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{position:absolute;height:24px;width:24px;transform:rotate(35deg) skewY(20deg) scaleX(0.9396926208)}.mdc-tooltip__caret-surface-top .mdc-elevation-overlay,.mdc-tooltip__caret-surface-bottom .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}.mdc-tooltip__caret-surface-bottom{outline:1px solid rgba(0,0,0,0);z-index:-1}@media screen and (forced-colors: active){.mdc-tooltip__caret-surface-bottom{outline-color:CanvasText}}.mdc-tooltip__surface{background-color:var(--mdc-plain-tooltip-container-color, #fff)}.mdc-tooltip__surface{border-radius:var(--mdc-plain-tooltip-container-shape, var(--mdc-shape-small, 4px))}.mdc-tooltip__caret-surface-top,.mdc-tooltip__caret-surface-bottom{border-radius:var(--mdc-plain-tooltip-container-shape, var(--mdc-shape-small, 4px))}.mdc-tooltip__surface{color:var(--mdc-plain-tooltip-supporting-text-color, #000)}.mdc-tooltip__surface{font-family:var(--mdc-plain-tooltip-supporting-text-font, inherit);font-size:var(--mdc-plain-tooltip-supporting-text-size, inherit);font-weight:var(--mdc-plain-tooltip-supporting-text-weight, inherit);letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking, inherit)}.mat-mdc-tooltip{position:relative;transform:scale(0)}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _tooltip: [{\n                type: ViewChild,\n                args: ['tooltip', {\n                        // Use a static query here since we interact directly with\n                        // the DOM which can happen before `ngAfterViewInit`.\n                        static: true,\n                    }]\n            }] } });\n\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nconst matTooltipAnimations = {\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: trigger('state', [\n        // TODO(crisbeto): these values are based on MDC's CSS.\n        // We should be able to use their styles directly once we land #19432.\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0.8)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => hidden', animate('75ms cubic-bezier(0.4, 0, 1, 1)')),\n    ]),\n};\n\nclass MatTooltipModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatTooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatTooltipModule, declarations: [MatTooltip, TooltipComponent], imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule], exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatTooltipModule, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule, MatCommonModule, CdkScrollableModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatTooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule],\n                    exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n                    declarations: [MatTooltip, TooltipComponent],\n                    providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, _MatTooltipBase, _TooltipComponentBase, getMatTooltipInvalidPositionError, matTooltipAnimations };\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]}