{"version":3,"file":"3597.5ae5aa76cd2f13f7.js","mappings":"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","names":["regexpEscape","s","replace","toNumberString","value","_a","_c","decimalMark","toString","regexpDecimalMark","n","trim","negative","match","getNumberRegexp","RegExp","exports","toNumber","NaN","Number","NumeralPipe","_classCallCheck","this","_createClass","key","format","undefined","concat","ɵfac","t","ɵpipe","i0","name","type","pure","NotAvailablePipe","defaultValue","EMBEDDABLE_COMPONENT","InjectionToken","SITE_NAME","HOST_NAME","PROTOCOL","DynamicContentViewer","componentFactoryResolver","elementRef","embeddedComponents","injector","_this","embeddedComponentFactories","Map","docRendered","EventEmitter","hostElement","nativeElement","forEach","component","factory","resolveComponentFactory","set","selector","content","ngOnDestroy","build","emit","_this2","innerHTML","querySelectorAll","element","_step","projectableNodes","Array","prototype","slice","call","childNodes","embeddedComponent","create","_iterator","_createForOfIteratorHelper","attributes","done","attr","instance","nodeName","nodeValue","err","e","f","push","comp","changeDetectorRef","detectChanges","destroy","length","ɵcmp","selectors","inputs","data","outputs","decls","vars","template","rf","ctx","encapsulation","Context","index","get","ForDirective","templateRef","viewContainer","num","clear","i","createEmbeddedView","ɵdir","loop","UtilsModule","ɵmod","ɵinj","imports","CommonModule","ModuleLoaderService","compiler","loadedModules","module","_this3","Observable","obs","then","m","indexOf","compileModuleAndAllComponentsAsync","mf","ngModuleFactory","next","complete","catch","ɵprov","token","providedIn","StyleLoaderService","document","styleName","head","getElementsByTagName","themeLink","getElementById","href","style","createElement","id","rel","appendChild","DOCUMENT","NoopDataService","entities","entity","of","delete","flat","v","params","update","AsyncApiCallHelperService","taskProcessor","MyAsyncTaskProcessor","promise","doTask","ZoneMacroTaskWrapper","request","_this4","observer","task","scheduled","sub","savedResult","savedError","scheduleTask","_task","delegate","subscribe","res","Error","invoke","Zone","current","scheduleMacroTask","error","unsubscribe","zone","cancelTask","_ZoneMacroTaskWrapper","_inherits","_super","_createSuper","wrap","result"],"sourceRoot":"webpack:///","sources":["./node_modules/number-string/dist/app.js","./node_modules/@rollthecloudinc/utils/fesm2022/rollthecloudinc-utils.mjs"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.toClosest = exports.toMoney = exports.toClean = exports.toNumber = exports.toNumberString = void 0;\n/**\n * Escape special RegExp characters in string\n */\nfunction regexpEscape(s) {\n    return s.replace(/[-[\\]/{}()*+?.\\\\^$]/g, \"\\\\$&\");\n}\n/**\n * Convert value to number string\n */\nfunction toNumberString(value, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.decimalMark, decimalMark = _c === void 0 ? \".\" : _c;\n    if (typeof value === \"number\") {\n        return value.toString();\n    }\n    if (typeof value !== \"string\") {\n        return \"NaN\";\n    }\n    var regexpDecimalMark = regexpEscape(decimalMark);\n    var n = value.trim();\n    var negative = n.match(/^\\(.*\\)$|^-/); //negative if matches '(...)' or '-...'\n    var getNumberRegexp = new RegExp(\"[^\\\\d\" + regexpDecimalMark + \"]|\" + regexpDecimalMark + \"(?=.*\" + regexpDecimalMark + \")|^\\\\D*\" + regexpDecimalMark + \"\\\\D*$\", \"g\");\n    n = n.replace(getNumberRegexp, \"\").replace(decimalMark, \".\"); //remove all except digits and last dot\n    if (n === \"\") {\n        n = \"NaN\";\n    }\n    else if (negative) {\n        n = \"-\" + n;\n    }\n    return n;\n}\nexports.toNumberString = toNumberString;\n/**\n * Convert value to number\n */\nfunction toNumber(value, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.decimalMark, decimalMark = _c === void 0 ? \".\" : _c;\n    var s = toNumberString(value, { decimalMark: decimalMark });\n    if (s === \"NaN\") {\n        return NaN;\n    }\n    return Number(s);\n}\nexports.toNumber = toNumber;\n/**\n * Like `toFixed` but removes trailing zeros\n */\nfunction toClean(value, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.decimalMark, decimalMark = _c === void 0 ? \".\" : _c, _d = _b.thousandSeperator, thousandSeperator = _d === void 0 ? null : _d, _e = _b.thousandSeparator, thousandSeparator = _e === void 0 ? \",\" : _e, _f = _b.maxPrecision, maxPrecision = _f === void 0 ? 100 : _f, _g = _b.minPrecision, minPrecision = _g === void 0 ? 0 : _g;\n    if (thousandSeperator) {\n        thousandSeparator = thousandSeperator;\n        console.error(\"`thousandSeperator` is deprecated use `thousandSeparator` instead.\");\n    }\n    value = toNumberString(value);\n    if (value === \"NaN\") {\n        return \"NaN\";\n    }\n    if (maxPrecision < 0) {\n        throw new Error(\"maxPrecision must be >= 0\");\n    }\n    if (minPrecision < 0) {\n        throw new Error(\"minPrecision must be >= 0\");\n    }\n    if (maxPrecision > 100) {\n        throw new Error(\"maxPrecision must be <= 100\");\n    }\n    if (minPrecision > 100) {\n        throw new Error(\"minPrecision must be <= 100\");\n    }\n    if (minPrecision > maxPrecision) {\n        throw new Error(\"minPrecision must be <= maxPrecision\");\n    }\n    var s = value;\n    // limit to maxPrecision\n    var dotIndex = s.lastIndexOf(\".\");\n    if (dotIndex > -1) {\n        var integer = (dotIndex === 0 ? \"0\" : s.slice(0, dotIndex));\n        var fraction = s.slice(dotIndex + 1, dotIndex + 1 + maxPrecision);\n        var remainder = s.slice(dotIndex + 1 + maxPrecision);\n        if (remainder.length > 0 && +remainder[0] > 4) {\n            // round up\n            var i = (BigInt(integer + fraction) + BigInt(1)).toString(10);\n            integer = i.slice(0, i.length - fraction.length);\n            fraction = i.slice(i.length - fraction.length);\n        }\n        s = integer + decimalMark + fraction;\n    }\n    else {\n        s += decimalMark;\n    }\n    // remove trailing 0s\n    var rmLen = 0;\n    for (var i = s.length - 1; i >= 0; i--) {\n        if (s[i] !== \"0\") {\n            break;\n        }\n        rmLen++;\n    }\n    s = s.slice(0, s.length - rmLen);\n    // limit to minPrecision\n    if (minPrecision > 0) {\n        var numZeros = void 0;\n        if (dotIndex > -1) {\n            numZeros = minPrecision - (s.length - dotIndex - 1);\n        }\n        else {\n            numZeros = minPrecision;\n        }\n        for (var i = 0; i < numZeros; i++) {\n            s += \"0\";\n        }\n    }\n    var regexpDecimalMark = regexpEscape(decimalMark);\n    var thousandSeparatorRegexp = new RegExp(\"\\\\d(?=(\\\\d{3})+\" + regexpDecimalMark + \")\", \"g\");\n    var trimRegexp = new RegExp(regexpDecimalMark + \"$\");\n    s = s.replace(thousandSeparatorRegexp, \"$&\" + thousandSeparator).replace(trimRegexp, \"\");\n    return s;\n}\nexports.toClean = toClean;\n/**\n * Convert string or number to currency string\n * modified from http://stackoverflow.com/a/149099/806777\\\n */\nfunction toMoney(value, _a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.decimalMark, decimalMark = _c === void 0 ? \".\" : _c, _d = _b.thousandSeperator, thousandSeperator = _d === void 0 ? null : _d, _e = _b.thousandSeparator, thousandSeparator = _e === void 0 ? \",\" : _e, _f = _b.maxPrecision, maxPrecision = _f === void 0 ? 2 : _f, _g = _b.minPrecision, minPrecision = _g === void 0 ? 2 : _g, _h = _b.symbol, symbol = _h === void 0 ? \"$\" : _h, _j = _b.symbolBehind, symbolBehind = _j === void 0 ? false : _j, _k = _b.useParens, useParens = _k === void 0 ? true : _k;\n    if (thousandSeperator) {\n        thousandSeparator = thousandSeperator;\n        console.error(\"`thousandSeperator` is deprecated use `thousandSeparator` instead.\");\n    }\n    var n = (typeof value === \"number\"\n        ? value\n        : toNumber(value, {\n            decimalMark: decimalMark\n        }));\n    var s = toNumberString(value, {\n        decimalMark: decimalMark\n    });\n    if (isNaN(n)) {\n        return \"NaN\";\n    }\n    if (n === Infinity) {\n        return \"Infinity\";\n    }\n    if (n === -Infinity) {\n        return (useParens ? \"(Infinity)\" : \"-Infinity\");\n    }\n    if (maxPrecision < 2 && typeof arguments[1].minPrecision === \"undefined\") {\n        minPrecision = maxPrecision;\n    }\n    if (minPrecision > 2 && typeof arguments[1].maxPrecision === \"undefined\") {\n        maxPrecision = minPrecision;\n    }\n    var negative = n < 0;\n    s = toClean(negative ? s.slice(1) : s, {\n        decimalMark: decimalMark,\n        thousandSeparator: thousandSeparator,\n        maxPrecision: maxPrecision,\n        minPrecision: minPrecision\n    });\n    s = (symbolBehind ? s + \" \" + symbol : symbol + s);\n    if (negative) {\n        s = (useParens ? \"(\" + s + \")\" : \"-\" + s);\n    }\n    return s;\n}\nexports.toMoney = toMoney;\n/**\n * Round number to closest multiple of number\n */\nfunction toClosest(value, roundTo) {\n    if (roundTo === void 0) { roundTo = 1; }\n    if (typeof value !== \"number\") {\n        value = toNumber(value);\n    }\n    if (isNaN(value)) {\n        return NaN;\n    }\n    if (value === Infinity || value === -Infinity) {\n        return value;\n    }\n    if (typeof roundTo !== \"number\") {\n        roundTo = toNumber(roundTo);\n    }\n    if (isNaN(roundTo)) {\n        throw Error(\"roundTo must be a number\");\n    }\n    if (roundTo === Infinity || roundTo === -Infinity) {\n        return roundTo;\n    }\n    var n = Math.round(value / roundTo) * roundTo;\n    var maxPrecision = 0;\n    while (!Number.isInteger(roundTo)) {\n        roundTo *= 10;\n        maxPrecision++;\n    }\n    n = +n.toFixed(maxPrecision);\n    return n;\n}\nexports.toClosest = toClosest;\n","import * as i0 from '@angular/core';\nimport { Pipe, InjectionToken, EventEmitter, Component, Inject, Input, Output, Directive, NgModule, Injectable } from '@angular/core';\nimport { CommonModule, DOCUMENT } from '@angular/common';\nimport { toNumber } from 'number-string';\nimport { Observable, of } from 'rxjs';\n\nclass NumeralPipe {\n    transform(value, format) {\n        if (value === undefined || value === '') {\n            return;\n        }\n        // @todo: reimplment format.\n        // return toNumber(`${value}`).format(format);\n        return toNumber(`${value}`);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: NumeralPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }\n    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"16.0.5\", ngImport: i0, type: NumeralPipe, name: \"numeral\" }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: NumeralPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'numeral'\n                }]\n        }] });\n\nclass NotAvailablePipe {\n    transform(value, defaultValue) {\n        return !value || value === '' ? defaultValue : value;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: NotAvailablePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }\n    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"16.0.5\", ngImport: i0, type: NotAvailablePipe, name: \"na\" }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: NotAvailablePipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'na'\n                }]\n        }] });\n\nconst EMBEDDABLE_COMPONENT = new InjectionToken('EmbeddableComponent');\nconst SITE_NAME = new InjectionToken('Site Name');\nconst HOST_NAME = new InjectionToken('Host Name');\nconst PROTOCOL = new InjectionToken('Request Protocol');\n\nclass DynamicContentViewer {\n    constructor(componentFactoryResolver, elementRef, embeddedComponents, injector) {\n        this.injector = injector;\n        this.embeddedComponentFactories = new Map();\n        this.embeddedComponents = [];\n        this.docRendered = new EventEmitter();\n        this.hostElement = elementRef.nativeElement;\n        embeddedComponents.forEach(component => {\n            const factory = componentFactoryResolver.resolveComponentFactory(component);\n            this.embeddedComponentFactories.set(factory.selector, factory);\n        });\n    }\n    set content(content) {\n        this.ngOnDestroy();\n        if (content) {\n            this.build(content);\n            this.docRendered.emit();\n        }\n    }\n    build(content) {\n        this.hostElement.innerHTML = content || '';\n        if (!content) {\n            return;\n        }\n        this.embeddedComponentFactories.forEach((factory, selector) => {\n            const embeddedComponentElements = this.hostElement.querySelectorAll(selector);\n            embeddedComponentElements.forEach(element => {\n                //convert NodeList into an array, since Angular dosen't like having a NodeList passed\n                //for projectableNodes\n                const projectableNodes = [Array.prototype.slice.call(element.childNodes)];\n                const embeddedComponent = factory.create(this.injector, projectableNodes, element);\n                //apply inputs into the dynamic component\n                //only static ones work here since this is the only time they're set\n                for (const attr of element.attributes) {\n                    embeddedComponent.instance[attr.nodeName] = attr.nodeValue;\n                }\n                this.embeddedComponents.push(embeddedComponent);\n            });\n        });\n    }\n    ngDoCheck() {\n        this.embeddedComponents.forEach(comp => comp.changeDetectorRef.detectChanges());\n    }\n    ngOnDestroy() {\n        // destroy these components else there will be memory leaks\n        this.embeddedComponents.forEach(comp => comp.destroy());\n        this.embeddedComponents.length = 0;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: DynamicContentViewer, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ElementRef }, { token: EMBEDDABLE_COMPONENT }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.5\", type: DynamicContentViewer, selector: \"classifieds-ui-dynamic-content-viewer\", inputs: { data: \"data\", content: \"content\" }, outputs: { docRendered: \"docRendered\" }, ngImport: i0, template: '', isInline: true }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: DynamicContentViewer, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'classifieds-ui-dynamic-content-viewer',\n                    template: '',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }, { type: i0.ElementRef }, { type: Array, decorators: [{\n                    type: Inject,\n                    args: [EMBEDDABLE_COMPONENT]\n                }] }, { type: i0.Injector }]; }, propDecorators: { data: [{\n                type: Input\n            }], docRendered: [{\n                type: Output\n            }], content: [{\n                type: Input\n            }] } });\n\nclass Context {\n    constructor(index, length) {\n        this.index = index;\n        this.length = length;\n    }\n    get even() { return this.index % 2 === 0; }\n    get odd() { return this.index % 2 === 1; }\n    get first() { return this.index === 0; }\n    get last() { return this.index === this.length - 1; }\n}\nclass ForDirective {\n    constructor(templateRef, viewContainer) {\n        this.templateRef = templateRef;\n        this.viewContainer = viewContainer;\n    }\n    set loop(num) {\n        this.viewContainer.clear();\n        for (var i = 0; i < num; i++)\n            this.viewContainer.createEmbeddedView(this.templateRef, new Context(i, num));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: ForDirective, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.5\", type: ForDirective, selector: \"[for]:not(label)\", inputs: { loop: [\"for\", \"loop\"] }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: ForDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[for]:not(label)'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }]; }, propDecorators: { loop: [{\n                type: Input,\n                args: ['for']\n            }] } });\n\nclass UtilsModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: UtilsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.5\", ngImport: i0, type: UtilsModule, declarations: [NumeralPipe, NotAvailablePipe, DynamicContentViewer, ForDirective], imports: [CommonModule], exports: [NumeralPipe, NotAvailablePipe, DynamicContentViewer, ForDirective] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: UtilsModule, imports: [CommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: UtilsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [NumeralPipe, NotAvailablePipe, DynamicContentViewer, ForDirective],\n                    exports: [NumeralPipe, NotAvailablePipe, DynamicContentViewer, ForDirective]\n                }]\n        }] });\n\nclass ModuleLoaderService {\n    constructor(compiler, injector) {\n        this.compiler = compiler;\n        this.injector = injector;\n        this.loadedModules = [];\n    }\n    loadModule(module) {\n        return new Observable(obs => {\n            module().then(m => {\n                if (this.loadedModules.indexOf(name => name == m.name) !== -1) {\n                    throw '';\n                }\n                else {\n                    this.loadedModules.push(m.name);\n                    return m;\n                }\n            }).then(m => this.compiler.compileModuleAndAllComponentsAsync(m)).then(mf => {\n                const moduleRef = mf.ngModuleFactory.create(this.injector);\n                // moduleRef.componentFactoryResolver.resolveComponentFactory(LazyComponent);\n                obs.next(true);\n                obs.complete();\n            }).catch(() => {\n                obs.next(true);\n                obs.complete();\n            });\n        });\n        /*mport(module)module().then(m => {\n          this.compiler.compileModuleAndAllComponentsAsync(m);\n          console.log(`module imported: ${module}`);\n        });*/\n        /*import('./carousel/carousel.module').then(({ CarouselModule }) => {\n          const injector = createInjector(CarouselModule, this.injector);\n          const carouselModule = injector.get(CarouselModule);\n          const componentFactory = carouselModule.resolveCarouselComponentFactory();\n        });*/\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: ModuleLoaderService, deps: [{ token: i0.Compiler }, { token: i0.Injector }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: ModuleLoaderService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: ModuleLoaderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Compiler }, { type: i0.Injector }]; } });\n\nclass StyleLoaderService {\n    constructor(document) {\n        this.document = document;\n    }\n    loadStyle(styleName) {\n        const head = this.document.getElementsByTagName('head')[0];\n        let themeLink = this.document.getElementById('client-theme');\n        if (themeLink) {\n            themeLink.href = styleName;\n        }\n        else {\n            const style = this.document.createElement('link');\n            style.id = 'client-theme';\n            style.rel = 'stylesheet';\n            style.href = `${styleName}`;\n            head.appendChild(style);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: StyleLoaderService, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: StyleLoaderService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: StyleLoaderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\nclass NoopDataService {\n    constructor(name) {\n        this.entities = new Map();\n        this.name = name;\n    }\n    add(entity) {\n        return of(entity);\n    }\n    delete(id) {\n        this.entities.delete(id);\n        return of(id);\n    }\n    getAll() {\n        const flat = [];\n        this.entities.forEach(v => {\n            flat.push(v);\n        });\n        return of(flat);\n    }\n    getById(id) {\n        return of(this.entities.get(id));\n    }\n    getWithQuery(params) {\n        const flat = [];\n        this.entities.forEach(v => {\n            flat.push(v);\n        });\n        return of(flat);\n    }\n    update(update) {\n        return of(undefined);\n    }\n    upsert(entity) {\n        //this.entities.set(entity.id, entity);\n        return of(entity);\n    }\n}\n\nclass AsyncApiCallHelperService {\n    constructor() {\n        this.taskProcessor = new MyAsyncTaskProcessor();\n    }\n    doTask(promise) {\n        return this.taskProcessor.doTask(promise);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: AsyncApiCallHelperService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: AsyncApiCallHelperService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.5\", ngImport: i0, type: AsyncApiCallHelperService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return []; } });\nclass ZoneMacroTaskWrapper {\n    wrap(request) {\n        return new Observable((observer) => {\n            let task;\n            let scheduled = false;\n            let sub = null;\n            let savedResult = null;\n            let savedError = null;\n            // tslint:disable-next-line:no-shadowed-variable\n            const scheduleTask = (_task) => {\n                task = _task;\n                scheduled = true;\n                const delegate = this.delegate(request);\n                sub = delegate.subscribe(res => savedResult = res, err => {\n                    if (!scheduled) {\n                        throw new Error('An http observable was completed twice. This shouldn\\'t happen, please file a bug.');\n                    }\n                    savedError = err;\n                    scheduled = false;\n                    task.invoke();\n                }, () => {\n                    if (!scheduled) {\n                        throw new Error('An http observable was completed twice. This shouldn\\'t happen, please file a bug.');\n                    }\n                    scheduled = false;\n                    task.invoke();\n                });\n            };\n            // tslint:disable-next-line:no-shadowed-variable\n            const cancelTask = (_task) => {\n                if (!scheduled) {\n                    return;\n                }\n                scheduled = false;\n                if (sub) {\n                    sub.unsubscribe();\n                    sub = null;\n                }\n            };\n            const onComplete = () => {\n                if (savedError !== null) {\n                    observer.error(savedError);\n                }\n                else {\n                    observer.next(savedResult);\n                    observer.complete();\n                }\n            };\n            // MockBackend for Http is synchronous, which means that if scheduleTask is by\n            // scheduleMacroTask, the request will hit MockBackend and the response will be\n            // sent, causing task.invoke() to be called.\n            const _task = Zone.current.scheduleMacroTask('ZoneMacroTaskWrapper.subscribe', onComplete, {}, () => null, cancelTask);\n            scheduleTask(_task);\n            return () => {\n                if (scheduled && task) {\n                    task.zone.cancelTask(task);\n                    scheduled = false;\n                }\n                if (sub) {\n                    sub.unsubscribe();\n                    sub = null;\n                }\n            };\n        });\n    }\n}\nclass MyAsyncTaskProcessor extends ZoneMacroTaskWrapper {\n    constructor() { super(); }\n    // your public task invocation method signature\n    doTask(request) {\n        // call via ZoneMacroTaskWrapper\n        return this.wrap(request);\n    }\n    // delegated raw implementation that will be called by ZoneMacroTaskWrapper\n    delegate(request) {\n        return new Observable((observer) => {\n            // calling observer.next / complete / error\n            request\n                .then(result => {\n                observer.next(result);\n                observer.complete();\n            }).catch(error => observer.error(error));\n        });\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AsyncApiCallHelperService, DynamicContentViewer, EMBEDDABLE_COMPONENT, ForDirective, HOST_NAME, ModuleLoaderService, MyAsyncTaskProcessor, NoopDataService, NotAvailablePipe, NumeralPipe, PROTOCOL, SITE_NAME, StyleLoaderService, UtilsModule, ZoneMacroTaskWrapper };\n"],"x_google_ignoreList":[0,1]}