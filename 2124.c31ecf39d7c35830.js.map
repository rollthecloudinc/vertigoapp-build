{"version":3,"file":"2124.c31ecf39d7c35830.js","mappings":"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","names":["BehaviorSubject","_Subject","_inherits","_super","_createSuper","_value","_this","_classCallCheck","this","call","_createClass","key","get","getValue","value","subscriber","subscription","_get","_getPrototypeOf","prototype","closed","next","hasError","thrownError","_throwIfClosed","Subject","ObjectUnsubscribedError","createErrorClass","name","message","_Observable","currentObservers","observers","isStopped","operator","subject","AnonymousSubject","_this2","errorContext","Array","from","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","_this3","length","shift","error","_this4","complete","_a","_checkFinalizedStatuses","_innerSubscribe","_this5","EMPTY_SUBSCRIPTION","push","Subscription","arrRemove","observable","Observable","source","create","destination","_super2","_this6","_b","subscribe","EMPTY","subscribeOn","scheduler","delay","arguments","undefined","operate","add","schedule","scheduleAsyncIterable","input","Error","executeSchedule","iterator","Symbol","asyncIterator","then","result","scheduled","isInteropObservable","scheduleObservable","innerFrom","pipe","observeOn","isArrayLike","scheduleArray","i","isPromise","schedulePromise","isAsyncIterable","isIterable","scheduleIterable","Symbol_iterator","_iterator$next","isFunction","return","isReadableStreamLike","scheduleReadableStreamLike","readableStreamLikeToAsyncGenerator","createInvalidObservableTypeError","of","_len","args","_key","popScheduler","createOperatorSubscriber","onNext","onComplete","onError","onFinalize","OperatorSubscriber","_Subscriber","shouldUnsubscribe","_thisSuper","_thisSuper2","_thisSuper3","_next","_assertThisInitialized","_error","unsubscribe","_complete","Subscriber","take","count","seen","takeUntil","notifier","noop","last","arr","popResultSelector","pop","isScheduler","popNumber","defaultValue","parentSubscription","work","repeat","scheduleSubscription","isObservable","obj","lift","hasLift","init","liftedSource","TypeError","_c0","_c1","CdkTextColumn_th_1_Template","rf","ctx","i0","ctx_r0","justify","headerText","CdkTextColumn_td_2_Template","data_r2","$implicit","ctx_r1","dataAccessor","mixinHasStickyInput","base","_base","_class","apply","concat","_sticky","_hasStickyChanged","set","v","prevValue","coerceBooleanProperty","hasStickyChanged","CDK_TABLE","InjectionToken","TEXT_COLUMN_OPTIONS","CdkCellDef","template","ɵfac","t","ɵdir","type","selectors","CdkHeaderCellDef","CdkFooterCellDef","_CdkColumnDefBase","CdkColumnDefBase","CdkColumnDef","_CdkColumnDefBase2","_table","_stickyEnd","_name","_setNameInput","_columnCssClassName","cssClassFriendlyName","replace","_updateColumnCssClassName","contentQueries","dirIndex","_t","cell","first","headerCell","footerCell","inputs","sticky","stickyEnd","features","provide","useExisting","BaseCdkCell","columnDef","elementRef","_elementRef$nativeEle","nativeElement","classList","_toConsumableArray","CdkHeaderCell","_BaseCdkCell","_super3","hostAttrs","CdkFooterCell","_BaseCdkCell2","_super4","_columnDef$_table","_elementRef","nodeType","tableRole","getAttribute","setAttribute","CdkCell","_BaseCdkCell3","_super5","_columnDef$_table2","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_ngZone","_currentSchedule","_destroyed","task","_createScheduleIfNeeded","_getScheduleObservable","_step2","_iterator2","isStable","Promise","resolve","onStable","ɵprov","token","factory","CDK_ROW_TEMPLATE","BaseRowDef","_differs","changes","_columnsDiffer","columns","currentValue","find","diff","column","CdkHeaderRowDef","CdkFooterRowDef","_CdkHeaderRowDefBase","_BaseRowDef","CdkHeaderRowDefBase","_super6","_CdkHeaderRowDefBase2","_super7","_CdkFooterRowDefBase","_BaseRowDef2","CdkFooterRowDefBase","_super8","_CdkFooterRowDefBase2","_super9","_this7","CdkRowDef","_BaseRowDef3","_super10","_this8","when","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkHeaderRow","ɵcmp","decls","vars","consts","dependencies","encapsulation","CdkFooterRow","CdkRow","CdkNoDataRow","templateRef","_contentClassName","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_cachedCellWidths","_borderCellCss","top","bottom","left","right","rows","stickyDirections","_step3","_this9","elementsToClear","_iterator3","row","ELEMENT_NODE","children","_i2","_elementsToClear","_removeStickyStyle","stickyStartStates","stickyEndStates","_this10","recalculateCellWidths","some","state","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","lastStickyStart","lastIndexOf","firstStickyEnd","indexOf","_step4","isRtl","start","end","_iterator4","_addStickyStyle","stickyColumnsUpdated","sizes","slice","map","width","index","stickyEndColumnsUpdated","reverse","rowsToStick","stickyStates","position","_this11","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","height","getBoundingClientRect","borderedRowIndex","_step5","offset","isBorderedRowIndex","_iterator5","_this11$_positionList","_this11$_positionList2","stickyHeaderRowsUpdated","offsets","elements","stickyFooterRowsUpdated","tableElement","_this12","tfoot","querySelector","element","_step6","_iterator6","dir","style","remove","zIndex","_getCalculatedZIndex","dirValue","isBorderElement","cssText","zIndexIncrements","_i3","_STICKY_DIRECTIONS","firstRowCells","widths","positions","nextPosition","STICKY_POSITIONING_LISTENER","CdkRecycleRows","_VIEW_REPEATER_STRATEGY","useClass","_RecycleViewRepeaterStrategy","DataRowOutlet","viewContainer","HeaderRowOutlet","FooterRowOutlet","NoDataRowOutlet","CDK_TABLE_TEMPLATE","CdkTable","_changeDetectorRef","role","_dir","_document","_platform","_viewRepeater","_viewportRuler","_stickyPositioningListener","_onDestroy","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_stickyColumnStylesNeedReset","_forceRecalculateCellWidths","_cachedRenderRowsMap","stickyCssClass","needsPositionStickyOnElement","_isShowingNoDataRow","_multiTemplateDataRows","_fixedLayout","contentChanged","EventEmitter","viewChange","Number","MAX_VALUE","nodeName","_trackByFn","fn","_dataSource","dataSource","_switchDataSource","_rowOutlet","_forceRenderDataRows","updateStickyColumnStyles","_this13","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","trackBy","dataIndex","data","change","_cacheRowDefs","_cacheColumnDefs","rowDefsChanged","_renderUpdatedColumns","_forceRenderHeaderRows","_forceRenderFooterRows","_rowDefs","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_headerRowOutlet","_footerRowOutlet","forEach","def","clear","_headerRowDefs","_footerRowDefs","_defaultRowDef","isDataSource","disconnect","_this14","_renderRows","_getAllRenderRows","_updateNoDataRow","applyChanges","record","_adjustedPreviousIndex","currentIndex","_getEmbeddedViewArgs","item","operation","context","_renderCellTemplateForItem","rowDef","_updateRowIndexContext","forEachIdentityChange","NgZone","delete","headerRowDef","footerRowDef","noDataRow","_customNoDataRow","headerRows","_getRenderedRows","thead","display","_stickyStyler","clearStickyPositioning","stickRows","resetStickyChanged","footerRows","updateStickyFooterContainer","_this15","dataRows","headerRow","_addStickyColumnStyles","footerRow","values","renderRows","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","WeakMap","j","renderRow","cache","_getRowDefs","cachedRenderRows","_this16","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","columnsDiffReducer","acc","getColumnsDiff","dataColumnsChanged","reduce","headerColumnsChanged","footerColumnsChanged","dataStream","_this17","connect","isArray","_this18","_renderRow","updateStickyHeaderRowStyles","_this19","updateStickyFooterRowStyles","_this20","columnDefs","columnName","updateStickyColumns","rowOutlet","renderedRows","viewRef","rootNodes","rowDefs","multiTemplateDataRows","outlet","view","createEmbeddedView","_step7","_iterator7","_getCellTemplates","markForCheck","renderIndex","even","odd","_this21","columnId","extractCellTemplate","documentFragment","createDocumentFragment","_i4","_sections","tag","outlets","_noDataRowOutlet","section","createElement","_step8","_iterator8","appendChild","stickyCheckReducer","d","_this22","isBrowser","items","_this23","_noDataRow","shouldShow","container","rootNode","i1","DOCUMENT","i2","i3","viewQuery","hostVars","hostBindings","fixedLayout","outputs","exportAs","_DisposeViewRepeaterStrategy","useValue","ngContentSelectors","styles","array","CdkTextColumn","_options","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","addColumnDef","removeColumnDef","defaultHeaderTextTransform","toUpperCase","CdkTableModule","ɵmod","ɵinj","imports","ScrollingModule","_arrayLikeToArray","len","arr2","self","ReferenceError","o","allowArrayLike","it","_unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_0__","Z","F","_e","normalCompletion","didErr","step","_e2","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","Super","getPrototypeOf","NewTarget","constructor","Reflect","construct","_possibleConstructorReturn","esm_typeof","assertThisInitialized","bind","target","property","receiver","_superPropBase","object","Object","hasOwnProperty","desc","getOwnPropertyDescriptor","setPrototypeOf","__proto__","subClass","superClass","writable","configurable","defineProperty","_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__","_isNativeReflectConstruct","sham","Proxy","Boolean","valueOf","_iterableToArray","iter","_setPrototypeOf","p","_arrayWithoutHoles","arrayLikeToArray","iterableToArray","unsupportedIterableToArray","_nonIterableSpread","_unsupportedIterableToArray","minLen","_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__","toString","test"],"sourceRoot":"webpack:///","sources":["./node_modules/rxjs/dist/esm/internal/BehaviorSubject.js","./node_modules/rxjs/dist/esm/internal/util/ObjectUnsubscribedError.js","./node_modules/rxjs/dist/esm/internal/Subject.js","./node_modules/rxjs/dist/esm/internal/observable/empty.js","./node_modules/rxjs/dist/esm/internal/operators/subscribeOn.js","./node_modules/rxjs/dist/esm/internal/scheduled/scheduleAsyncIterable.js","./node_modules/rxjs/dist/esm/internal/observable/from.js","./node_modules/rxjs/dist/esm/internal/scheduled/scheduled.js","./node_modules/rxjs/dist/esm/internal/scheduled/scheduleObservable.js","./node_modules/rxjs/dist/esm/internal/scheduled/scheduleArray.js","./node_modules/rxjs/dist/esm/internal/scheduled/schedulePromise.js","./node_modules/rxjs/dist/esm/internal/scheduled/scheduleIterable.js","./node_modules/rxjs/dist/esm/internal/scheduled/scheduleReadableStreamLike.js","./node_modules/rxjs/dist/esm/internal/observable/of.js","./node_modules/rxjs/dist/esm/internal/operators/OperatorSubscriber.js","./node_modules/rxjs/dist/esm/internal/operators/observeOn.js","./node_modules/rxjs/dist/esm/internal/operators/take.js","./node_modules/rxjs/dist/esm/internal/operators/takeUntil.js","./node_modules/rxjs/dist/esm/internal/util/args.js","./node_modules/rxjs/dist/esm/internal/util/executeSchedule.js","./node_modules/rxjs/dist/esm/internal/util/isObservable.js","./node_modules/rxjs/dist/esm/internal/util/isScheduler.js","./node_modules/rxjs/dist/esm/internal/util/lift.js","./node_modules/@angular/cdk/fesm2022/table.mjs","./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","./node_modules/@babel/runtime/helpers/esm/createSuper.js","./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","./node_modules/@babel/runtime/helpers/esm/get.js","./node_modules/@babel/runtime/helpers/esm/superPropBase.js","./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","./node_modules/@babel/runtime/helpers/esm/inherits.js","./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js"],"sourcesContent":["import { Subject } from './Subject';\nexport class BehaviorSubject extends Subject {\n    constructor(_value) {\n        super();\n        this._value = _value;\n    }\n    get value() {\n        return this.getValue();\n    }\n    _subscribe(subscriber) {\n        const subscription = super._subscribe(subscriber);\n        !subscription.closed && subscriber.next(this._value);\n        return subscription;\n    }\n    getValue() {\n        const { hasError, thrownError, _value } = this;\n        if (hasError) {\n            throw thrownError;\n        }\n        this._throwIfClosed();\n        return _value;\n    }\n    next(value) {\n        super.next((this._value = value));\n    }\n}\n","import { createErrorClass } from './createErrorClass';\nexport const ObjectUnsubscribedError = createErrorClass((_super) => function ObjectUnsubscribedErrorImpl() {\n    _super(this);\n    this.name = 'ObjectUnsubscribedError';\n    this.message = 'object unsubscribed';\n});\n","import { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nexport class Subject extends Observable {\n    constructor() {\n        super();\n        this.closed = false;\n        this.currentObservers = null;\n        this.observers = [];\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    lift(operator) {\n        const subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    }\n    _throwIfClosed() {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n    }\n    next(value) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                if (!this.currentObservers) {\n                    this.currentObservers = Array.from(this.observers);\n                }\n                for (const observer of this.currentObservers) {\n                    observer.next(value);\n                }\n            }\n        });\n    }\n    error(err) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.hasError = this.isStopped = true;\n                this.thrownError = err;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().error(err);\n                }\n            }\n        });\n    }\n    complete() {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.isStopped = true;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().complete();\n                }\n            }\n        });\n    }\n    unsubscribe() {\n        this.isStopped = this.closed = true;\n        this.observers = this.currentObservers = null;\n    }\n    get observed() {\n        var _a;\n        return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    _trySubscribe(subscriber) {\n        this._throwIfClosed();\n        return super._trySubscribe(subscriber);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._checkFinalizedStatuses(subscriber);\n        return this._innerSubscribe(subscriber);\n    }\n    _innerSubscribe(subscriber) {\n        const { hasError, isStopped, observers } = this;\n        if (hasError || isStopped) {\n            return EMPTY_SUBSCRIPTION;\n        }\n        this.currentObservers = null;\n        observers.push(subscriber);\n        return new Subscription(() => {\n            this.currentObservers = null;\n            arrRemove(observers, subscriber);\n        });\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, thrownError, isStopped } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped) {\n            subscriber.complete();\n        }\n    }\n    asObservable() {\n        const observable = new Observable();\n        observable.source = this;\n        return observable;\n    }\n}\nSubject.create = (destination, source) => {\n    return new AnonymousSubject(destination, source);\n};\nexport class AnonymousSubject extends Subject {\n    constructor(destination, source) {\n        super();\n        this.destination = destination;\n        this.source = source;\n    }\n    next(value) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n    }\n    error(err) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n    }\n    complete() {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    _subscribe(subscriber) {\n        var _a, _b;\n        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n    }\n}\n","import { Observable } from '../Observable';\nexport const EMPTY = new Observable((subscriber) => subscriber.complete());\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n","import { operate } from '../util/lift';\nexport function subscribeOn(scheduler, delay = 0) {\n    return operate((source, subscriber) => {\n        subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\n    });\n}\n","import { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleAsyncIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    return new Observable((subscriber) => {\n        executeSchedule(subscriber, scheduler, () => {\n            const iterator = input[Symbol.asyncIterator]();\n            executeSchedule(subscriber, scheduler, () => {\n                iterator.next().then((result) => {\n                    if (result.done) {\n                        subscriber.complete();\n                    }\n                    else {\n                        subscriber.next(result.value);\n                    }\n                });\n            }, 0, true);\n        });\n    });\n}\n","import { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\nexport function from(input, scheduler) {\n    return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\nexport function scheduled(input, scheduler) {\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return scheduleObservable(input, scheduler);\n        }\n        if (isArrayLike(input)) {\n            return scheduleArray(input, scheduler);\n        }\n        if (isPromise(input)) {\n            return schedulePromise(input, scheduler);\n        }\n        if (isAsyncIterable(input)) {\n            return scheduleAsyncIterable(input, scheduler);\n        }\n        if (isIterable(input)) {\n            return scheduleIterable(input, scheduler);\n        }\n        if (isReadableStreamLike(input)) {\n            return scheduleReadableStreamLike(input, scheduler);\n        }\n    }\n    throw createInvalidObservableTypeError(input);\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nexport function scheduleObservable(input, scheduler) {\n    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { Observable } from '../Observable';\nexport function scheduleArray(input, scheduler) {\n    return new Observable((subscriber) => {\n        let i = 0;\n        return scheduler.schedule(function () {\n            if (i === input.length) {\n                subscriber.complete();\n            }\n            else {\n                subscriber.next(input[i++]);\n                if (!subscriber.closed) {\n                    this.schedule();\n                }\n            }\n        });\n    });\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nexport function schedulePromise(input, scheduler) {\n    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleIterable(input, scheduler) {\n    return new Observable((subscriber) => {\n        let iterator;\n        executeSchedule(subscriber, scheduler, () => {\n            iterator = input[Symbol_iterator]();\n            executeSchedule(subscriber, scheduler, () => {\n                let value;\n                let done;\n                try {\n                    ({ value, done } = iterator.next());\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (done) {\n                    subscriber.complete();\n                }\n                else {\n                    subscriber.next(value);\n                }\n            }, 0, true);\n        });\n        return () => isFunction(iterator === null || iterator === void 0 ? void 0 : iterator.return) && iterator.return();\n    });\n}\n","import { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nexport function scheduleReadableStreamLike(input, scheduler) {\n    return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n","import { popScheduler } from '../util/args';\nimport { from } from './from';\nexport function of(...args) {\n    const scheduler = popScheduler(args);\n    return from(args, scheduler);\n}\n","import { Subscriber } from '../Subscriber';\nexport function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {\n    return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\nexport class OperatorSubscriber extends Subscriber {\n    constructor(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {\n        super(destination);\n        this.onFinalize = onFinalize;\n        this.shouldUnsubscribe = shouldUnsubscribe;\n        this._next = onNext\n            ? function (value) {\n                try {\n                    onNext(value);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n            }\n            : super._next;\n        this._error = onError\n            ? function (err) {\n                try {\n                    onError(err);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._error;\n        this._complete = onComplete\n            ? function () {\n                try {\n                    onComplete();\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._complete;\n    }\n    unsubscribe() {\n        var _a;\n        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n            const { closed } = this;\n            super.unsubscribe();\n            !closed && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n        }\n    }\n}\n","import { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function observeOn(scheduler, delay = 0) {\n    return operate((source, subscriber) => {\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay), () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay), (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)));\n    });\n}\n","import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function take(count) {\n    return count <= 0\n        ?\n            () => EMPTY\n        : operate((source, subscriber) => {\n            let seen = 0;\n            source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n                if (++seen <= count) {\n                    subscriber.next(value);\n                    if (count <= seen) {\n                        subscriber.complete();\n                    }\n                }\n            }));\n        });\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\nexport function takeUntil(notifier) {\n    return operate((source, subscriber) => {\n        innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n        !subscriber.closed && source.subscribe(subscriber);\n    });\n}\n","import { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\nfunction last(arr) {\n    return arr[arr.length - 1];\n}\nexport function popResultSelector(args) {\n    return isFunction(last(args)) ? args.pop() : undefined;\n}\nexport function popScheduler(args) {\n    return isScheduler(last(args)) ? args.pop() : undefined;\n}\nexport function popNumber(args, defaultValue) {\n    return typeof last(args) === 'number' ? args.pop() : defaultValue;\n}\n","export function executeSchedule(parentSubscription, scheduler, work, delay = 0, repeat = false) {\n    const scheduleSubscription = scheduler.schedule(function () {\n        work();\n        if (repeat) {\n            parentSubscription.add(this.schedule(null, delay));\n        }\n        else {\n            this.unsubscribe();\n        }\n    }, delay);\n    parentSubscription.add(scheduleSubscription);\n    if (!repeat) {\n        return scheduleSubscription;\n    }\n}\n","import { Observable } from '../Observable';\nimport { isFunction } from './isFunction';\nexport function isObservable(obj) {\n    return !!obj && (obj instanceof Observable || (isFunction(obj.lift) && isFunction(obj.subscribe)));\n}\n","import { isFunction } from './isFunction';\nexport function isScheduler(value) {\n    return value && isFunction(value.schedule);\n}\n","import { isFunction } from './isFunction';\nexport function hasLift(source) {\n    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n    return (source) => {\n        if (hasLift(source)) {\n            return source.lift(function (liftedSource) {\n                try {\n                    return init(liftedSource, this);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            });\n        }\n        throw new TypeError('Unable to lift unknown Observable type');\n    };\n}\n","import * as i1 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, isDataSource, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nexport { DataSource } from '@angular/cdk/collections';\nimport * as i2 from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, Input, ContentChild, Injectable, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, EventEmitter, NgZone, Attribute, SkipSelf, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\n\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        /** Whether sticky positioning should be applied. */\n        get sticky() {\n            return this._sticky;\n        }\n        set sticky(v) {\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /** Whether the sticky value has changed since this was last called. */\n        hasStickyChanged() {\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /** Whether the sticky input has changed since it was last checked. */\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkCellDef, selector: \"[cdkCellDef]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkHeaderCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkHeaderCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkFooterCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkFooterCellDef, selector: \"[cdkFooterCellDef]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkFooterCellDef]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {\n}\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    set stickyEnd(v) {\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setNameInput(value) {\n        // If the directive is set without a name (updated programmatically), then this setter will\n        // trigger with an empty string and should not overwrite the programmatically set value.\n        if (value) {\n            this._name = value;\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/gi, '-');\n            this._updateColumnCssClassName();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkColumnDef, deps: [{ token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }], queries: [{ propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true }, { propertyName: \"footerCell\", first: true, predicate: CdkFooterCellDef, descendants: true }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkColumnDef]',\n                    inputs: ['sticky'],\n                    providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }],\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { name: [{\n                type: Input,\n                args: ['cdkColumnDef']\n            }], stickyEnd: [{\n                type: Input,\n                args: ['stickyEnd']\n            }], cell: [{\n                type: ContentChild,\n                args: [CdkCellDef]\n            }], headerCell: [{\n                type: ContentChild,\n                args: [CdkHeaderCellDef]\n            }], footerCell: [{\n                type: ContentChild,\n                args: [CdkFooterCellDef]\n            }] } });\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        elementRef.nativeElement.classList.add(...columnDef._columnCssClassName);\n    }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkHeaderCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"cdk-header-cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-header-cell, th[cdk-header-cell]',\n                    host: {\n                        'class': 'cdk-header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        if (columnDef._table?._elementRef.nativeElement.nodeType === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement.getAttribute('role');\n            const role = tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkFooterCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkFooterCell, selector: \"cdk-footer-cell, td[cdk-footer-cell]\", host: { classAttribute: \"cdk-footer-cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                    host: {\n                        'class': 'cdk-footer-cell',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        if (columnDef._table?._elementRef.nativeElement.nodeType === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement.getAttribute('role');\n            const role = tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\", host: { classAttribute: \"cdk-cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-cell, td[cdk-cell]',\n                    host: {\n                        'class': 'cdk-cell',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: CdkColumnDef }, { type: i0.ElementRef }]; } });\n\n/**\n * @docs-private\n */\nclass _Schedule {\n    constructor() {\n        this.tasks = [];\n        this.endTasks = [];\n    }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nclass _CoalescedStyleScheduler {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        this._currentSchedule = null;\n        this._destroyed = new Subject();\n    }\n    /**\n     * Schedules the specified task to run at the end of the current VM turn.\n     */\n    schedule(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.tasks.push(task);\n    }\n    /**\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\n     * VM turn.\n     */\n    scheduleEnd(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.endTasks.push(task);\n    }\n    /** Prevent any further tasks from running. */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    _createScheduleIfNeeded() {\n        if (this._currentSchedule) {\n            return;\n        }\n        this._currentSchedule = new _Schedule();\n        this._getScheduleObservable()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n                const schedule = this._currentSchedule;\n                // Capture new tasks scheduled by the current set of tasks.\n                this._currentSchedule = new _Schedule();\n                for (const task of schedule.tasks) {\n                    task();\n                }\n                for (const task of schedule.endTasks) {\n                    task();\n                }\n            }\n            this._currentSchedule = null;\n        });\n    }\n    _getScheduleObservable() {\n        // Use onStable when in the context of an ongoing change detection cycle so that we\n        // do not accidentally trigger additional cycles.\n        return this._ngZone.isStable\n            ? from(Promise.resolve(undefined))\n            : this._ngZone.onStable.pipe(take(1));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: _CoalescedStyleScheduler, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: _CoalescedStyleScheduler }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: _CoalescedStyleScheduler, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i0.NgZone }]; } });\n\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n    constructor(\n    /** @docs-private */ template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: BaseRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: BaseRowDef, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: BaseRowDef, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }]; } });\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkHeaderRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkHeaderRowDef, selector: \"[cdkHeaderRowDef]\", inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkHeaderRowDef]',\n                    inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky'],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }]; } });\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkFooterRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkFooterRowDef, selector: \"[cdkFooterRowDef]\", inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkFooterRowDef]',\n                    inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky'],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }]; } });\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkRowDef, selector: \"[cdkRowDef]\", inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkRowDef]',\n                    inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen'],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }]; } });\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n    /**\n     * Static property containing the latest constructed instance of this class.\n     * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n     * createEmbeddedView. After one of these components are created, this property will provide\n     * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n     * construct the cells with the provided context.\n     */\n    static { this.mostRecentCellOutlet = null; }\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkCellOutlet, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkCellOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkCellOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; } });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkHeaderRow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkHeaderRow, selector: \"cdk-header-row, tr[cdk-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-header-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-header-row, tr[cdk-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkFooterRow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkFooterRow, selector: \"cdk-footer-row, tr[cdk-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-footer-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkRow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkRow, selector: \"cdk-row, tr[cdk-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-row, tr[cdk-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._contentClassName = 'cdk-no-data-row';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkNoDataRow, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkNoDataRow, selector: \"ng-template[cdkNoDataRow]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkNoDataRow]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n     *     using inline styles. If false, it is assumed that position: sticky is included in\n     *     the component stylesheet for _stickCellCss.\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\n     *     and their dimensions.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._isBrowser = _isBrowser;\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n        this._positionListener = _positionListener;\n        this._cachedCellWidths = [];\n        this._borderCellCss = {\n            'top': `${_stickCellCss}-border-elem-top`,\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\n            'left': `${_stickCellCss}-border-elem-left`,\n            'right': `${_stickCellCss}-border-elem-right`,\n        };\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        const elementsToClear = [];\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            elementsToClear.push(row);\n            for (let i = 0; i < row.children.length; i++) {\n                elementsToClear.push(row.children[i]);\n            }\n        }\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            for (const element of elementsToClear) {\n                this._removeStickyStyle(element, stickyDirections);\n            }\n        });\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n     *     column cell. If `false` cached widths will be used instead.\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n        if (!rows.length ||\n            !this._isBrowser ||\n            !(stickyStartStates.some(state => state) || stickyEndStates.some(state => state))) {\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({ sizes: [] });\n                this._positionListener.stickyEndColumnsUpdated({ sizes: [] });\n            }\n            return;\n        }\n        const firstRow = rows[0];\n        const numCells = firstRow.children.length;\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        const lastStickyStart = stickyStartStates.lastIndexOf(true);\n        const firstStickyEnd = stickyEndStates.indexOf(true);\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            const isRtl = this.direction === 'rtl';\n            const start = isRtl ? 'right' : 'left';\n            const end = isRtl ? 'left' : 'right';\n            for (const row of rows) {\n                for (let i = 0; i < numCells; i++) {\n                    const cell = row.children[i];\n                    if (stickyStartStates[i]) {\n                        this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n                    }\n                    if (stickyEndStates[i]) {\n                        this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n                    }\n                }\n            }\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({\n                    sizes: lastStickyStart === -1\n                        ? []\n                        : cellWidths\n                            .slice(0, lastStickyStart + 1)\n                            .map((width, index) => (stickyStartStates[index] ? width : null)),\n                });\n                this._positionListener.stickyEndColumnsUpdated({\n                    sizes: firstStickyEnd === -1\n                        ? []\n                        : cellWidths\n                            .slice(firstStickyEnd)\n                            .map((width, index) => (stickyEndStates[index + firstStickyEnd] ? width : null))\n                            .reverse(),\n                });\n            }\n        });\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n        // sticky states need to be reversed as well.\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n        const stickyOffsets = [];\n        const stickyCellHeights = [];\n        const elementsToStick = [];\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n            if (!states[rowIndex]) {\n                continue;\n            }\n            stickyOffsets[rowIndex] = stickyOffset;\n            const row = rows[rowIndex];\n            elementsToStick[rowIndex] = this._isNativeHtmlTable\n                ? Array.from(row.children)\n                : [row];\n            const height = row.getBoundingClientRect().height;\n            stickyOffset += height;\n            stickyCellHeights[rowIndex] = height;\n        }\n        const borderedRowIndex = states.lastIndexOf(true);\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n        // (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                if (!states[rowIndex]) {\n                    continue;\n                }\n                const offset = stickyOffsets[rowIndex];\n                const isBorderedRowIndex = rowIndex === borderedRowIndex;\n                for (const element of elementsToStick[rowIndex]) {\n                    this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n                }\n            }\n            if (position === 'top') {\n                this._positionListener?.stickyHeaderRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n            else {\n                this._positionListener?.stickyFooterRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n        });\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        const tfoot = tableElement.querySelector('tfoot');\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            if (stickyStates.some(state => !state)) {\n                this._removeStickyStyle(tfoot, ['bottom']);\n            }\n            else {\n                this._addStickyStyle(tfoot, 'bottom', 0, false);\n            }\n        });\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n            element.classList.remove(this._borderCellCss[dir]);\n        }\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        // Short-circuit checking element.style[dir] for stickyDirections as they\n        // were already removed above.\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n        if (hasDirection) {\n            element.style.zIndex = this._getCalculatedZIndex(element);\n        }\n        else {\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\n            element.style.zIndex = '';\n            if (this._needsPositionStickyOnElement) {\n                element.style.position = '';\n            }\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\n        element.classList.add(this._stickCellCss);\n        if (isBorderElement) {\n            element.classList.add(this._borderCellCss[dir]);\n        }\n        element.style[dir] = `${dirValue}px`;\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        if (this._needsPositionStickyOnElement) {\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        }\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    _getCalculatedZIndex(element) {\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n    _getCellWidths(row, recalculateCellWidths = true) {\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\n            return this._cachedCellWidths;\n        }\n        const cellWidths = [];\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            let cell = firstRowCells[i];\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        this._cachedCellWidths = cellWidths;\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\n\n/**\n * Returns an error to be thrown when attempting to find an nonexistent column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass CdkRecycleRows {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkRecycleRows, selector: \"cdk-table[recycleRows], table[cdk-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-table[recycleRows], table[cdk-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: DataRowOutlet, selector: \"[rowOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[rowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: HeaderRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: HeaderRowOutlet, selector: \"[headerRowOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: HeaderRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[headerRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: FooterRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: FooterRowOutlet, selector: \"[footerRowOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: FooterRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[footerRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: NoDataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: NoDataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[noDataRowOutlet]' }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }]; } });\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    set trackBy(fn) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\n     */\n    get fixedLayout() {\n        return this._fixedLayout;\n    }\n    set fixedLayout(v) {\n        this._fixedLayout = coerceBooleanProperty(v);\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n        this._forceRecalculateCellWidths = true;\n        this._stickyColumnStylesNeedReset = true;\n    }\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, _viewRepeater, _coalescedStyleScheduler, _viewportRuler, \n    /**\n     * @deprecated `_stickyPositioningListener` parameter to become required.\n     * @breaking-change 13.0.0\n     */\n    _stickyPositioningListener, \n    /**\n     * @deprecated `_ngZone` parameter to become required.\n     * @breaking-change 14.0.0\n     */\n    _ngZone) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        this._viewRepeater = _viewRepeater;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._viewportRuler = _viewportRuler;\n        this._stickyPositioningListener = _stickyPositioningListener;\n        this._ngZone = _ngZone;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n         * change.\n         */\n        this._stickyColumnStylesNeedReset = true;\n        /**\n         * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n         * `false`, cached values will be used instead. This is only applicable to tables with\n         * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n         */\n        this._forceRecalculateCellWidths = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overridden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        /**\n         * Whether to manually add position: sticky to all sticky cell elements. Not needed if\n         * the position is set in a selector associated with the value of stickyCssClass. May be\n         * overridden by table subclasses\n         */\n        this.needsPositionStickyOnElement = true;\n        /** Whether the no data row is currently showing anything. */\n        this._isShowingNoDataRow = false;\n        this._multiTemplateDataRows = false;\n        this._fixedLayout = false;\n        /**\n         * Emits when the table completes rendering a set of data rows based on the latest data from the\n         * data source, even if the set of rows is empty.\n         */\n        this.contentChanged = new EventEmitter();\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * @docs-private\n         */\n        this.viewChange = new BehaviorSubject({\n            start: 0,\n            end: Number.MAX_VALUE,\n        });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'table');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        });\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(() => {\n            this._forceRecalculateCellWidths = true;\n        });\n    }\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length &&\n            !this._footerRowDefs.length &&\n            !this._rowDefs.length &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        const columnsChanged = this._renderUpdatedColumns();\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n        this._forceRecalculateCellWidths = rowDefsChanged;\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        else if (this._stickyColumnStylesNeedReset) {\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n            // called when it row data arrives. Otherwise, we need to call it proactively.\n            this.updateStickyColumnStyles();\n        }\n        this._checkStickyStates();\n    }\n    ngOnDestroy() {\n        [\n            this._rowOutlet.viewContainer,\n            this._headerRowOutlet.viewContainer,\n            this._footerRowOutlet.viewContainer,\n            this._cachedRenderRowsMap,\n            this._customColumnDefs,\n            this._customRowDefs,\n            this._customHeaderRowDefs,\n            this._customFooterRowDefs,\n            this._columnDefsByName,\n        ].forEach(def => {\n            def.clear();\n        });\n        this._headerRowDefs = [];\n        this._footerRowDefs = [];\n        this._defaultRowDef = null;\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            this._updateNoDataRow();\n            this.contentChanged.next();\n            return;\n        }\n        const viewContainer = this._rowOutlet.viewContainer;\n        this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), record => record.item.data, (change) => {\n            if (change.operation === 1 /* _ViewRepeaterOperation.INSERTED */ && change.context) {\n                this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n            }\n        });\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((record) => {\n            const rowView = viewContainer.get(record.currentIndex);\n            rowView.context.$implicit = record.item.data;\n        });\n        this._updateNoDataRow();\n        // Allow the new row data to render before measuring it.\n        // @breaking-change 14.0.0 Remove undefined check once _ngZone is required.\n        if (this._ngZone && NgZone.isInAngularZone()) {\n            this._ngZone.onStable.pipe(take(1), takeUntil(this._onDestroy)).subscribe(() => {\n                this.updateStickyColumnStyles();\n            });\n        }\n        else {\n            this.updateStickyColumnStyles();\n        }\n        this.contentChanged.next();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Sets a no data row definition that was not included as a part of the content children. */\n    setNoDataRow(noDataRow) {\n        this._customNoDataRow = noDataRow;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyHeaderRowStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyFooterRowStyles() {\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    updateStickyColumnStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\n        // don't need to be cleared unless either the sticky column config changes or one of the row\n        // defs change.\n        if ((this._isNativeHtmlTable && !this._fixedLayout) || this._stickyColumnStylesNeedReset) {\n            // Clear the left and right positioning from all columns in the table across all rows since\n            // sticky columns span across all table sections (header, data, footer)\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n            this._stickyColumnStylesNeedReset = false;\n        }\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        });\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach(rowDef => {\n            // Collect all the rows rendered with this row definition.\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        });\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        });\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    _getAllRenderRows() {\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            let data = this._data[i];\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                let renderRow = renderRowsForData[j];\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\n                if (cache.has(renderRow.rowDef)) {\n                    cache.get(renderRow.rowDef).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map(rowDef => {\n            const cachedRenderRows = cache && cache.has(rowDef) ? cache.get(rowDef) : [];\n            if (cachedRenderRows.length) {\n                const dataRow = cachedRenderRows.shift();\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        });\n    }\n    /** Update the map containing the content's column definitions. */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach(columnDef => {\n            if (this._columnDefsByName.has(columnDef.name) &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        });\n    }\n    /** Update the list of all available row definitions that can be used. */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n        if (!this.multiTemplateDataRows &&\n            defaultRowDefs.length > 1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    _renderUpdatedColumns() {\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n        // Force re-render data rows if the list of column definitions have changed.\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n        if (dataColumnsChanged) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed.\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n        if (headerColumnsChanged) {\n            this._forceRenderHeaderRows();\n        }\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n        if (footerColumnsChanged) {\n            this._forceRenderFooterRows();\n        }\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(data => {\n            this._data = data || [];\n            this.renderRows();\n        });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n        this.updateStickyHeaderRowStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n        this.updateStickyFooterRowStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    _addStickyColumnStyles(rows, rowDef) {\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return columnDef;\n        });\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    _getRenderedRows(rowOutlet) {\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            const viewRef = rowOutlet.viewContainer.get(i);\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n        }\n        else {\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    _getEmbeddedViewArgs(renderRow, index) {\n        const rowDef = renderRow.rowDef;\n        const context = { $implicit: renderRow.data };\n        return {\n            templateRef: rowDef.template,\n            context,\n            index,\n        };\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        this._renderCellTemplateForItem(rowDef, context);\n        return view;\n    }\n    _renderCellTemplateForItem(rowDef, context) {\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    _updateRowIndexContext() {\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            const viewRef = viewContainer.get(renderIndex);\n            const context = viewRef.context;\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /** Gets the column definitions for the provided row def. */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, columnId => {\n            const column = this._columnDefsByName.get(columnId);\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        });\n    }\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n    _applyNativeTableSections() {\n        const documentFragment = this._document.createDocumentFragment();\n        const sections = [\n            { tag: 'thead', outlets: [this._headerRowOutlet] },\n            { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\n            { tag: 'tfoot', outlets: [this._footerRowOutlet] },\n        ];\n        for (const section of sections) {\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            for (const outlet of section.outlets) {\n                element.appendChild(outlet.elementRef.nativeElement);\n            }\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    _checkStickyStates() {\n        const stickyCheckReducer = (acc, d) => {\n            return acc || d.hasStickyChanged();\n        };\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this._stickyColumnStylesNeedReset = true;\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    _setupStickyStyler() {\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n    _getOwnDefs(items) {\n        return items.filter(item => !item._table || item._table === this);\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n    _updateNoDataRow() {\n        const noDataRow = this._customNoDataRow || this._noDataRow;\n        if (!noDataRow) {\n            return;\n        }\n        const shouldShow = this._rowOutlet.viewContainer.length === 0;\n        if (shouldShow === this._isShowingNoDataRow) {\n            return;\n        }\n        const container = this._noDataRowOutlet.viewContainer;\n        if (shouldShow) {\n            const view = container.createEmbeddedView(noDataRow.templateRef);\n            const rootNode = view.rootNodes[0];\n            // Only add the attributes if we have a single root node since it's hard\n            // to figure out which one to add it to when there are multiple.\n            if (view.rootNodes.length === 1 && rootNode?.nodeType === this._document.ELEMENT_NODE) {\n                rootNode.setAttribute('role', 'row');\n                rootNode.classList.add(noDataRow._contentClassName);\n            }\n        }\n        else {\n            container.clear();\n        }\n        this._isShowingNoDataRow = shouldShow;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTable, deps: [{ token: i0.IterableDiffers }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: 'role', attribute: true }, { token: i1.Directionality, optional: true }, { token: DOCUMENT }, { token: i2.Platform }, { token: _VIEW_REPEATER_STRATEGY }, { token: _COALESCED_STYLE_SCHEDULER }, { token: i3.ViewportRuler }, { token: STICKY_POSITIONING_LISTENER, optional: true, skipSelf: true }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkTable, selector: \"cdk-table, table[cdk-table]\", inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\", fixedLayout: \"fixedLayout\" }, outputs: { contentChanged: \"contentChanged\" }, host: { attributes: { \"ngSkipHydration\": \"\" }, properties: { \"class.cdk-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"cdk-table\" }, providers: [\n            { provide: CDK_TABLE, useExisting: CdkTable },\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n            // Prevent nested tables from seeing this table's StickyPositioningListener.\n            { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n        ], queries: [{ propertyName: \"_noDataRow\", first: true, predicate: CdkNoDataRow, descendants: true }, { propertyName: \"_contentColumnDefs\", predicate: CdkColumnDef, descendants: true }, { propertyName: \"_contentRowDefs\", predicate: CdkRowDef, descendants: true }, { propertyName: \"_contentHeaderRowDefs\", predicate: CdkHeaderRowDef, descendants: true }, { propertyName: \"_contentFooterRowDefs\", predicate: CdkFooterRowDef, descendants: true }], viewQueries: [{ propertyName: \"_rowOutlet\", first: true, predicate: DataRowOutlet, descendants: true, static: true }, { propertyName: \"_headerRowOutlet\", first: true, predicate: HeaderRowOutlet, descendants: true, static: true }, { propertyName: \"_footerRowOutlet\", first: true, predicate: FooterRowOutlet, descendants: true, static: true }, { propertyName: \"_noDataRowOutlet\", first: true, predicate: NoDataRowOutlet, descendants: true, static: true }], exportAs: [\"cdkTable\"], ngImport: i0, template: \"\\n  <ng-content select=\\\"caption\\\"></ng-content>\\n  <ng-content select=\\\"colgroup, col\\\"></ng-content>\\n  <ng-container headerRowOutlet></ng-container>\\n  <ng-container rowOutlet></ng-container>\\n  <ng-container noDataRowOutlet></ng-container>\\n  <ng-container footerRowOutlet></ng-container>\\n\", isInline: true, styles: [\".cdk-table-fixed-layout{table-layout:fixed}\"], dependencies: [{ kind: \"directive\", type: DataRowOutlet, selector: \"[rowOutlet]\" }, { kind: \"directive\", type: HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { kind: \"directive\", type: FooterRowOutlet, selector: \"[footerRowOutlet]\" }, { kind: \"directive\", type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-table, table[cdk-table]', exportAs: 'cdkTable', template: CDK_TABLE_TEMPLATE, host: {\n                        'class': 'cdk-table',\n                        '[class.cdk-table-fixed-layout]': 'fixedLayout',\n                        'ngSkipHydration': '',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, providers: [\n                        { provide: CDK_TABLE, useExisting: CdkTable },\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.IterableDiffers }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['role']\n                }] }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i2.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [_VIEW_REPEATER_STRATEGY]\n                }] }, { type: _CoalescedStyleScheduler, decorators: [{\n                    type: Inject,\n                    args: [_COALESCED_STYLE_SCHEDULER]\n                }] }, { type: i3.ViewportRuler }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [STICKY_POSITIONING_LISTENER]\n                }] }, { type: i0.NgZone, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { trackBy: [{\n                type: Input\n            }], dataSource: [{\n                type: Input\n            }], multiTemplateDataRows: [{\n                type: Input\n            }], fixedLayout: [{\n                type: Input\n            }], contentChanged: [{\n                type: Output\n            }], _rowOutlet: [{\n                type: ViewChild,\n                args: [DataRowOutlet, { static: true }]\n            }], _headerRowOutlet: [{\n                type: ViewChild,\n                args: [HeaderRowOutlet, { static: true }]\n            }], _footerRowOutlet: [{\n                type: ViewChild,\n                args: [FooterRowOutlet, { static: true }]\n            }], _noDataRowOutlet: [{\n                type: ViewChild,\n                args: [NoDataRowOutlet, { static: true }]\n            }], _contentColumnDefs: [{\n                type: ContentChildren,\n                args: [CdkColumnDef, { descendants: true }]\n            }], _contentRowDefs: [{\n                type: ContentChildren,\n                args: [CdkRowDef, { descendants: true }]\n            }], _contentHeaderRowDefs: [{\n                type: ContentChildren,\n                args: [CdkHeaderRowDef, {\n                        descendants: true,\n                    }]\n            }], _contentFooterRowDefs: [{\n                type: ContentChildren,\n                args: [CdkFooterRowDef, {\n                        descendants: true,\n                    }]\n            }], _noDataRow: [{\n                type: ContentChild,\n                args: [CdkNoDataRow]\n            }] } });\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n    /** Column name that should be used to reference this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    constructor(\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\n    // for better error reporting.\n    // tslint:disable-next-line: lightweight-tokens\n    _table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /** Alignment of the cell values. */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    _createDefaultHeaderText() {\n        const name = this.name;\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTextColumn, deps: [{ token: CdkTable, optional: true }, { token: TEXT_COLUMN_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkTextColumn, selector: \"cdk-text-column\", inputs: { name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\", justify: \"justify\" }, viewQueries: [{ propertyName: \"columnDef\", first: true, predicate: CdkColumnDef, descendants: true, static: true }, { propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true, static: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true, static: true }], ngImport: i0, template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellDef, selector: \"[cdkCellDef]\" }, { kind: \"directive\", type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\" }, { kind: \"directive\", type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: [\"sticky\", \"cdkColumnDef\", \"stickyEnd\"] }, { kind: \"directive\", type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\" }, { kind: \"directive\", type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-text-column',\n                    template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }], ctorParameters: function () { return [{ type: CdkTable, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TEXT_COLUMN_OPTIONS]\n                }] }]; }, propDecorators: { name: [{\n                type: Input\n            }], headerText: [{\n                type: Input\n            }], dataAccessor: [{\n                type: Input\n            }], justify: [{\n                type: Input\n            }], columnDef: [{\n                type: ViewChild,\n                args: [CdkColumnDef, { static: true }]\n            }], cell: [{\n                type: ViewChild,\n                args: [CdkCellDef, { static: true }]\n            }], headerCell: [{\n                type: ViewChild,\n                args: [CdkHeaderCellDef, { static: true }]\n            }] } });\n\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n    CdkNoDataRow,\n    CdkRecycleRows,\n    NoDataRowOutlet,\n];\nclass CdkTableModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTableModule, declarations: [CdkTable,\n            CdkRowDef,\n            CdkCellDef,\n            CdkCellOutlet,\n            CdkHeaderCellDef,\n            CdkFooterCellDef,\n            CdkColumnDef,\n            CdkCell,\n            CdkRow,\n            CdkHeaderCell,\n            CdkFooterCell,\n            CdkHeaderRow,\n            CdkHeaderRowDef,\n            CdkFooterRow,\n            CdkFooterRowDef,\n            DataRowOutlet,\n            HeaderRowOutlet,\n            FooterRowOutlet,\n            CdkTextColumn,\n            CdkNoDataRow,\n            CdkRecycleRows,\n            NoDataRowOutlet], imports: [ScrollingModule], exports: [CdkTable,\n            CdkRowDef,\n            CdkCellDef,\n            CdkCellOutlet,\n            CdkHeaderCellDef,\n            CdkFooterCellDef,\n            CdkColumnDef,\n            CdkCell,\n            CdkRow,\n            CdkHeaderCell,\n            CdkFooterCell,\n            CdkHeaderRow,\n            CdkHeaderRowDef,\n            CdkFooterRow,\n            CdkFooterRowDef,\n            DataRowOutlet,\n            HeaderRowOutlet,\n            FooterRowOutlet,\n            CdkTextColumn,\n            CdkNoDataRow,\n            CdkRecycleRows,\n            NoDataRowOutlet] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTableModule, imports: [ScrollingModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: EXPORTED_DECLARATIONS,\n                    declarations: EXPORTED_DECLARATIONS,\n                    imports: [ScrollingModule],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRecycleRows, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39]}