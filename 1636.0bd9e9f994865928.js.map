{"version":3,"file":"1636.0bd9e9f994865928.js","mappings":"scACaA,EAAe,SAAAC,IAAAC,OAAAF,EAAAC,GAAA,IAAAE,KAAAC,KAAAJ,GACxB,SAAAA,EAAYK,GAAQ,IAAAC,EAAAC,cAAAC,KAAAR,IAChBM,EAAAH,EAAAM,KAAAD,OACKH,OAASA,EAAOC,CACzB,CAACI,cAAAV,EAAA,EAAAW,IAAA,QAAAC,IACD,WACI,OAAOJ,KAAKK,UAChB,GAAC,CAAAF,IAAA,aAAAG,MACD,SAAWC,GACP,IAAMC,KAAYC,QAAAC,KAAAlB,EAAAmB,WAAA,aAAAX,MAAAC,KAAAD,KAAoBO,GACtC,OAACC,EAAaI,QAAUL,EAAWM,KAAKb,KAAKH,QACtCW,CACX,GAAC,CAAAL,IAAA,WAAAG,MACD,WACI,IAA+BT,EAAWG,KAAXH,OAC/B,GAD0CG,KAAlCc,SAEJ,MAFsCd,KAAxBe,YAIlB,OAAAf,KAAKgB,iBACEnB,CACX,GAAC,CAAAM,IAAA,OAAAG,MACD,SAAKA,IACDG,UAAAC,KAAAlB,EAAAmB,WAAA,OAAAX,MAAAC,KAAAD,KAAYA,KAAKH,OAASS,EAC9B,KAACd,CAAA,CAvBuB,UAASyB,2ICAxBC,cAA0BC,GAAiB,SAACxB,GAAM,OAAK,WAChEA,EAAOK,MACPA,KAAKoB,KAAO,0BACZpB,KAAKqB,QAAU,qBACnB,CAAC,yBCAYJ,EAAO,eAAPA,EAAO,SAAAK,IAAA5B,OAAAuB,EAAAK,GAAA,IAAA3B,KAAAC,KAAAqB,GAChB,SAAAA,IAAc,IAAAnB,EAAAC,cAAAC,KAAAiB,IACVnB,EAAAH,EAAAM,KAAAD,OACKY,QAAS,EACdd,EAAKyB,iBAAmB,KACxBzB,EAAK0B,UAAY,GACjB1B,EAAK2B,WAAY,EACjB3B,EAAKgB,UAAW,EAChBhB,EAAKiB,YAAc,KAAKjB,CAC5B,CAACI,cAAAe,EAAA,EAAAd,IAAA,OAAAG,MACD,SAAKoB,GACD,IAAMC,EAAU,IAAIC,EAAiB5B,KAAMA,MAC3C2B,SAAQD,SAAWA,EACZC,CACX,GAAC,CAAAxB,IAAA,iBAAAG,MACD,WACI,GAAIN,KAAKY,OACL,MAAM,IAAIM,CAElB,GAAC,CAAAf,IAAA,OAAAG,MACD,SAAKA,GAAO,IAAAuB,EAAA7B,MACR8B,OAAa,WAET,GADAD,EAAKb,kBACAa,EAAKJ,UAAW,CACZI,EAAKN,mBACNM,EAAKN,iBAAmBQ,MAAMC,KAAKH,EAAKL,YAC3C,IAC2CS,EAD3CC,KAAAC,KACsBN,EAAKN,kBAAgB,IAA5C,IAAAW,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAAmBL,EAAA3B,MACNO,KAAKP,EACjB,OAAAiC,GAAAL,EAAAM,EAAAD,EAAA,SAAAL,EAAAO,GAAA,EAET,EACJ,GAAC,CAAAtC,IAAA,QAAAG,MACD,SAAMiC,GAAK,IAAAG,EAAA1C,MACP8B,OAAa,WAET,GADAY,EAAK1B,kBACA0B,EAAKjB,UAAW,CACjBiB,EAAK5B,SAAW4B,EAAKjB,WAAY,EACjCiB,EAAK3B,YAAcwB,EAEnB,QADQf,EAAckB,EAAdlB,UACDA,EAAUmB,QACbnB,EAAUoB,QAAQC,MAAMN,EAAG,CAGvC,EACJ,GAAC,CAAApC,IAAA,WAAAG,MACD,WAAW,IAAAwC,EAAA9C,MACP8B,OAAa,WAET,GADAgB,EAAK9B,kBACA8B,EAAKrB,UAAW,CACjBqB,EAAKrB,WAAY,EAEjB,QADQD,EAAcsB,EAAdtB,UACDA,EAAUmB,QACbnB,EAAUoB,QAAQG,UAAQ,CAGtC,EACJ,GAAC,CAAA5C,IAAA,cAAAG,MACD,WACIN,KAAKyB,UAAYzB,KAAKY,QAAS,EAC/BZ,KAAKwB,UAAYxB,KAAKuB,iBAAmB,IAC7C,GAAC,CAAApB,IAAA,WAAAC,IACD,WACI,IAAI4C,EACJ,OAAkC,QAAzBA,EAAKhD,KAAKwB,iBAA8B,IAAPwB,OAAgB,EAASA,EAAGL,QAAU,CACpF,GAAC,CAAAxC,IAAA,gBAAAG,MACD,SAAcC,GACV,OAAAP,KAAKgB,kBAAc,EACnBP,QAAAC,KAAAO,EAAAN,WAAA,gBAAAX,MAAAC,KAAAD,KAA2BO,EAC/B,GAAC,CAAAJ,IAAA,aAAAG,MACD,SAAWC,GACP,OAAAP,KAAKgB,iBACLhB,KAAKiD,wBAAwB1C,GACtBP,KAAKkD,gBAAgB3C,EAChC,GAAC,CAAAJ,IAAA,kBAAAG,MACD,SAAgBC,GAAY,IAAA4C,EAAAnD,KACKwB,EAAcxB,KAAdwB,UAC7B,OAD2CxB,KAAnCc,UAAmCd,KAAzByB,UAEP2B,MAEXpD,KAAKuB,iBAAmB,KACxBC,EAAU6B,KAAK9C,GACR,IAAI+C,KAAa,WACpBH,EAAK5B,iBAAmB,QACxBgC,KAAU/B,EAAWjB,EACzB,GACJ,GAAC,CAAAJ,IAAA,0BAAAG,MACD,SAAwBC,GACpB,IAA+BkB,EAAczB,KAAdyB,UAAczB,KAArCc,SAEJP,EAAWsC,MAF8B7C,KAA3Be,aAITU,GACLlB,EAAWwC,UAEnB,GAAC,CAAA5C,IAAA,eAAAG,MACD,WACI,IAAMkD,EAAa,IAAIC,IACvBD,SAAWE,OAAS1D,KACbwD,CACX,KAACvC,CAAA,CApGe,CAASwC,KAsG7BxC,SAAQ0C,OAAS,SAACC,EAAaF,GAC3B,OAAO,IAAI9B,EAAiBgC,EAAaF,EAC7C,EAxGazC,CAAO,IAyGPW,EAAgB,SAAAnC,IAAAC,OAAAkC,EAAAnC,GAAA,IAAAoE,KAAAjE,KAAAgC,GACzB,SAAAA,EAAYgC,EAAaF,GAAQ,IAAAI,EAAA/D,cAAAC,KAAA4B,IAC7BkC,EAAAD,EAAA5D,KAAAD,OACK4D,YAAcA,EACnBE,EAAKJ,OAASA,EAAOI,CACzB,CAAC5D,cAAA0B,EAAA,EAAAzB,IAAA,OAAAG,MACD,SAAKA,GACD,IAAI0C,EAAIe,EACwE,QAA/EA,EAAiC,QAA3Bf,EAAKhD,KAAK4D,mBAAgC,IAAPZ,OAAgB,EAASA,EAAGnC,YAAyB,IAAPkD,GAAyBA,EAAG9D,KAAK+C,EAAI1C,EACjI,GAAC,CAAAH,IAAA,QAAAG,MACD,SAAMiC,GACF,IAAIS,EAAIe,EACyE,QAAhFA,EAAiC,QAA3Bf,EAAKhD,KAAK4D,mBAAgC,IAAPZ,OAAgB,EAASA,EAAGH,aAA0B,IAAPkB,GAAyBA,EAAG9D,KAAK+C,EAAIT,EAClI,GAAC,CAAApC,IAAA,WAAAG,MACD,WACI,IAAI0C,EAAIe,EAC4E,QAAnFA,EAAiC,QAA3Bf,EAAKhD,KAAK4D,mBAAgC,IAAPZ,OAAgB,EAASA,EAAGD,gBAA6B,IAAPgB,GAAyBA,EAAG9D,KAAK+C,EACjI,GAAC,CAAA7C,IAAA,aAAAG,MACD,SAAWC,GACP,IAAIyC,EAAIe,EACR,OAAmG,QAA3FA,EAA4B,QAAtBf,EAAKhD,KAAK0D,cAA2B,IAAPV,OAAgB,EAASA,EAAGgB,UAAUzD,UAAgC,IAAPwD,EAAgBA,EAAKX,IACpI,KAACxB,CAAA,CArBwB,CAASX,yCC7GzBgD,EAAQ,aAAIR,GAAW,SAAClD,GAAU,OAAKA,EAAWwC,UAAU,yECAlE,SAASmB,EAAYC,GAAsB,IAAXC,EAAKC,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC3C,SAAOE,KAAQ,SAACb,EAAQnD,GACpBA,EAAWiE,IAAIL,EAAUM,SAAS,kBAAMf,EAAOM,UAAUzD,EAAW,EAAE6D,GAC1E,EACJ,gDCHO,SAASM,EAAsBC,EAAOR,GACzC,IAAKQ,EACD,MAAM,IAAIC,MAAM,2BAEpB,OAAO,IAAInB,IAAW,SAAClD,IACnBsE,OAAgBtE,EAAY4D,EAAW,WACnC,IAAMW,EAAWH,EAAMI,OAAOC,kBAC9BH,OAAgBtE,EAAY4D,EAAW,WACnCW,EAASjE,OAAOoE,KAAK,SAACC,GACdA,EAAO5C,KACP/B,EAAWwC,WAGXxC,EAAWM,KAAKqE,EAAO5E,MAE/B,EACJ,EAAG,GAAG,EACV,EACJ,EACJ,kFCnBO,SAAS0B,EAAK2C,EAAOR,GACxB,OAAOA,ECUJ,SAASgB,EAAUR,EAAOR,GAC7B,GAAa,MAATQ,EAAe,CACf,MAAIS,KAAoBT,GACpB,OCbL,SAASU,EAAmBV,EAAOR,GACtC,SAAOmB,MAAUX,GAAOY,KAAKrB,EAAYC,IAAS,EAAGqB,KAAUrB,GACnE,CDWmBkB,CAAmBV,EAAOR,GAErC,MAAIsB,KAAYd,GACZ,OElBL,SAASe,EAAcf,EAAOR,GACjC,OAAO,IAAIV,IAAW,SAAClD,GACnB,IAAIoF,EAAI,EACR,OAAOxB,EAAUM,SAAS,WAClBkB,IAAMhB,EAAMhC,OACZpC,EAAWwC,YAGXxC,EAAWM,KAAK8D,EAAMgB,MACjBpF,EAAWK,QACZZ,KAAKyE,WAGjB,EACJ,EACJ,CFGmBiB,CAAcf,EAAOR,GAEhC,MAAIyB,KAAUjB,GACV,OGnBL,SAASkB,EAAgBlB,EAAOR,GACnC,SAAOmB,MAAUX,GAAOY,KAAKrB,EAAYC,IAAS,EAAGqB,KAAUrB,GACnE,CHiBmB0B,CAAgBlB,EAAOR,GAElC,MAAI2B,KAAgBnB,GAChB,OAAOD,EAAsBC,EAAOR,GAExC,MAAI4B,KAAWpB,GACX,OIxBL,SAASqB,EAAiBrB,EAAOR,GACpC,OAAO,IAAIV,IAAW,SAAClD,GACnB,IAAIuE,EACJD,cAAgBtE,EAAY4D,EAAW,WACnCW,EAAWH,EAAMsB,QAAgB,EACjCpB,KAAgBtE,EAAY4D,EAAW,WACnC,IAAI7D,EACAgC,EACJ,IAAI,IAAA4D,EACmBpB,EAASjE,OAAzBP,EAAK4F,EAAL5F,MAAOgC,EAAI4D,EAAJ5D,IACd,OACOC,GAEH,YADAhC,EAAWsC,MAAMN,EAErB,CACID,EACA/B,EAAWwC,WAGXxC,EAAWM,KAAKP,EAExB,EAAG,GAAG,EACV,GACO,oBAAM6F,KAA+DrB,GAAQsB,SAAYtB,EAAQsB,QAAS,CACrH,EACJ,CJDmBJ,CAAiBrB,EAAOR,GAEnC,MAAIkC,KAAqB1B,GACrB,OK7BL,SAAS2B,EAA2B3B,EAAOR,GAC9C,OAAOO,KAAsB6B,KAAmC5B,GAAQR,EAC5E,CL2BmBmC,CAA2B3B,EAAOR,EAAS,CAG1D,QAAMqC,KAAiC7B,EAC3C,CDhCuBQ,CAAUR,EAAOR,IAAS,EAAImB,MAAUX,EAC/D,+DOFO,SAAS8B,IAAY,QAAAC,EAAArC,UAAA1B,OAANgE,EAAI,IAAA5E,MAAA2E,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAAvC,UAAAuC,GACtB,IAAMzC,KAAY0C,MAAaF,GAC/B,SAAO3E,KAAK2E,EAAMxC,EACtB,4HCJO,SAAS2C,EAAyBlD,EAAamD,EAAQC,EAAYC,EAASC,GAC/E,OAAO,IAAIC,EAAmBvD,EAAamD,EAAQC,EAAYC,EAASC,EAC5E,CACO,IAAMC,EAAkB,SAAAC,IAAA1H,OAAAyH,EAAAC,GAAA,IAAAzH,KAAAC,KAAAuH,GAC3B,SAAAA,EAAYvD,EAAamD,EAAQC,EAAYC,EAASC,EAAYG,GAAmB,IAAAC,EAAAC,EAAAC,EAAA1H,EAAAC,cAAAC,KAAAmH,IACjFrH,EAAAH,EAAAM,KAAAD,KAAM4D,IACDsD,WAAaA,EAClBpH,EAAKuH,kBAAoBA,EACzBvH,EAAK2H,MAAQV,EACP,SAAUzG,GACR,IACIyG,EAAOzG,EACX,OACOiC,GACHqB,EAAYf,MAAMN,EACtB,CACJ,KAAC9B,MAAA6G,KAAAI,KAAA5H,IAAA,EAAAY,KAAAyG,EAAAxG,YAAA,QAAA2G,GAELxH,EAAK6H,OAASV,EACR,SAAU1E,GACR,IACI0E,EAAQ1E,EACZ,OACOA,GACHqB,EAAYf,MAAMN,EACtB,SAEIvC,KAAK4H,aACT,CACJ,KAACnH,MAAA8G,KAAAG,KAAA5H,IAAA,EAAAY,KAAAyG,EAAAxG,YAAA,SAAA4G,GAELzH,EAAK+H,UAAYb,EACX,WACE,IACIA,GACJ,OACOzE,GACHqB,EAAYf,MAAMN,EACtB,SAEIvC,KAAK4H,aACT,CACJ,KAACnH,MAAA+G,KAAAE,KAAA5H,IAAA,EAAAY,KAAAyG,EAAAxG,YAAA,YAAA6G,GACiB1H,CAC1B,CAACI,cAAAiH,EAAA,EAAAhH,IAAA,cAAAG,MACD,WACI,IAAI0C,EACJ,IAAKhD,KAAKqH,mBAAqBrH,KAAKqH,oBAAqB,CACrD,IAAQzG,EAAWZ,KAAXY,QACRH,UAAAC,KAAAyG,EAAAxG,WAAA,cAAAX,MAAAC,KAAAD,OACCY,IAAsC,QAA1BoC,EAAKhD,KAAKkH,kBAA+B,IAAPlE,GAAyBA,EAAG/C,KAAKD,MAAI,CAE5F,KAACmH,CAAA,CAjD0B,SAASW,2ECDjC,SAASC,EAAaC,GAAqC,IAA5B7D,EAASE,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,GAAAA,UAAA,GAAG4D,IAC9C,SAAO1D,KAAQ,SAACb,EAAQnD,GACpB,IAAI2H,EAAa,KACbC,EAAY,KACZC,EAAW,KACTC,EAAO,WACT,GAAIH,EAAY,CACZA,EAAWN,cACXM,EAAa,KACb,IAAM5H,EAAQ6H,EACdA,EAAY,KACZ5H,EAAWM,KAAKP,EAAK,CAE7B,EACA,SAASgI,IACL,IAAMC,EAAaH,EAAWJ,EACxBQ,EAAMrE,EAAUqE,MACtB,GAAIA,EAAMD,EAGN,OAFAL,EAAalI,KAAKyE,cAASH,EAAWiE,EAAaC,QACnDjI,EAAWiE,IAAI0D,GAGnBG,GACJ,CACA3E,EAAOM,aAAU8C,KAAyBvG,EAAY,SAACD,GACnD6H,EAAY7H,EACZ8H,EAAWjE,EAAUqE,MAChBN,IACDA,EAAa/D,EAAUM,SAAS6D,EAAcN,GAC9CzH,EAAWiE,IAAI0D,GAEvB,EAAG,WACCG,IACA9H,EAAWwC,UACf,OAAGuB,EAAW,WACV6D,EAAYD,EAAa,IAC7B,GACJ,EACJ,yECtCO,SAASO,EAAqBC,GAAoC,IAAxBC,EAAWtE,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,GAAAA,UAAA,GAAGuE,IAC3DF,SAAaA,GAA4DG,KAClEtE,KAAQ,SAACb,EAAQnD,GACpB,IAAIuI,EACAC,GAAQ,EACZrF,EAAOM,aAAU8C,KAAyBvG,EAAY,SAACD,GACnD,IAAM0I,EAAaL,EAAYrI,IAC3ByI,IAAUL,EAAWI,EAAaE,MAClCD,GAAQ,EACRD,EAAcE,EACdzI,EAAWM,KAAKP,GAExB,GACJ,EACJ,CACA,SAASuI,EAAeI,EAAGC,GACvB,OAAOD,IAAMC,CACjB,8DClBO,SAASC,EAAOC,EAAWC,GAC9B,SAAO9E,KAAQ,SAACb,EAAQnD,GACpB,IAAI+I,EAAQ,EACZ5F,EAAOM,aAAU8C,KAAyBvG,EAAY,SAACD,GAAK,OAAK8I,EAAUnJ,KAAKoJ,EAAS/I,EAAOgJ,MAAY/I,EAAWM,KAAKP,EAAM,GACtI,EACJ,8DCLO,SAASiJ,EAAIC,EAASH,GACzB,SAAO9E,KAAQ,SAACb,EAAQnD,GACpB,IAAI+I,EAAQ,EACZ5F,EAAOM,aAAU8C,KAAyBvG,EAAY,SAACD,GACnDC,EAAWM,KAAK2I,EAAQvJ,KAAKoJ,EAAS/I,EAAOgJ,KACjD,GACJ,EACJ,uECNO,SAAS9D,EAAUrB,GAAsB,IAAXC,EAAKC,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACzC,SAAOE,KAAQ,SAACb,EAAQnD,GACpBmD,EAAOM,aAAU8C,KAAyBvG,EAAY,SAACD,GAAK,SAAKuE,KAAgBtE,EAAY4D,EAAW,kBAAM5D,EAAWM,KAAKP,EAAM,EAAE8D,EAAM,EAAE,oBAAMS,KAAgBtE,EAAY4D,EAAW,kBAAM5D,EAAWwC,UAAU,EAAEqB,EAAM,EAAE,SAAC7B,GAAG,SAAKsC,KAAgBtE,EAAY4D,EAAW,kBAAM5D,EAAWsC,MAAMN,EAAI,EAAE6B,EAAM,GACvT,EACJ,mDCNO,SAASqF,EAAKC,GACjB,SAAOP,KAAO,SAACQ,EAAGL,GAAK,OAAKI,GAASJ,CAAK,EAC9C,yECAO,SAASM,EAAKF,GACjB,OAAOA,GAAS,EAER,kBAAMzF,GAAK,KACbM,KAAQ,SAACb,EAAQnD,GACf,IAAIsJ,EAAO,EACXnG,EAAOM,aAAU8C,KAAyBvG,EAAY,SAACD,KAC7CuJ,GAAQH,IACVnJ,EAAWM,KAAKP,GACZoJ,GAASG,GACTtJ,EAAWwC,WAGvB,GACJ,EACR,oFCdO,SAAS+G,EAAUC,GACtB,SAAOxF,KAAQ,SAACb,EAAQnD,IACpB+E,QAAUyE,GAAU/F,aAAU8C,KAAyBvG,EAAY,kBAAMA,EAAWwC,UAAU,EAAEiH,OAC/FzJ,EAAWK,QAAU8C,EAAOM,UAAUzD,EAC3C,EACJ,oFCLO,SAAS0J,EAAIC,EAAgBrH,EAAOE,GACvC,IAAMoH,KAAchE,KAAW+D,IAAmBrH,GAASE,EAEnD,CAAElC,KAAMqJ,EAAgBrH,QAAOE,YACjCmH,EACN,OAAOC,KACD5F,KAAQ,SAACb,EAAQnD,GACf,IAAIyC,EAC6B,QAAhCA,EAAKmH,EAAYnG,iBAA8B,IAAPhB,GAAyBA,EAAG/C,KAAKkK,GAC1E,IAAIC,GAAU,EACd1G,EAAOM,aAAU8C,KAAyBvG,EAAY,SAACD,GACnD,IAAI0C,EACwB,QAA3BA,EAAKmH,EAAYtJ,YAAyB,IAAPmC,GAAyBA,EAAG/C,KAAKkK,EAAa7J,GAClFC,EAAWM,KAAKP,EACpB,EAAG,WACC,IAAI0C,EACJoH,GAAU,EACsB,QAA/BpH,EAAKmH,EAAYpH,gBAA6B,IAAPC,GAAyBA,EAAG/C,KAAKkK,GACzE5J,EAAWwC,UACf,EAAG,SAACR,GACA,IAAIS,EACJoH,GAAU,EACmB,QAA5BpH,EAAKmH,EAAYtH,aAA0B,IAAPG,GAAyBA,EAAG/C,KAAKkK,EAAa5H,GACnFhC,EAAWsC,MAAMN,EACrB,EAAG,WACC,IAAIS,EAAIe,EACJqG,IACmC,QAAlCpH,EAAKmH,EAAYvC,mBAAgC,IAAP5E,GAAyBA,EAAG/C,KAAKkK,IAEhD,QAA/BpG,EAAKoG,EAAYE,gBAA6B,IAAPtG,GAAyBA,EAAG9D,KAAKkK,EAC7E,GACJ,GAEIvB,GACZ,yGCrCa0B,EAAM,SAAAC,IAAA7K,OAAA4K,EAAAC,GAAA,IAAA5K,KAAAC,KAAA0K,GACf,SAAAA,EAAYnG,EAAWqG,GAAMzK,cAAAC,KAAAsK,GAAA3K,EAAAM,KAAAD,KAE7B,CAACE,cAAAoK,EAAA,EAAAnK,IAAA,WAAAG,MACD,SAASmK,GACL,OAAOzK,IACX,KAACsK,CAAA,CANc,UAAShH,ICDfoH,EAAmB,CAC5BC,YAAW,SAAAC,GAAA,SAAAD,EAAAE,EAAAC,GAAA,OAAAF,EAAAG,MAAA/K,KAAAqE,UAAA,CAAAsG,SAAAK,SAAA,kBAAAJ,EAAAI,UAAA,EAAAL,CAAA,WAACM,EAASC,GACqB,QAA9BC,EAAaT,EAAbS,SAA8BzE,EAAArC,UAAA1B,OADTgE,EAAI,IAAA5E,MAAA2E,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,EAAA,GAAAvC,UAAAuC,GAEjC,OAAwDuE,GAASR,YACtDQ,EAASR,YAAWI,MAApBI,EAAQ,CAAaF,EAASC,GAAOE,OAAKzE,IAE9CgE,YAAWI,WAAA,GAACE,EAASC,GAAOE,OAAKzE,GAC5C,GACA0E,cAAa,SAAAC,GAAA,SAAAD,EAAAE,GAAA,OAAAD,EAAAP,MAAA/K,KAAAqE,UAAA,CAAAgH,SAAAL,SAAA,kBAAAM,EAAAN,UAAA,EAAAK,CAAA,WAACG,GACV,IAAQL,EAAaT,EAAbS,SACR,OAA6DA,GAASE,eAAkBA,eAAeG,EAC3G,GACAL,cAAU7G,cCTDmH,EAAW,SAAAC,IAAAhM,OAAA+L,EAAAC,GAAA,IAAA/L,KAAAC,KAAA6L,GACpB,SAAAA,EAAYtH,EAAWqG,GAAM,IAAA1K,EAAAC,cAAAC,KAAAyL,IACzB3L,EAAAH,EAAAM,KAAAD,KAAMmE,EAAWqG,IACZrG,UAAYA,EACjBrE,EAAK0K,KAAOA,EACZ1K,EAAK6L,SAAU,EAAM7L,CACzB,CAACI,cAAAuL,EAAA,EAAAtL,IAAA,WAAAG,MACD,SAASmK,GAAkB,IACnBzH,EADQoB,EAAKC,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAEpB,GAAIrE,KAAKY,OACL,OAAOZ,KAEXA,KAAKyK,MAAQA,EACb,IAAMmB,EAAK5L,KAAK4L,GACVzH,EAAYnE,KAAKmE,UACvB,OAAU,MAANyH,IACA5L,KAAK4L,GAAK5L,KAAK6L,eAAe1H,EAAWyH,EAAIxH,IAEjDpE,KAAK2L,SAAU,EACf3L,KAAKoE,MAAQA,EACbpE,KAAK4L,GAAwB,QAAlB5I,EAAKhD,KAAK4L,UAAuB,IAAP5I,EAAgBA,EAAKhD,KAAK8L,eAAe3H,EAAWnE,KAAK4L,GAAIxH,GAC3FpE,IACX,GAAC,CAAAG,IAAA,iBAAAG,MACD,SAAe6D,EAAW4H,GAAgB,IAAX3H,EAAKC,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACnC,OAAOqG,cAA6BvG,EAAU6H,MAAMC,KAAK9H,EAAWnE,MAAOoE,EAC/E,GAAC,CAAAjE,IAAA,iBAAAG,MACD,SAAe4L,EAAYN,GAAe,IAAXxH,EAAKC,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACnC,GAAa,MAATD,GAAiBpE,KAAKoE,QAAUA,IAA0B,IAAjBpE,KAAK2L,QAC9C,OAAOC,EAED,MAANA,GACAlB,gBAA+BkB,EAGvC,GAAC,CAAAzL,IAAA,UAAAG,MACD,SAAQmK,EAAOrG,GACX,GAAIpE,KAAKY,OACL,OAAO,IAAIgE,MAAM,gCAErB5E,KAAK2L,SAAU,EACf,IAAM9I,EAAQ7C,KAAKmM,SAAS1B,EAAOrG,GACnC,GAAIvB,EACA,OAAOA,GAEe,IAAjB7C,KAAK2L,SAAgC,MAAX3L,KAAK4L,KACpC5L,KAAK4L,GAAK5L,KAAK6L,eAAe7L,KAAKmE,UAAWnE,KAAK4L,GAAI,MAE/D,GAAC,CAAAzL,IAAA,WAAAG,MACD,SAASmK,EAAO2B,GACZ,IACIC,EADAC,GAAU,EAEd,IACItM,KAAKwK,KAAKC,EACd,OACOjI,GACH8J,GAAU,EACVD,EAAa7J,GAAQ,IAAIoC,MAAM,qCACnC,CACA,GAAI0H,EACA,OAAAtM,KAAK4H,cACEyE,CAEf,GAAC,CAAAlM,IAAA,cAAAG,MACD,WACI,IAAKN,KAAKY,OAAQ,CACd,IAAQgL,EAAkB5L,KAAlB4L,GAAIzH,EAAcnE,KAAdmE,UACJoI,EAAYpI,EAAZoI,QACRvM,KAAKwK,KAAOxK,KAAKyK,MAAQzK,KAAKmE,UAAY,KAC1CnE,KAAK2L,SAAU,KACfpI,KAAUgJ,EAASvM,MACT,MAAN4L,IACA5L,KAAK4L,GAAK5L,KAAK6L,eAAe1H,EAAWyH,EAAI,OAEjD5L,KAAKoE,MAAQ,QACb3D,QAAAC,KAAA+K,EAAA9K,WAAA,cAAAX,MAAAC,KAAAD,KAAA,CAER,KAACyL,CAAA,CA5EmB,CAASnB,gGCFpBkC,EAAS,WAClB,SAAAA,EAAYC,GAA0C,IAArBjE,EAAGnE,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,GAAAA,UAAA,GAAGmI,EAAUhE,KAAGzI,OAAAC,KAAAwM,GAChDxM,KAAKyM,oBAAsBA,EAC3BzM,KAAKwI,IAAMA,CACf,CAACtI,cAAAsM,EAAA,EAAArM,IAAA,WAAAG,MACD,SAASkK,GAAwB,IAAlBpG,EAAKC,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGoG,EAAKpG,UAAA1B,OAAA,EAAA0B,UAAA,QAAAC,EAC3B,OAAO,IAAItE,KAAKyM,oBAAoBzM,KAAMwK,GAAM/F,SAASgG,EAAOrG,EACpE,KAACoI,CAAA,CAPiB,GAStBA,EAAUhE,IAAMkE,QCTT,IAAMC,EAAc,SAAAC,IAAAlN,OAAAiN,EAAAC,GAAA,IAAAjN,KAAAC,KAAA+M,GACvB,SAAAA,EAAYE,GAAsC,IAAA/M,EAArB0I,EAAGnE,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,GAAAA,UAAA,GAAGmI,MAAazM,cAAAC,KAAA2M,IAC5C7M,EAAAH,EAAAM,KAAAD,KAAM6M,EAAiBrE,IAClB+D,QAAU,GACfzM,EAAKgN,SAAU,EAAMhN,CACzB,CAACI,cAAAyM,EAAA,EAAAxM,IAAA,QAAAG,MACD,SAAMyM,GACF,IAAQR,EAAYvM,KAAZuM,QACR,GAAIvM,KAAK8M,QACLP,EAAQlJ,KAAK0J,OADjB,CAIA,IAAIlK,EACJ7C,KAAK8M,SAAU,EACf,MACSjK,EAAQkK,EAAOC,QAAQD,EAAOtC,MAAOsC,EAAO3I,OAC7C,YAEE2I,EAASR,EAAQ3J,SAE3B,GADA5C,KAAK8M,SAAU,EACXjK,EAAO,CACP,KAAQkK,EAASR,EAAQ3J,SACrBmK,EAAOnF,cAEX,MAAM/E,EAdN,CAgBR,KAAC8J,CAAA,CA1BsB,CAASH,4DCCvBvE,EAAiB,aAAI0E,GAAelB,KACpCwB,EAAQhF,oCCHd,IAAMyE,EAAwB,CACjClE,IAAG,WACC,OAAQkE,EAAsBvB,UAAY+B,MAAM1E,KACpD,EACA2C,cAAU7G,kFCFd,SAAS6I,EAAKC,GACV,OAAOA,EAAIA,EAAIzK,OAAS,EAC5B,CACO,SAAS0K,EAAkB1G,GAC9B,SAAOR,KAAWgH,EAAKxG,IAASA,EAAK2G,WAAQhJ,CACjD,CACO,SAASuC,EAAaF,GACzB,SAAO4G,KAAYJ,EAAKxG,IAASA,EAAK2G,WAAQhJ,CAClD,CACO,SAASkJ,EAAU7G,EAAM8G,GAC5B,MAA6B,iBAAfN,EAAKxG,GAAqBA,EAAK2G,MAAQG,CACzD,kBCbO,SAAS5I,EAAgB6I,EAAoBvJ,EAAWqG,GAAiC,IAA3BpG,EAAKC,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGsJ,EAAMtJ,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,IAAAA,UAAA,GAC5EuJ,EAAuBzJ,EAAUM,SAAS,WAC5C+F,IACImD,EACAD,EAAmBlJ,IAAIxE,KAAKyE,SAAS,KAAML,IAG3CpE,KAAK4H,aAEb,EAAGxD,GAEH,GADAsJ,EAAmBlJ,IAAIoJ,IAClBD,EACD,OAAOC,CAEf,mECbO,SAASL,EAAYjN,GACxB,OAAOA,MAAS6F,KAAW7F,EAAMmE,SACrC,2DCFO,SAASoJ,EAAQnK,GACpB,SAAOyC,KAA2DzC,GAAOoK,KAC7E,CACO,SAASvJ,EAAQwJ,GACpB,OAAO,SAACrK,GACJ,GAAImK,EAAQnK,GACR,OAAOA,EAAOoK,KAAK,SAAUE,GACzB,IACI,OAAOD,EAAKC,EAAchO,KAC9B,OACOuC,GACHvC,KAAK6C,MAAMN,EACf,CACJ,GAEJ,MAAM,IAAI0L,UAAU,yCACxB,CACJ,+vCC2BA,SAASC,EAAoBC,EAAIC,GAE7B,OAAQD,EAAGE,aAAaD,IAAS,IAAIE,MAAM,SAAW,EAC1D,CAOA,IAAMC,GAAwB,oCAMxBC,EAA4B,0BAM5BC,EAAiC,uBAEnCC,EAAS,EAMPC,GAAa,eAAbA,EAAa,WACf,SAAAA,EAAYC,EAKZC,IAAW9O,OAAAC,KAAA2O,GACP3O,KAAK6O,UAAYA,EAEjB7O,KAAK8O,iBAAmB,IAAIC,IAE5B/O,KAAKgP,mBAAqB,KAE1BhP,KAAK+L,IAAG,GAAAX,OAAMsD,KACd1O,KAAK4O,UAAYA,EACjB5O,KAAK+L,OAAMkD,UAAOC,UAAU,IAAMR,GACtC,CAACxO,cAAAyO,EAAA,EAAAxO,IAAA,WAAAG,MACD,SAAS6O,EAAa9N,EAAS+N,GAC3B,GAAKpP,KAAKqP,gBAAgBF,EAAa9N,GAGvC,KAAMlB,EAAMmP,EAAOjO,EAAS+N,GACL,iBAAZ/N,GAEPkO,GAAalO,EAASrB,KAAK+L,KAC3B/L,KAAK8O,iBAAiBU,IAAIrP,EAAK,CAAEsP,eAAgBpO,EAASqO,eAAgB,KAEpE1P,KAAK8O,iBAAiBa,IAAIxP,IAChCH,KAAK4P,sBAAsBvO,EAAS+N,GAEnCpP,KAAK6P,6BAA6BV,EAAahP,IAChDH,KAAK8P,qBAAqBX,EAAahP,EAAG,CAElD,GAAC,CAAAA,IAAA,oBAAAG,MACD,SAAkB6O,EAAa9N,EAAS+N,GAAM,IAAAW,EAC1C,GAAK1O,GAAYrB,KAAKgQ,eAAeb,GAGrC,KAAMhP,EAAMmP,EAAOjO,EAAS+N,GAM5B,GALIpP,KAAK6P,6BAA6BV,EAAahP,IAC/CH,KAAKiQ,wBAAwBd,EAAahP,GAIvB,iBAAZkB,EAAsB,CAC7B,IAAM6O,EAAoBlQ,KAAK8O,iBAAiB1O,IAAID,GAChD+P,GAA0D,IAArCA,EAAkBR,gBACvC1P,KAAKmQ,sBAAsBhQ,EAAG,CAGa,KAAxB,QAAvB4P,EAAA/P,KAAKgP,0BAAkB,IAAAe,OAAA,EAAvBA,EAAyBK,WAAWzN,UACpC3C,KAAKgP,mBAAmBqB,SACxBrQ,KAAKgP,mBAAqB,MAElC,GACA,CAAA7O,IAAA,cAAAG,MACA,WAEI,QAFUgQ,EACJC,EAAoBvQ,KAAK4O,UAAU4B,iBAAgB,IAAApF,OAAKqD,EAA8B,MAAArD,OAAKpL,KAAK+L,IAAG,OAChGpG,EAAI,EAAGA,EAAI4K,EAAkB5N,OAAQgD,IAC1C3F,KAAKyQ,kCAAkCF,EAAkB5K,IACzD4K,EAAkB5K,GAAG+K,gBAAgBjC,GAElB,QAAvB6B,EAAAtQ,KAAKgP,0BAAkB,IAAAsB,GAAvBA,EAAyBD,SACzBrQ,KAAKgP,mBAAqB,KAC1BhP,KAAK8O,iBAAiB6B,OAC1B,GACA,CAAAxQ,IAAA,wBAAAG,MAIA,SAAsBe,EAAS+N,GAC3B,IAAMK,EAAiBzP,KAAK4O,UAAUgC,cAAc,OACpDrB,GAAaE,EAAgBzP,KAAK+L,KAClC0D,EAAeoB,YAAcxP,EACzB+N,GACAK,EAAeqB,aAAa,OAAQ1B,GAExCpP,KAAK+Q,2BACL/Q,KAAKgP,mBAAmBgC,YAAYvB,GACpCzP,KAAK8O,iBAAiBU,IAAIF,EAAOjO,EAAS+N,GAAO,CAAEK,iBAAgBC,eAAgB,GACvF,GACA,CAAAvP,IAAA,wBAAAG,MACA,SAAsBH,GAAK,IAAA8Q,EAAAC,EACO,QAA9BD,EAAAjR,KAAK8O,iBAAiB1O,IAAID,UAAI,IAAA8Q,GAAgB,QAAhBC,EAA9BD,EAAgCxB,sBAAc,IAAAyB,GAA9CA,EAAgDb,SAChDrQ,KAAK8O,iBAAgBqC,OAAQhR,EACjC,GACA,CAAAA,IAAA,2BAAAG,MACA,WACI,IAAIN,KAAKgP,mBAKT,SAFMoC,EAAqB,oCACrBC,EAAmBrR,KAAK4O,UAAU4B,iBAAgB,IAAApF,OAAKgG,EAAkB,wBACtEzL,EAAI,EAAGA,EAAI0L,EAAiB1O,OAAQgD,IAKzC0L,EAAiB1L,GAAG0K,SAExB,IAAMiB,EAAoBtR,KAAK4O,UAAUgC,cAAc,OAKvDU,EAAkBC,MAAMC,WAAa,SAGrCF,EAAkBG,UAAUjN,IAAI4M,GAChCE,EAAkBG,UAAUjN,IAAI,uBAE5BxE,KAAK6O,YAAc7O,KAAK6O,UAAU6C,WAClCJ,EAAkBR,aAAa,WAAY,UAE/C9Q,KAAK4O,UAAU+C,KAAKX,YAAYM,GAChCtR,KAAKgP,mBAAqBsC,EAC9B,GACA,CAAAnR,IAAA,oCAAAG,MACA,SAAkCsR,GAE9B,IAAMC,EAAuB3D,EAAoB0D,EAAS,oBAAoBzI,OAAO,SAAAyC,GAAE,OAA6C,GAAzCA,EAAGkG,QAAQtD,EAA+B,GACrIoD,EAAQd,aAAa,mBAAoBe,EAAqBE,KAAK,KACvE,GACA,CAAA5R,IAAA,uBAAAG,MAIA,SAAqBsR,EAASzR,GAC1B,IAAM+P,EAAoBlQ,KAAK8O,iBAAiB1O,IAAID,IAxL5D,SAAS6R,EAAoB7D,EAAIC,EAAMxC,GACnC,IAAMqG,EAAM/D,EAAoBC,EAAIC,GAChC6D,EAAIC,KAAK,SAAAC,GAAU,OAAIA,EAAWC,QAAUxG,EAAGwG,MAAM,KAGzDH,EAAI5O,KAAKuI,EAAGwG,QACZjE,EAAG2C,aAAa1C,EAAM6D,EAAIF,KAXT,MAYrB,EAoLQC,CAAoBJ,EAAS,mBAAoB1B,EAAkBT,eAAe7D,IAClFgG,EAAQd,aAAarC,EAAgCzO,KAAK+L,KAC1DmE,EAAkBR,gBACtB,GACA,CAAAvP,IAAA,0BAAAG,MAIA,SAAwBsR,EAASzR,GAC7B,IAAM+P,EAAoBlQ,KAAK8O,iBAAiB1O,IAAID,GACpD+P,EAAkBR,iBAzL1B,SAAS2C,EAAuBlE,EAAIC,EAAMxC,GACtC,IACM0G,EADMpE,EAAoBC,EAAIC,GACZjF,OAAO,SAAAoJ,GAAG,OAAIA,GAAO3G,EAAGwG,MAAM,GAClDE,EAAY3P,OACZwL,EAAG2C,aAAa1C,EAAMkE,EAAYP,KArBrB,MAwBb5D,EAAGuC,gBAAgBtC,EAE3B,CAiLQiE,CAAuBT,EAAS,mBAAoB1B,EAAkBT,eAAe7D,IACrFgG,EAAQlB,gBAAgBjC,EAC5B,GACA,CAAAtO,IAAA,+BAAAG,MACA,SAA6BsR,EAASzR,GAClC,IAAMqS,EAAetE,EAAoB0D,EAAS,oBAC5C1B,EAAoBlQ,KAAK8O,iBAAiB1O,IAAID,GAC9CsS,EAAYvC,GAAqBA,EAAkBT,eAAe7D,GACxE,QAAS6G,IAAgD,GAAnCD,EAAaV,QAAQW,EAC/C,GACA,CAAAtS,IAAA,kBAAAG,MACA,SAAgBsR,EAASvQ,GACrB,IAAKrB,KAAKgQ,eAAe4B,GACrB,OAAO,EAEX,GAAIvQ,GAA8B,iBAAZA,EAIlB,OAAO,EAEX,IAAMqR,EAA4B,MAAXrR,EAAkB,GAAK,GAAA+J,OAAG/J,GAAU+Q,OACrDO,EAAYf,EAAQvD,aAAa,cAGvC,SAAOqE,GAAkBC,GAAaA,EAAUP,SAAWM,EAC/D,GACA,CAAAvS,IAAA,iBAAAG,MACA,SAAesR,GACX,OAAOA,EAAQgB,WAAa5S,KAAK4O,UAAUiE,YAC/C,KAAClE,CAAA,CA5Kc,GAAbA,SA6KYmE,UAAI,SAAAC,GAAA,WAAAA,GAAwFpE,GAAVqE,qBAAyCC,YAAzCD,qBAA8DE,YAAW,EA7KvKvE,EA8KYwE,WADkFH,+BAAE,CAAAI,MACYzE,EAAa0E,QAAb1E,EAAamE,UAAAQ,WAAc,SA9KvI3E,CAAa,IAwLnB,SAASW,EAAOjO,EAAS+N,GACrB,MAA0B,iBAAZ/N,EAAoB,GAAA+J,OAAMgE,GAAQ,GAAE,KAAAhE,OAAI/J,GAAYA,CACtE,CAEA,SAASkO,GAAaqC,EAAS2B,GACtB3B,EAAQhG,KACTgG,EAAQhG,GAAE,GAAAR,OAAMoD,EAAyB,KAAApD,OAAImI,EAAS,KAAAnI,OAAIsD,KAElE,CAEA,IAIM8E,EAAc,WAChB,SAAAA,EAAYC,GAAQ,IAAA3T,EAAAE,MAAAD,OAAAC,KAAAwT,GAChBxT,KAAKyT,OAASA,EACdzT,KAAK0T,kBAAmB,EACxB1T,KAAK2T,YAAc,KACnB3T,KAAK4T,OAAQ,EACb5T,KAAK6T,iBAAmB,IAAI5S,IAC5BjB,KAAK8T,uBAAyBxQ,WAC9BtD,KAAK+T,WAAY,EACjB/T,KAAKgU,qBAAuB,GAC5BhU,KAAKiU,aAAc,EACnBjU,KAAKkU,eAAiB,CAAEC,SAAS,EAAOC,MAAO,IAK/CpU,KAAKqU,iBAAmB,SAACC,GAAI,OAAKA,EAAKC,QAAQ,EAE/CvU,KAAKwU,gBAAkB,GAKvBxU,KAAKyU,OAAS,IAAIxT,IAElBjB,KAAK0U,OAAS,IAAIzT,IAIdwS,aAAkBkB,cAClB3U,KAAK4U,yBAA2BnB,EAAOoB,QAAQ7Q,UAAU,SAAC8Q,GACtD,GAAIhV,EAAK6T,YAAa,CAClB,IACMoB,EADYD,EAASE,UACAlD,QAAQhS,EAAK6T,aACpCoB,GAAW,GAAMA,IAAajV,EAAK4T,mBACnC5T,EAAK4T,iBAAmBqB,GAGpC,GAER,CACA7U,cAAAsT,EAAA,EAAArT,IAAA,gBAAAG,MAKA,SAAc8I,GACV,OAAApJ,KAAKqU,iBAAmBjL,EACjBpJ,IACX,GACA,CAAAG,IAAA,WAAAG,MAKA,WACI,OAAAN,KAAK4T,QADUvP,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,KAAAA,UAAA,GAERrE,IACX,GACA,CAAAG,IAAA,0BAAAG,MAIA,WACI,OAAAN,KAAK+T,YADsB1P,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,KAAAA,UAAA,GAEpBrE,IACX,GACA,CAAAG,IAAA,4BAAAG,MAKA,SAA0B2U,GACtB,OAAAjV,KAAKkV,YAAcD,EACZjV,IACX,GACA,CAAAG,IAAA,0BAAAG,MAIA,SAAwB6U,GACpB,OAAAnV,KAAKgU,qBAAuBmB,EACrBnV,IACX,GACA,CAAAG,IAAA,gBAAAG,MAIA,WAAsC,IAAAuB,EAAA7B,KAAxBoV,EAAgB/Q,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAM7B,OAAArE,KAAK8T,uBAAuBlM,cAI5B5H,KAAK8T,uBAAyB9T,KAAK6T,iBAC9BtO,QAAK0E,KAAI,SAAAoL,GAAM,OAAIxT,EAAK2S,gBAAgBnR,KAAKgS,EAAO,MAAGtN,KAAaqN,IAAgB,EAAGjM,KAAO,kBAAMtH,EAAK2S,gBAAgB7R,OAAS,CAAC,MAAG4G,KAAI,kBAAM1H,EAAK2S,gBAAgBzC,KAAK,GAAG,IAC7K/N,UAAU,SAAAsR,GAIX,QAHMC,EAAQ1T,EAAK2T,iBAGV7P,EAAI,EAAGA,EAAI4P,EAAM5S,OAAS,EAAGgD,IAAK,CACvC,IAAM2D,GAASzH,EAAK6R,iBAAmB/N,GAAK4P,EAAM5S,OAC5C2R,EAAOiB,EAAMjM,GACnB,IAAKzH,EAAKwS,iBAAiBC,IACuC,IAA9DA,EAAKmB,WAAWC,cAActD,OAAON,QAAQwD,GAAoB,CACjEzT,EAAK8T,cAAcrM,GACnB,OAGRzH,EAAK2S,gBAAkB,EAC3B,GACOxU,IACX,GACA,CAAAG,IAAA,kBAAAG,MACA,WACI,OAAAN,KAAKwU,gBAAkB,GAChBxU,IACX,GACA,CAAAG,IAAA,iBAAAG,MAKA,WACI,OAAAN,KAAKiU,cADa5P,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,KAAAA,UAAA,GAEXrE,IACX,GACA,CAAAG,IAAA,iBAAAG,MAMA,WACI,OAAAN,KAAKkU,eAAiB,CAAEC,UADN9P,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,KAAAA,UAAA,GACe+P,MADD/P,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,GAAAA,UAAA,GAAG,IAE5BrE,IACX,GAAC,CAAAG,IAAA,gBAAAG,MACD,SAAcgU,GACV,IAAMsB,EAAqB5V,KAAK2T,YAChC3T,KAAK6V,iBAAiBvB,GAClBtU,KAAK2T,cAAgBiC,GACrB5V,KAAK0U,OAAO7T,KAAKb,KAAK0T,iBAE9B,GACA,CAAAvT,IAAA,YAAAG,MAIA,SAAUwV,GAAO,IAAApT,EAAA1C,KACP+V,EAAUD,EAAMC,QAEhBC,EADY,CAAC,SAAU,UAAW,UAAW,YACfC,MAAM,SAAAC,GACtC,OAAQJ,EAAMI,IAAaxT,EAAKsR,qBAAqBlC,QAAQoE,IAAY,CAC7E,GACA,OAAQH,GACJ,KAAKI,MAED,YADAnW,KAAKyU,OAAO5T,OAEhB,KAAKuV,aACD,GAAIpW,KAAK+T,WAAaiC,EAAmB,CACrChW,KAAKqW,oBACL,MAGA,OAER,KAAKC,WACD,GAAItW,KAAK+T,WAAaiC,EAAmB,CACrChW,KAAKuW,wBACL,MAGA,OAER,KAAKC,cACD,GAAIxW,KAAKkV,aAAec,EAAmB,CAClB,QAArBhW,KAAKkV,YAAwBlV,KAAKuW,wBAA0BvW,KAAKqW,oBACjE,MAGA,OAER,KAAKI,aACD,GAAIzW,KAAKkV,aAAec,EAAmB,CAClB,QAArBhW,KAAKkV,YAAwBlV,KAAKqW,oBAAsBrW,KAAKuW,wBAC7D,MAGA,OAER,KAAKG,OACD,GAAI1W,KAAKiU,aAAe+B,EAAmB,CACvChW,KAAK2W,qBACL,MAGA,OAER,KAAKC,MACD,GAAI5W,KAAKiU,aAAe+B,EAAmB,CACvChW,KAAK6W,oBACL,MAGA,OAER,KAAKC,UACD,GAAI9W,KAAKkU,eAAeC,SAAW6B,EAAmB,CAClD,IAAMe,EAAc/W,KAAK0T,iBAAmB1T,KAAKkU,eAAeE,MAChEpU,KAAKgX,sBAAsBD,EAAc,EAAIA,EAAc,EAAG,GAC9D,MAGA,OAER,KAAKE,YACD,GAAIjX,KAAKkU,eAAeC,SAAW6B,EAAmB,CAClD,IAAMe,EAAc/W,KAAK0T,iBAAmB1T,KAAKkU,eAAeE,MAC1D8C,EAAclX,KAAKwV,iBAAiB7S,OAC1C3C,KAAKgX,sBAAsBD,EAAcG,EAAcH,EAAcG,EAAc,GAAG,GACtF,MAGA,OAER,QAaI,aAZIlB,MAAqBmB,kBAAerB,EAAO,eAGvCA,EAAM3V,KAA4B,IAArB2V,EAAM3V,IAAIwC,OACvB3C,KAAK6T,iBAAiBhT,KAAKiV,EAAM3V,IAAIiX,sBAE/BrB,GAAWsB,KAAKtB,GAAWuB,KAAOvB,GAAWwB,QAAQxB,GAAWyB,SACtExX,KAAK6T,iBAAiBhT,KAAK4W,OAAOC,aAAa3B,MAO/D/V,KAAKwU,gBAAkB,GACvBsB,EAAM6B,gBACV,GACA,CAAAxX,IAAA,kBAAAC,IACA,WACI,OAAOJ,KAAK0T,gBAChB,GACA,CAAAvT,IAAA,aAAAC,IACA,WACI,OAAOJ,KAAK2T,WAChB,GACA,CAAAxT,IAAA,WAAAG,MACA,WACI,OAAON,KAAKwU,gBAAgB7R,OAAS,CACzC,GACA,CAAAxC,IAAA,qBAAAG,MACA,WACIN,KAAKgX,sBAAsB,EAAG,EAClC,GACA,CAAA7W,IAAA,oBAAAG,MACA,WACIN,KAAKgX,sBAAsBhX,KAAKyT,OAAO9Q,OAAS,GAAG,EACvD,GACA,CAAAxC,IAAA,oBAAAG,MACA,WACIN,KAAK0T,iBAAmB,EAAI1T,KAAK2W,qBAAuB3W,KAAK4X,sBAAsB,EACvF,GACA,CAAAzX,IAAA,wBAAAG,MACA,WACIN,KAAK0T,iBAAmB,GAAK1T,KAAK4T,MAC5B5T,KAAK6W,oBACL7W,KAAK4X,uBAAsB,EACrC,GAAC,CAAAzX,IAAA,mBAAAG,MACD,SAAiBgU,GACb,IAAMuD,EAAY7X,KAAKwV,iBACjBlM,EAAwB,iBAATgL,EAAoBA,EAAOuD,EAAU/F,QAAQwC,GAGlEtU,KAAK2T,YAFckE,EAAUvO,IAEW,KACxCtJ,KAAK0T,iBAAmBpK,CAC5B,GACA,CAAAnJ,IAAA,UAAAG,MACA,WAAU,IAAAwX,EACN9X,KAAK8T,uBAAuBlM,cACC,QAA7BkQ,EAAA9X,KAAK4U,gCAAwB,IAAAkD,GAA7BA,EAA+BlQ,cAC/B5H,KAAK6T,iBAAiB9Q,WACtB/C,KAAKyU,OAAO1R,WACZ/C,KAAK0U,OAAO3R,WACZ/C,KAAKwU,gBAAkB,EAC3B,GACA,CAAArU,IAAA,wBAAAG,MAKA,SAAsB8T,GAClBpU,KAAK4T,MAAQ5T,KAAK+X,qBAAqB3D,GAASpU,KAAKgY,wBAAwB5D,EACjF,GACA,CAAAjU,IAAA,uBAAAG,MAKA,SAAqB8T,GAEjB,QADMmB,EAAQvV,KAAKwV,iBACV7P,EAAI,EAAGA,GAAK4P,EAAM5S,OAAQgD,IAAK,CACpC,IAAM2D,GAAStJ,KAAK0T,iBAAmBU,EAAQzO,EAAI4P,EAAM5S,QAAU4S,EAAM5S,OAEzE,IAAK3C,KAAKqU,iBADGkB,EAAMjM,IAGf,YADAtJ,KAAK2V,cAAcrM,EACnB,CAGZ,GACA,CAAAnJ,IAAA,0BAAAG,MAKA,SAAwB8T,GACpBpU,KAAKgX,sBAAsBhX,KAAK0T,iBAAmBU,EAAOA,EAC9D,GACA,CAAAjU,IAAA,wBAAAG,MAKA,SAAsBgJ,EAAO2O,GACzB,IAAM1C,EAAQvV,KAAKwV,iBACnB,GAAKD,EAAMjM,GAGX,MAAOtJ,KAAKqU,iBAAiBkB,EAAMjM,KAE/B,IAAKiM,EADLjM,GAAS2O,GAEL,OAGRjY,KAAK2V,cAAcrM,EAAK,CAC5B,GACA,CAAAnJ,IAAA,iBAAAG,MACA,WACI,OAAON,KAAKyT,kBAAkBkB,YAAY3U,KAAKyT,OAAOuB,UAAYhV,KAAKyT,MAC3E,KAACD,CAAA,CA3Ve,GA8Vd0E,GAA0B,SAAAC,IAAAzY,OAAAwY,EAAAC,GAAA,IAAAxY,KAAAC,KAAAsY,GAAA,SAAAA,IAAAnY,cAAAC,KAAAkY,GAAAvY,EAAAoL,MAAA/K,KAAAqE,UAAA,CAAAnE,cAAAgY,EAAA,EAAA/X,IAAA,gBAAAG,MAC5B,SAAcgJ,GACNtJ,KAAKoY,YACLpY,KAAKoY,WAAWC,qBAAiB,EAErC5X,QAAAC,KAAAwX,EAAAvX,WAAA,gBAAAX,MAAAC,KAAAD,KAAoBsJ,GAChBtJ,KAAKoY,YACLpY,KAAKoY,WAAWE,iBAExB,KAACJ,CAAA,CAT2B,CAAS1E,GAYnC+E,GAAe,SAAAC,IAAA9Y,OAAA6Y,EAAAC,GAAA,IAAA3U,KAAAjE,KAAA2Y,GACjB,SAAAA,IAAc,IAAAzV,EAAA/C,cAAAC,KAAAuY,IACVzV,EAAAe,EAAAkH,MAAA/K,KAASqE,YACJoU,QAAU,UAAU3V,CAC7B,CACA5C,cAAAqY,EAAA,EAAApY,IAAA,iBAAAG,MAIA,SAAeoY,GACX,OAAA1Y,KAAKyY,QAAUC,EACR1Y,IACX,GAAC,CAAAG,IAAA,gBAAAG,MACD,SAAcgU,IACV7T,UAAAC,KAAA6X,EAAA5X,WAAA,gBAAAX,MAAAC,KAAAD,KAAoBsU,GAChBtU,KAAKoY,YACLpY,KAAKoY,WAAWO,MAAM3Y,KAAKyY,QAEnC,KAACF,CAAA,CAlBgB,CAAS/E,GAwBxBoF,IAAiB1Y,OACnB,SAAA0Y,KAAc7Y,OAAAC,KAAA4Y,GAIV5Y,KAAK6Y,kBAAmB,CAC5B,GASEC,EAAoB,eAApBA,EAAoB,WACtB,SAAAA,EAAYjK,IAAW9O,OAAAC,KAAA8Y,GACnB9Y,KAAK6O,UAAYA,CACrB,CACA3O,cAAA4Y,EAAA,EAAA3Y,IAAA,aAAAG,MAMA,SAAWsR,GAGP,OAAOA,EAAQmH,aAAa,WAChC,GACA,CAAA5Y,IAAA,YAAAG,MAQA,SAAUsR,GACN,OAyGR,SAASoH,GAAYpH,GAGjB,SAAUA,EAAQqH,aACdrH,EAAQsH,cAC2B,mBAA3BtH,EAAQuH,gBAAiCvH,EAAQuH,iBAAiBxW,OAClF,CA/GeqW,CAAYpH,IAAqD,YAAzCwH,iBAAiBxH,GAASJ,UAC7D,GACA,CAAArR,IAAA,aAAAG,MAOA,SAAWsR,GAEP,IAAK5R,KAAK6O,UAAU6C,UAChB,OAAO,EAEX,IAAM2H,EAkFd,SAASC,GAAgBC,GACrB,IACI,OAAOA,EAAOF,YAClB,OAEI,OAAO,IACX,CACJ,CAzF6BC,CAsK7B,SAASE,GAAUC,GAEf,OAAQA,EAAKC,eAAiBD,EAAKC,cAAcC,aAAgBJ,MACrE,CAzK6CC,CAAU5H,IAC/C,GAAIyH,KAEuC,IAAnCO,GAAiBP,KAIhBrZ,KAAK6Z,UAAUR,IAChB,OAAO,EAGf,IAAIS,EAAWlI,EAAQkI,SAASC,cAC5BC,EAAgBJ,GAAiBhI,GACrC,OAAIA,EAAQmH,aAAa,oBACI,IAAlBiB,IAEM,WAAbF,GAAsC,WAAbA,GAOzB9Z,KAAK6O,UAAUoL,QAAUja,KAAK6O,UAAUqL,MAwHpD,SAASC,GAAyBvI,GAC9B,IAAIkI,EAAWlI,EAAQkI,SAASC,cAC5BK,EAAyB,UAAbN,GAAwBlI,EAAQyI,KAChD,MAAsB,SAAdD,GACU,aAAdA,GACa,WAAbN,GACa,aAAbA,CACR,CA/H4DK,CAAyBvI,MAG5D,UAAbkI,IAGKlI,EAAQmH,aAAa,cAKD,IAAlBiB,EAEM,UAAbF,GAKsB,IAAlBE,IAKkB,OAAlBA,GAMGha,KAAK6O,UAAUyL,SAAW1I,EAAQmH,aAAa,aAEnDnH,EAAQ2I,UAAY,EAC/B,GACA,CAAApa,IAAA,cAAAG,MAOA,SAAYsR,EAAS4I,GAGjB,OAyFR,SAASC,GAAuB7I,GAE5B,OAlDJ,SAAS8I,GAAc9I,GACnB,OAOJ,SAAS+I,GAAe/I,GACpB,MAAyC,SAAlCA,EAAQkI,SAASC,aAC5B,CATWY,CAAe/I,IAA4B,UAAhBA,EAAQyI,IAC9C,CAgDQK,CAAc9I,KA1DtB,SAASgJ,GAAoBhJ,GACzB,IAAIkI,EAAWlI,EAAQkI,SAASC,cAChC,MAAqB,UAAbD,GACS,WAAbA,GACa,WAAbA,GACa,aAAbA,CACR,CAuDYc,CAAoBhJ,IAjDhC,SAASiJ,GAAiBjJ,GACtB,OAOJ,SAASkJ,GAAgBlJ,GACrB,MAAyC,KAAlCA,EAAQkI,SAASC,aAC5B,CATWe,CAAgBlJ,IAAYA,EAAQmH,aAAa,OAC5D,CAgDQ8B,CAAiBjJ,IACjBA,EAAQmH,aAAa,oBACrBgC,GAAiBnJ,GACzB,CAlGgB6I,CAAuB7I,KAC1B5R,KAAKgb,WAAWpJ,KAChB4I,GAAQ3B,kBAAoB7Y,KAAK6Z,UAAUjI,GACpD,KAACkH,CAAA,CA3GqB,GAApBA,SA4GYhG,UAAI,SAAAC,GAAA,WAAAA,GAAwF+F,GAthBV9F,qBAshBgDE,YAAW,EA5GzJ4F,EA6GY3F,WAvhBkFH,+BAAE,CAAAI,MAuhBY0F,EAAoBzF,QAApByF,EAAoBhG,UAAAQ,WAAc,SA7G9IwF,CAAoB,IAiK1B,SAASiC,GAAiBnJ,GACtB,IAAKA,EAAQmH,aAAa,kBAAoCzU,IAArBsN,EAAQ2I,SAC7C,OAAO,EAEX,IAAIA,EAAW3I,EAAQvD,aAAa,YACpC,SAAUkM,GAAaU,MAAMC,SAASX,EAAU,KACpD,CAKA,SAASX,GAAiBhI,GACtB,IAAKmJ,GAAiBnJ,GAClB,OAAO,KAGX,IAAM2I,EAAWW,SAAStJ,EAAQvD,aAAa,aAAe,GAAI,IAClE,OAAO4M,MAAMV,IAAY,EAAKA,CAClC,CA8BA,IAUMY,GAAS,WAYX,SAAAA,EAAYC,EAAUC,EAAUC,EAAS1M,GAAiC,IAAAzL,EAAAnD,KAAtBub,EAAYlX,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,IAAAA,UAAA,IAAQtE,OAAAC,KAAAmb,GACpEnb,KAAKob,SAAWA,EAChBpb,KAAKqb,SAAWA,EAChBrb,KAAKsb,QAAUA,EACftb,KAAK4O,UAAYA,EACjB5O,KAAKwb,cAAe,EAEpBxb,KAAKyb,oBAAsB,kBAAMtY,EAAKuY,0BAA0B,EAChE1b,KAAK2b,kBAAoB,kBAAMxY,EAAKyY,2BAA2B,EAC/D5b,KAAK6b,UAAW,EACXN,GACDvb,KAAK8b,eAEb,CACA5b,cAAAib,EAAA,EAAAhb,IAAA,UAAAC,eAvBI,OAAOJ,KAAK6b,QAChB,EAACrM,IACD,SAAYlP,GACRN,KAAK6b,SAAWvb,EACZN,KAAK+b,cAAgB/b,KAAKgc,aAC1Bhc,KAAKic,sBAAsB3b,EAAON,KAAK+b,cACvC/b,KAAKic,sBAAsB3b,EAAON,KAAKgc,YAE/C,GAAC,CAAA7b,IAAA,UAAAG,MAgBD,WACI,IAAM4b,EAAclc,KAAK+b,aACnBI,EAAYnc,KAAKgc,WACnBE,IACAA,EAAYE,oBAAoB,QAASpc,KAAKyb,qBAC9CS,EAAY7L,UAEZ8L,IACAA,EAAUC,oBAAoB,QAASpc,KAAK2b,mBAC5CQ,EAAU9L,UAEdrQ,KAAK+b,aAAe/b,KAAKgc,WAAa,KACtChc,KAAKwb,cAAe,CACxB,GACA,CAAArb,IAAA,gBAAAG,MAMA,WAAgB,IAAAwD,EAAA9D,KAEZ,QAAIA,KAAKwb,eAGTxb,KAAKsb,QAAQe,kBAAkB,WACtBvY,EAAKiY,eACNjY,EAAKiY,aAAejY,EAAKwY,gBACzBxY,EAAKiY,aAAaQ,iBAAiB,QAASzY,EAAK2X,sBAEhD3X,EAAKkY,aACNlY,EAAKkY,WAAalY,EAAKwY,gBACvBxY,EAAKkY,WAAWO,iBAAiB,QAASzY,EAAK6X,mBAEvD,GACI3b,KAAKob,SAASoB,aACdxc,KAAKob,SAASoB,WAAWC,aAAazc,KAAK+b,aAAc/b,KAAKob,UAC9Dpb,KAAKob,SAASoB,WAAWC,aAAazc,KAAKgc,WAAYhc,KAAKob,SAASsB,aACrE1c,KAAKwb,cAAe,GAEjBxb,KAAKwb,aAChB,GACA,CAAArb,IAAA,+BAAAG,MAKA,SAA6Bqc,GAAS,IAAAC,EAAA5c,KAClC,OAAO,IAAI6c,QAAQ,SAAAC,GACfF,EAAKG,iBAAiB,kBAAMD,EAAQF,EAAKI,oBAAoBL,GAAS,EAC1E,EACJ,GACA,CAAAxc,IAAA,qCAAAG,MAMA,SAAmCqc,GAAS,IAAAM,EAAAjd,KACxC,OAAO,IAAI6c,QAAQ,SAAAC,GACfG,EAAKF,iBAAiB,kBAAMD,EAAQG,EAAKrB,0BAA0Be,GAAS,EAChF,EACJ,GACA,CAAAxc,IAAA,oCAAAG,MAMA,SAAkCqc,GAAS,IAAAO,EAAAld,KACvC,OAAO,IAAI6c,QAAQ,SAAAC,GACfI,EAAKH,iBAAiB,kBAAMD,EAAQI,EAAKxB,yBAAyBiB,GAAS,EAC/E,EACJ,GACA,CAAAxc,IAAA,qBAAAG,MAKA,SAAmB6c,GAEf,IAAMC,EAAUpd,KAAKob,SAAS5K,iBAAiB,qBAAApF,OAAqB+R,EAAK,yBAAA/R,OAA0B+R,EAAK,OAAK,cAAA/R,OAAiB+R,EAAK,MAgBnI,MAAa,SAATA,EACOC,EAAQza,OAASya,EAAQ,GAAKpd,KAAKqd,yBAAyBrd,KAAKob,UAErEgC,EAAQza,OACTya,EAAQA,EAAQza,OAAS,GACzB3C,KAAKsd,wBAAwBtd,KAAKob,SAC5C,GACA,CAAAjb,IAAA,sBAAAG,MAIA,SAAoBqc,GAEhB,IAAMY,EAAoBvd,KAAKob,SAASoC,cAAc,0CACtD,GAAID,EAAmB,CAcnB,IAAKvd,KAAKqb,SAASoC,YAAYF,GAAoB,CAC/C,IAAMG,EAAiB1d,KAAKqd,yBAAyBE,GACrDG,UAAgB/E,MAAMgE,KACbe,EAEbH,SAAkB5E,MAAMgE,IACjB,EAEX,OAAO3c,KAAK4b,0BAA0Be,EAC1C,GACA,CAAAxc,IAAA,4BAAAG,MAIA,SAA0Bqc,GACtB,IAAMY,EAAoBvd,KAAK2d,mBAAmB,SAClD,OAAIJ,GACAA,EAAkB5E,MAAMgE,KAEnBY,CACb,GACA,CAAApd,IAAA,2BAAAG,MAIA,SAAyBqc,GACrB,IAAMY,EAAoBvd,KAAK2d,mBAAmB,OAClD,OAAIJ,GACAA,EAAkB5E,MAAMgE,KAEnBY,CACb,GACA,CAAApd,IAAA,cAAAG,MAGA,WACI,OAAON,KAAKwb,YAChB,GACA,CAAArb,IAAA,2BAAAG,MACA,SAAyBsd,GACrB,GAAI5d,KAAKqb,SAASoC,YAAYG,IAAS5d,KAAKqb,SAASwC,WAAWD,GAC5D,OAAOA,EAGX,QADME,EAAWF,EAAKE,SACbnY,EAAI,EAAGA,EAAImY,EAASnb,OAAQgD,IAAK,CACtC,IAAMoY,EAAgBD,EAASnY,GAAGiN,WAAa5S,KAAK4O,UAAUiE,aACxD7S,KAAKqd,yBAAyBS,EAASnY,IACvC,KACN,GAAIoY,EACA,OAAOA,EAGf,OAAO,IACX,GACA,CAAA5d,IAAA,0BAAAG,MACA,SAAwBsd,GACpB,GAAI5d,KAAKqb,SAASoC,YAAYG,IAAS5d,KAAKqb,SAASwC,WAAWD,GAC5D,OAAOA,EAIX,QADME,EAAWF,EAAKE,SACbnY,EAAImY,EAASnb,OAAS,EAAGgD,GAAK,EAAGA,IAAK,CAC3C,IAAMoY,EAAgBD,EAASnY,GAAGiN,WAAa5S,KAAK4O,UAAUiE,aACxD7S,KAAKsd,wBAAwBQ,EAASnY,IACtC,KACN,GAAIoY,EACA,OAAOA,EAGf,OAAO,IACX,GACA,CAAA5d,IAAA,gBAAAG,MACA,WACI,IAAM0d,EAAShe,KAAK4O,UAAUgC,cAAc,OAC5C,OAAA5Q,KAAKic,sBAAsBjc,KAAK6b,SAAUmC,GAC1CA,EAAOvM,UAAUjN,IAAI,uBACrBwZ,EAAOvM,UAAUjN,IAAI,yBACrBwZ,EAAOlN,aAAa,cAAe,QAC5BkN,CACX,GACA,CAAA7d,IAAA,wBAAAG,MAKA,SAAsB2d,EAAWD,GAG7BC,EAAYD,EAAOlN,aAAa,WAAY,KAAOkN,EAAOtN,gBAAgB,WAC9E,GACA,CAAAvQ,IAAA,gBAAAG,MAIA,SAAc6T,GACNnU,KAAK+b,cAAgB/b,KAAKgc,aAC1Bhc,KAAKic,sBAAsB9H,EAASnU,KAAK+b,cACzC/b,KAAKic,sBAAsB9H,EAASnU,KAAKgc,YAEjD,GACA,CAAA7b,IAAA,mBAAAG,MACA,SAAiB4d,GACTle,KAAKsb,QAAQ6C,SACbD,IAGAle,KAAKsb,QAAQ8C,SAAS7Y,QAAKqE,KAAK,IAAI5F,UAAUka,EAEtD,KAAC/C,CAAA,CApQU,GA2QTkD,GAAgB,eAAhBA,EAAgB,WAClB,SAAAA,EAAYhD,EAAUC,EAAS1M,IAAW7O,OAAAC,KAAAqe,GACtCre,KAAKqb,SAAWA,EAChBrb,KAAKsb,QAAUA,EACftb,KAAK4O,UAAYA,CACrB,CACA1O,cAAAme,EAAA,EAAAle,IAAA,SAAAG,MAOA,SAAOsR,GACH,OAAO,IAAIuJ,GAAUvJ,EAAS5R,KAAKqb,SAAUrb,KAAKsb,QAAStb,KAAK4O,UADhCvK,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,IAAAA,UAAA,GAEpC,KAACga,CAAA,CAfiB,GAAhBA,SAgBYvL,UAAI,SAAAC,GAAA,WAAAA,GAAwFsL,GAh6BVrL,qBAg6B4C8F,GAh6B5C9F,qBAg6B6EA,UAh6B7EA,qBAg6BmGC,YAAQ,EAhBzMoL,EAiBYlL,WAj6BkFH,+BAAE,CAAAI,MAi6BYiL,EAAgBhL,QAAhBgL,EAAgBvL,UAAAQ,WAAc,SAjB1I+K,CAAgB,IA2BhBC,GAAY,eAAZA,EAAY,WAkBd,SAAAA,EAAYC,EAAaC,EAKzB5P,IAAW7O,OAAAC,KAAAse,GACPte,KAAKue,YAAcA,EACnBve,KAAKwe,kBAAoBA,EAEzBxe,KAAKye,0BAA4B,KACjCze,KAAK0e,UAAY1e,KAAKwe,kBAAkB7a,OAAO3D,KAAKue,YAAYI,eAAe,EACnF,CAACze,cAAAoe,EAAA,EAAAne,IAAA,UAAAC,eA1BG,OAAOJ,KAAK0e,UAAUvK,OAC1B,EAAC3E,IACD,SAAYlP,GACRN,KAAK0e,UAAUvK,WAAUyK,yBAAsBte,EACnD,GACA,CAAAH,IAAA,cAAAC,IAIA,WACI,OAAOJ,KAAK6e,YAChB,EAACrP,IACD,SAAgBlP,GACZN,KAAK6e,gBAAeD,yBAAsBte,EAC9C,GAAC,CAAAH,IAAA,cAAAG,MAaD,WACIN,KAAK0e,UAAUI,UAGX9e,KAAKye,4BACLze,KAAKye,0BAA0B9F,QAC/B3Y,KAAKye,0BAA4B,KAEzC,GAAC,CAAAte,IAAA,qBAAAG,MACD,WACIN,KAAK0e,UAAU5C,gBACX9b,KAAK+e,aACL/e,KAAKgf,eAEb,GAAC,CAAA7e,IAAA,YAAAG,MACD,WACSN,KAAK0e,UAAUO,eAChBjf,KAAK0e,UAAU5C,eAEvB,GAAC,CAAA3b,IAAA,cAAAG,MACD,SAAYuU,GACR,IAAMqK,EAAoBrK,EAAQkK,YAC9BG,IACCA,EAAkBC,aACnBnf,KAAK+e,aACL/e,KAAK0e,UAAUO,eACfjf,KAAKgf,eAEb,GAAC,CAAA7e,IAAA,gBAAAG,MACD,WACIN,KAAKye,6BAA4BW,uCACjCpf,KAAK0e,UAAUW,8BACnB,KAACf,CAAA,CA9Da,GAAZA,SA+DYxL,UAAI,SAAAC,GAAA,WAAAA,GAAwFuL,GA1+BVtL,8BA0+BwCA,cA1+BxCA,8BA0+BkEqL,IA1+BlErL,8BA0+B+FC,YAAQ,EA/DrMqL,EAgEYgB,UA3+BkFtM,8BAAE,CAAAqH,KA2+BJiE,EAAYiB,UAAA,yBAAAC,OAAA,CAAArL,QAAA,2BAAA4K,YAAA,2CAAAU,SAAA,iBAAAC,SAAA,CA3+BV1M,oCA26B9FsL,CAAY,IAyFZqB,GAAqB,SAAAC,IAAAlgB,OAAAigB,EAAAC,GAAA,IAAAC,KAAAjgB,KAAA+f,GAcvB,SAAAA,EAAYvE,EAAUC,EAAUC,EAAS1M,EAAWkR,EAAmBC,EAAgBvF,GAAQ,IAAAwF,EAAAjgB,cAAAC,KAAA2f,IAC3FK,EAAAH,EAAA5f,KAAAD,KAAMob,EAAUC,EAAUC,EAAS1M,EAAW4L,EAAOyF,QAChDH,kBAAoBA,EACzBE,EAAKD,eAAiBA,EACtBC,EAAKF,kBAAkBI,YAAQxY,KAAAsY,IAAOA,CAC1C,CACA9f,cAAAyf,EAAA,EAAAxf,IAAA,UAAAC,eAjBI,OAAOJ,KAAK6b,QAChB,EAACrM,IACD,SAAYlP,GACRN,KAAK6b,SAAWvb,EACZN,KAAK6b,SACL7b,KAAK8f,kBAAkBI,SAASlgB,MAGhCA,KAAK8f,kBAAkBK,WAAWngB,KAE1C,GAAC,CAAAG,IAAA,UAAAG,MAQD,WACIN,KAAK8f,kBAAkBK,WAAWngB,OAAI,EACtCS,QAAAC,KAAAif,EAAAhf,WAAA,UAAAX,MAAAC,KAAAD,KACJ,GACA,CAAAG,IAAA,UAAAG,MACA,WACIN,KAAK+f,eAAeK,aAAapgB,MACjCA,KAAKqgB,eAAc,EACvB,GACA,CAAAlgB,IAAA,WAAAG,MACA,WACIN,KAAK+f,eAAeO,WAAWtgB,MAC/BA,KAAKqgB,eAAc,EACvB,KAACV,CAAA,CAlCsB,CAASxE,IAsC9BoF,GAA4B,IAAIC,iBAAe,6BAM/CC,GAAmC,WACrC,SAAAA,KAAc1gB,OAAAC,KAAAygB,GAEVzgB,KAAK0gB,UAAY,IACrB,CACAxgB,cAAAugB,EAAA,EAAAtgB,IAAA,eAAAG,MACA,SAAaoe,GAAW,IAAAiC,EAAA3gB,KAEhBA,KAAK0gB,WACLhC,EAAU9P,UAAUwN,oBAAoB,QAASpc,KAAK0gB,WAAW,GAErE1gB,KAAK0gB,UAAY,SAACle,GAAC,OAAKme,EAAKC,WAAWlC,EAAWlc,EAAE,EACrDkc,EAAUpD,QAAQe,kBAAkB,WAChCqC,EAAU9P,UAAU2N,iBAAiB,QAASoE,EAAKD,WAAW,EAClE,EACJ,GACA,CAAAvgB,IAAA,aAAAG,MACA,SAAWoe,GACF1e,KAAK0gB,YAGVhC,EAAU9P,UAAUwN,oBAAoB,QAASpc,KAAK0gB,WAAW,GACjE1gB,KAAK0gB,UAAY,KACrB,GACA,CAAAvgB,IAAA,aAAAG,MAOA,SAAWoe,EAAW5I,GAAO,IAAA+K,EACnBC,EAAShL,EAAMgL,OACfC,EAAgBrC,EAAUtD,SAG5B0F,IAAWC,EAAcC,SAASF,KAA0B,QAAfD,EAACC,EAAOG,eAAO,IAAAJ,IAAdA,EAAA5gB,KAAA6gB,EAAiB,0BAI/DI,WAAW,WAEHxC,EAAUvK,UAAY4M,EAAcC,SAAStC,EAAU9P,UAAUuS,gBACjEzC,EAAU9C,2BAElB,EAER,KAAC6E,CAAA,CA/CoC,GAmDnCW,GAAgB,eAAhBA,EAAgB,WAClB,SAAAA,KAAcrhB,OAAAC,KAAAohB,GAGVphB,KAAKqhB,gBAAkB,EAC3B,CACAnhB,cAAAkhB,EAAA,EAAAjhB,IAAA,WAAAG,MAIA,SAASoe,GAEL1e,KAAKqhB,gBAAkBrhB,KAAKqhB,gBAAgBlY,OAAO,SAAAmY,GAAE,OAAIA,IAAO5C,CAAS,GACzE,IAAI6C,EAAQvhB,KAAKqhB,gBACbE,EAAM5e,QACN4e,EAAMA,EAAM5e,OAAS,GAAG6e,WAE5BD,EAAMle,KAAKqb,GACXA,EAAU+C,SACd,GACA,CAAAthB,IAAA,aAAAG,MAIA,SAAWoe,GACPA,EAAU8C,WACV,IAAMD,EAAQvhB,KAAKqhB,gBACb1b,EAAI4b,EAAMzP,QAAQ4M,IACd,IAAN/Y,IACA4b,EAAMG,OAAO/b,EAAG,GACZ4b,EAAM5e,QACN4e,EAAMA,EAAM5e,OAAS,GAAG8e,UAGpC,KAACL,CAAA,CAlCiB,GAAhBA,SAmCYtO,UAAI,SAAAC,GAAA,WAAAA,GAAwFqO,EAAgB,EAnCxHA,EAoCYjO,WAvoCkFH,+BAAE,CAAAI,MAuoCYgO,EAAgB/N,QAAhB+N,EAAgBtO,UAAAQ,WAAc,SApC1I8N,CAAgB,IA4ChBO,GAA4B,eAA5BA,EAA4B,WAC9B,SAAAA,EAAYtG,EAAUC,EAASwE,EAAmBlR,EAAWmR,IAAgBhgB,OAAAC,KAAA2hB,GACzE3hB,KAAKqb,SAAWA,EAChBrb,KAAKsb,QAAUA,EACftb,KAAK8f,kBAAoBA,EACzB9f,KAAK4O,UAAYA,EAEjB5O,KAAK+f,eAAiBA,GAAkB,IAAIU,EAChD,CAACvgB,cAAAyhB,EAAA,EAAAxhB,IAAA,SAAAG,MACD,SAAOsR,GAAoC,IAA3B4I,EAAMnW,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAE4b,OAAO,GAE9B,OAMO,IAAIN,GAAsB/N,EAAS5R,KAAKqb,SAAUrb,KAAKsb,QAAStb,KAAK4O,UAAW5O,KAAK8f,kBAAmB9f,KAAK+f,eAN9F,kBAAXvF,EACQ,CAAEyF,MAAOzF,GAGTA,EAGvB,KAACmH,CAAA,CAlB6B,GAA5BA,SAmBY7O,UAAI,SAAAC,GAAA,WAAAA,GAAwF4O,GAlqCV3O,qBAkqCwD8F,GAlqCxD9F,qBAkqCyFA,UAlqCzFA,qBAkqC+GoO,IAlqC/GpO,qBAkqC4IC,YAlqC5ID,qBAkqCiKuN,GAAyB,KAnBxRoB,EAoBYxO,WAnqCkFH,+BAAE,CAAAI,MAmqCYuO,EAA4BtO,QAA5BsO,EAA4B7O,UAAAQ,WAAc,SApBtJqO,CAA4B,IAoClC,SAASC,GAAgC9L,GAQrC,OAAyB,IAAlBA,EAAM+L,SAAoC,IAAlB/L,EAAMgM,SAAmC,IAAlBhM,EAAMiM,OAChE,CAEA,SAASC,GAAiClM,GACtC,IAAMmM,EAASnM,EAAMoM,SAAWpM,EAAMoM,QAAQ,IAAQpM,EAAMqM,gBAAkBrM,EAAMqM,eAAe,GAKnG,SAAUF,IACe,IAArBA,EAAMG,YACY,MAAjBH,EAAMI,SAAqC,IAAlBJ,EAAMI,SACd,MAAjBJ,EAAMK,SAAqC,IAAlBL,EAAMK,QACxC,CAMA,IAAMC,GAAkC,IAAI/B,iBAAe,uCAiBrDgC,GAA0C,CAC5CC,WAAY,CAACC,MAAKC,UAASC,WAAUC,OAAMC,UAczCC,GAA+BC,qCAAgC,CACjEC,SAAS,EACTC,SAAS,IAgBPC,GAAqB,eAArBA,EAAqB,WAKvB,SAAAA,EAAYtU,EAAWuU,EAAQC,EAAU1G,GAAS,IAAA2G,EAAAtjB,MAAAD,OAAAC,KAAAmjB,GAC9CnjB,KAAK6O,UAAYA,EAKjB7O,KAAKujB,kBAAoB,KAEzBvjB,KAAKwjB,UAAY,IAAIhkB,IAAgB,MAKrCQ,KAAKyjB,aAAe,EAKpBzjB,KAAK0jB,WAAa,SAAC5N,GAAU,IAAA6N,EAAAC,EAGR,QAAjBD,EAAIL,EAAKO,gBAAQ,IAAAF,GAAY,QAAZC,EAAbD,EAAelB,kBAAU,IAAAmB,GAAzBA,EAA2B1R,KAAK,SAAA6D,GAAO,OAAIA,IAAYD,EAAMC,OAAO,KAGxEuN,EAAKE,UAAU3iB,KAAK,YACpByiB,EAAKC,qBAAoBO,mBAAgBhO,GAC7C,EAKA9V,KAAK+jB,aAAe,SAACjO,GAIb5I,KAAK1E,MAAQ8a,EAAKG,aA/DV,MAoEZH,EAAKE,UAAU3iB,KAAK+gB,GAAgC9L,GAAS,WAAa,SAC1EwN,EAAKC,qBAAoBO,mBAAgBhO,GAC7C,EAKA9V,KAAKgkB,cAAgB,SAAClO,GAGdkM,GAAiClM,GACjCwN,EAAKE,UAAU3iB,KAAK,aAKxByiB,EAAKG,aAAevW,KAAK1E,MACzB8a,EAAKE,UAAU3iB,KAAK,SACpByiB,EAAKC,qBAAoBO,mBAAgBhO,GAC7C,EACA9V,KAAK6jB,YAAQI,aAAA,GACNzB,IACA7F,GAGP3c,KAAKkkB,iBAAmBlkB,KAAKwjB,UAAUje,QAAKkE,KAAK,IACjDzJ,KAAKmkB,gBAAkBnkB,KAAKkkB,iBAAiB3e,QAAKkD,QAG9CoG,EAAU6C,WACV0R,EAAO/G,kBAAkB,WACrBgH,EAAS9G,iBAAiB,UAAW+G,EAAKI,WAAYX,GACtDM,EAAS9G,iBAAiB,YAAa+G,EAAKS,aAAchB,GAC1DM,EAAS9G,iBAAiB,aAAc+G,EAAKU,cAAejB,EAChE,EAER,CAAC7iB,cAAAijB,EAAA,EAAAhjB,IAAA,qBAAAC,eA9EG,OAAOJ,KAAKwjB,UAAUljB,KAC1B,GAAC,CAAAH,IAAA,cAAAG,MA8ED,WACIN,KAAKwjB,UAAUzgB,WACX/C,KAAK6O,UAAU6C,YACf2R,SAASjH,oBAAoB,UAAWpc,KAAK0jB,WAAYX,GACzDM,SAASjH,oBAAoB,YAAapc,KAAK+jB,aAAchB,GAC7DM,SAASjH,oBAAoB,aAAcpc,KAAKgkB,cAAejB,GAEvE,KAACI,CAAA,CAzFsB,GAArBA,SA0FYrQ,UAAI,SAAAC,GAAA,WAAAA,GAAwFoQ,GA11CVnQ,qBA01CiDE,YA11CjDF,qBA01CyEA,UA11CzEA,qBA01C+FC,YA11C/FD,qBA01CoHuP,GAA+B,KA1FjPY,EA2FYhQ,WA31CkFH,+BAAE,CAAAI,MA21CY+P,EAAqB9P,QAArB8P,EAAqBrQ,UAAAQ,WAAc,SA3F/I6P,CAAqB,IA0GrBiB,GAA+B,IAAI5D,iBAAe,uBAAwB,CAC5ElN,WAAY,OACZD,QAASgR,KAGb,SAASA,KACL,OAAO,IACX,CAEA,IAAMC,GAAiC,IAAI9D,iBAAe,kCAEtD+D,GAAY,EACVC,GAAa,eAAbA,EAAa,WACf,SAAAA,EAAYC,EAAcnJ,EAAS1M,EAAW8V,IAAiB3kB,OAAAC,KAAAwkB,GAC3DxkB,KAAKsb,QAAUA,EACftb,KAAK0kB,gBAAkBA,EAIvB1kB,KAAK4O,UAAYA,EACjB5O,KAAK2kB,aAAeF,GAAgBzkB,KAAK4kB,oBAC7C,CAAC1kB,cAAAskB,EAAA,EAAArkB,IAAA,WAAAG,MACD,SAASe,GAGQ,QADTwjB,EACAC,EAHmBC,EAAA/kB,KACjBglB,EAAiBhlB,KAAK0kB,gBAEfhe,EAAArC,UAAA1B,OAHIgE,EAAI,IAAA5E,MAAA2E,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,EAAA,GAAAvC,UAAAuC,GAIrB,OAAoB,IAAhBD,EAAKhE,QAAmC,iBAAZgE,EAAK,GACjCme,EAAWne,EAAK,IAGfke,EAAwBle,EAAI,GAAhBme,EAAYne,EAAI,IAEjC3G,KAAK2Q,QACLsU,aAAajlB,KAAKklB,kBACbL,IACDA,EACIG,GAAkBA,EAAeH,WAAaG,EAAeH,WAAa,UAElE,MAAZC,GAAoBE,IACpBF,EAAWE,EAAeF,UAG9B9kB,KAAK2kB,aAAa7T,aAAa,YAAa+T,GACxC7kB,KAAK2kB,aAAa/Y,IAClB5L,KAAKmlB,yBAAyBnlB,KAAK2kB,aAAa/Y,IAO7C5L,KAAKsb,QAAQe,kBAAkB,WAClC,OAAK0I,EAAKK,kBACNL,EAAKK,gBAAkB,IAAIvI,QAAQ,SAAAC,IAAO,OAAKiI,EAAKM,gBAAkBvI,EAAO,IAEjFmI,aAAaF,EAAKG,kBAClBH,EAAKG,iBAAmBhE,WAAW,WAC/B6D,EAAKJ,aAAa9T,YAAcxP,EACR,iBAAbyjB,IACPC,EAAKG,iBAAmBhE,WAAW,kBAAM6D,EAAKpU,OAAO,EAAEmU,IAE3DC,EAAKM,kBACLN,EAAKK,gBAAkBL,EAAKM,qBAAkB/gB,CAClD,EAAG,KACIygB,EAAKK,eAChB,EACJ,GACA,CAAAjlB,IAAA,QAAAG,MAKA,WACQN,KAAK2kB,eACL3kB,KAAK2kB,aAAa9T,YAAc,GAExC,GAAC,CAAA1Q,IAAA,cAAAG,MACD,WAAc,IAAAglB,EAAAC,EACVN,aAAajlB,KAAKklB,kBACD,QAAjBI,EAAAtlB,KAAK2kB,oBAAY,IAAAW,GAAjBA,EAAmBjV,SACnBrQ,KAAK2kB,aAAe,KACA,QAApBY,EAAAvlB,KAAKqlB,uBAAe,IAAAE,GAApBA,EAAAtlB,KAAAD,MACAA,KAAKolB,gBAAkBplB,KAAKqlB,qBAAkB/gB,CAClD,GAAC,CAAAnE,IAAA,qBAAAG,MACD,WAKI,QAJMklB,EAAe,6BACfC,EAAmBzlB,KAAK4O,UAAU8W,uBAAuBF,GACzDG,EAAS3lB,KAAK4O,UAAUgC,cAAc,OAEnCjL,EAAI,EAAGA,EAAI8f,EAAiB9iB,OAAQgD,IACzC8f,EAAiB9f,GAAG0K,SAExBsV,SAAOlU,UAAUjN,IAAIghB,GACrBG,EAAOlU,UAAUjN,IAAI,uBACrBmhB,EAAO7U,aAAa,cAAe,QACnC6U,EAAO7U,aAAa,YAAa,UACjC6U,EAAO/Z,GAAE,sBAAAR,OAAyBmZ,MAClCvkB,KAAK4O,UAAU+C,KAAKX,YAAY2U,GACzBA,CACX,GACA,CAAAxlB,IAAA,2BAAAG,MAKA,SAAyBsL,GAKrB,QADMga,EAAS5lB,KAAK4O,UAAU4B,iBAAiB,qDACtC7K,EAAI,EAAGA,EAAIigB,EAAOjjB,OAAQgD,IAAK,CACpC,IAAMkgB,EAAQD,EAAOjgB,GACfmgB,EAAWD,EAAMxX,aAAa,aAC/ByX,GAG6B,IAAzBA,EAAShU,QAAQlG,IACtBia,EAAM/U,aAAa,YAAagV,EAAW,IAAMla,GAHjDia,EAAM/U,aAAa,YAAalF,EAAE,CAM9C,KAAC4Y,CAAA,CA5Gc,GAAbA,SA6GY1R,UAAI,SAAAC,GAAA,WAAAA,GAAwFyR,GAn+CVxR,qBAm+CyCoR,GAA4B,GAn+CrEpR,qBAm+CkGA,UAn+ClGA,qBAm+CwHC,YAn+CxHD,qBAm+C6IsR,GAA8B,KA7GzQE,EA8GYrR,WAp+CkFH,+BAAE,CAAAI,MAo+CYoR,EAAanR,QAAbmR,EAAa1R,UAAAQ,WAAc,SA9GvIkR,CAAa,IAqIbuB,GAAW,eAAXA,EAAW,WA4Bb,SAAAA,EAAYxH,EAAayH,EAAgBC,EAAkB3K,IAASvb,OAAAC,KAAA+lB,GAChE/lB,KAAKue,YAAcA,EACnBve,KAAKgmB,eAAiBA,EACtBhmB,KAAKimB,iBAAmBA,EACxBjmB,KAAKsb,QAAUA,EACftb,KAAKkmB,YAAc,QACvB,CAAChmB,cAAA6lB,EAAA,EAAA5lB,IAAA,aAAAC,eA/BG,OAAOJ,KAAKkmB,WAChB,EAAC1W,IACD,SAAelP,GAAO,IAAA6lB,EAAAnmB,KAClBA,KAAKkmB,YAAwB,QAAV5lB,GAA6B,cAAVA,EAAwBA,EAAQ,SAC7C,QAArBN,KAAKkmB,YACDlmB,KAAKomB,gBACLpmB,KAAKomB,cAAcxe,cACnB5H,KAAKomB,cAAgB,MAGnBpmB,KAAKomB,gBACXpmB,KAAKomB,cAAgBpmB,KAAKsb,QAAQe,kBAAkB,WAChD,OAAO8J,EAAKF,iBAAiBI,QAAQF,EAAK5H,aAAava,UAAU,WAE7D,IAAMsiB,EAAcH,EAAK5H,YAAYI,cAAc9N,YAG/CyV,IAAgBH,EAAKI,yBACrBJ,EAAKH,eAAeQ,SAASF,EAAaH,EAAKD,YAAaC,EAAKrB,UACjEqB,EAAKI,uBAAyBD,EAEtC,EACJ,GAER,GAAC,CAAAnmB,IAAA,cAAAG,MAQD,WACQN,KAAKomB,eACLpmB,KAAKomB,cAAcxe,aAE3B,KAACme,CAAA,CAvCY,GAAXA,SAwCYjT,UAAI,SAAAC,GAAA,WAAAA,GAAwFgT,GAniDV/S,8BAmiDuCA,cAniDvCA,8BAmiDiEwR,IAniDjExR,8BAmiD2FyT,mBAniD3FzT,8BAmiD4HA,UAAS,EAxCnO+S,EAyCYzG,UApiDkFtM,8BAAE,CAAAqH,KAoiDJ0L,EAAWxG,UAAA,wBAAAC,OAAA,CAAAqF,WAAA,6BAAAC,SAAA,oCAAArF,SAAA,kBAzCvGsG,CAAW,IA0DXW,GAAgC,IAAIlG,iBAAe,qCAKnDmG,GAA8B3D,qCAAgC,CAChEC,SAAS,EACTC,SAAS,IAGP0D,GAAY,eAAZA,EAAY,WACd,SAAAA,EAAYtL,EAASzM,EAAWgY,EAEhCxD,EAAU1G,GAAS,IAAAmK,EAAA9mB,MAAAD,OAAAC,KAAA4mB,GACf5mB,KAAKsb,QAAUA,EACftb,KAAK6O,UAAYA,EACjB7O,KAAK6mB,uBAAyBA,EAE9B7mB,KAAKyY,QAAU,KAEfzY,KAAK+mB,gBAAiB,EAKtB/mB,KAAKgnB,6BAA8B,EAEnChnB,KAAKinB,aAAe,IAAIlY,IAExB/O,KAAKknB,uBAAyB,EAO9BlnB,KAAKmnB,4BAA8B,IAAIpY,IAKvC/O,KAAKonB,qBAAuB,WAGxBN,EAAKC,gBAAiB,EACtBD,EAAKO,sBAAwB9N,OAAO2H,WAAW,kBAAO4F,EAAKC,gBAAiB,CAAK,EACrF,EAEA/mB,KAAKsnB,2BAA6B,IAAIrmB,IAKtCjB,KAAKunB,8BAAgC,SAACzR,GAGlC,QAASlE,GAFHkP,EAASgD,mBAAgBhO,GAEJlE,EAASA,EAAUA,EAAQ4V,cAC/B,UAAf1R,EAAMuE,KACNyM,EAAKW,SAAS3R,EAAOlE,GAGrBkV,EAAKY,QAAQ5R,EAAOlE,EAGhC,EACA5R,KAAK4O,UAAYyU,EACjBrjB,KAAK2nB,eAAiBhL,GAASiL,eAAiB,CACpD,CAAC1nB,cAAA0mB,EAAA,EAAAzmB,IAAA,UAAAG,MACD,SAAQsR,GAAgC,IAAvBiW,EAAaxjB,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,IAAAA,UAAA,GACpBsa,KAAgBmJ,iBAAclW,GAEpC,IAAK5R,KAAK6O,UAAU6C,WAAwC,IAA3BiN,EAAc/L,SAC3C,SAAOnM,MAAG,MAKd,IAAMshB,KAAWC,kBAAerJ,IAAkB3e,KAAKioB,eACjDC,EAAaloB,KAAKinB,aAAa7mB,IAAIue,GAEzC,GAAIuJ,EACA,OAAIL,IAIAK,EAAWL,eAAgB,GAExBK,EAAWvmB,QAGtB,IAAMwmB,EAAO,CACTN,cAAeA,EACflmB,QAAS,IAAIV,IACb8mB,YAEJ,OAAA/nB,KAAKinB,aAAazX,IAAImP,EAAewJ,GACrCnoB,KAAKooB,yBAAyBD,GACvBA,EAAKxmB,OAChB,GAAC,CAAAxB,IAAA,iBAAAG,MACD,SAAesR,GACX,IAAM+M,KAAgBmJ,iBAAclW,GAC9ByW,EAAcroB,KAAKinB,aAAa7mB,IAAIue,GACtC0J,IACAA,EAAY1mB,QAAQoB,WACpB/C,KAAKsoB,YAAY3J,GACjB3e,KAAKinB,aAAY9V,OAAQwN,GACzB3e,KAAKuoB,uBAAuBF,GAEpC,GAAC,CAAAloB,IAAA,WAAAG,MACD,SAASsR,EAAS8G,EAAQiE,GAAS,IAAA6L,EAAAxoB,KACzB2e,KAAgBmJ,iBAAclW,GAKhC+M,IAJmB3e,KAAKioB,eAAe9G,cAKvCnhB,KAAKyoB,wBAAwB9J,GAAe+J,QAAQ,SAAAC,GAAA,IAAAC,KAAAC,KAAAF,EAAA,GAAsB,OAAMH,EAAKM,eAAjBF,EAAA,GAAgDlQ,EAA1CkQ,EAAA,GAAuD,IAGjI5oB,KAAK+oB,WAAWrQ,GAEmB,mBAAxBiG,EAAchG,OACrBgG,EAAchG,MAAMgE,GAGhC,GAAC,CAAAxc,IAAA,cAAAG,MACD,WAAc,IAAA0oB,EAAAhpB,KACVA,KAAKinB,aAAayB,QAAQ,SAACO,EAAOrX,GAAO,OAAKoX,EAAKE,eAAetX,EAAQ,EAC9E,GACA,CAAAzR,IAAA,eAAAG,MACA,WACI,OAAON,KAAK4O,WAAayU,QAC7B,GACA,CAAAljB,IAAA,aAAAG,MACA,WAEI,OADYN,KAAKioB,eACNtO,aAAeJ,MAC9B,GAAC,CAAApZ,IAAA,kBAAAG,MACD,SAAgB6oB,GACZ,OAAInpB,KAAKyY,QAGDzY,KAAKgnB,4BACEhnB,KAAKopB,2BAA2BD,GAAoB,QAAU,UAG9DnpB,KAAKyY,QAYhBzY,KAAK+mB,gBAAkB/mB,KAAKqpB,iBACrBrpB,KAAKqpB,iBAMZF,GAAoBnpB,KAAKspB,iCAAiCH,GACnD,QAEJ,SACX,GACA,CAAAhpB,IAAA,6BAAAG,MAQA,SAA2B6oB,GAWvB,OAAgC,IAAxBnpB,KAAK2nB,kBACS,MAAhBwB,MAAkBnI,SAAShhB,KAAK6mB,uBAAuBtD,mBACjE,GACA,CAAApjB,IAAA,cAAAG,MAKA,SAAYsR,EAAS8G,GACjB9G,EAAQH,UAAU8X,OAAO,gBAAiB7Q,GAC1C9G,EAAQH,UAAU8X,OAAO,oBAAgC,UAAX7Q,GAC9C9G,EAAQH,UAAU8X,OAAO,uBAAmC,aAAX7Q,GACjD9G,EAAQH,UAAU8X,OAAO,oBAAgC,UAAX7Q,GAC9C9G,EAAQH,UAAU8X,OAAO,sBAAkC,YAAX7Q,EACpD,GACA,CAAAvY,IAAA,aAAAG,MAOA,SAAWoY,GAAmC,IAAA8Q,EAAAxpB,KAA3BypB,EAAiBplB,UAAA1B,OAAA,QAAA2B,IAAAD,UAAA,IAAAA,UAAA,GAChCrE,KAAKsb,QAAQe,kBAAkB,WAC3BmN,EAAK/Q,QAAUC,EACf8Q,EAAKxC,4BAAyC,UAAXtO,GAAsB+Q,EAM7B,IAAxBD,EAAK7B,iBACL1C,aAAauE,EAAKE,kBAElBF,EAAKE,iBAAmBxI,WAAW,kBAAOsI,EAAK/Q,QAAU,IAAI,EADlD+Q,EAAKxC,4BA1iBR,IA0iBwD,GAGxE,EACJ,GACA,CAAA7mB,IAAA,WAAAG,MAKA,SAASwV,EAAOlE,GAOZ,IAAMyW,EAAcroB,KAAKinB,aAAa7mB,IAAIwR,GACpCuX,KAAmBrF,mBAAgBhO,IACpCuS,IAAiBA,EAAYR,eAAiBjW,IAAYuX,GAG/DnpB,KAAK8oB,eAAelX,EAAS5R,KAAK2pB,gBAAgBR,GAAmBd,EACzE,GACA,CAAAloB,IAAA,UAAAG,MAKA,SAAQwV,EAAOlE,GAGX,IAAMyW,EAAcroB,KAAKinB,aAAa7mB,IAAIwR,IACrCyW,GACAA,EAAYR,eACT/R,EAAM8T,yBAAyBC,MAC/BjY,EAAQoP,SAASlL,EAAM8T,iBAG/B5pB,KAAKsoB,YAAY1W,GACjB5R,KAAK8pB,YAAYzB,EAAa,MAClC,GAAC,CAAAloB,IAAA,cAAAG,MACD,SAAY6nB,EAAMzP,GACVyP,EAAKxmB,QAAQH,UAAUmB,QACvB3C,KAAKsb,QAAQyO,IAAI,kBAAM5B,EAAKxmB,QAAQd,KAAK6X,EAAO,EAExD,GAAC,CAAAvY,IAAA,2BAAAG,MACD,SAAyB+nB,GAAa,IAAA2B,EAAAhqB,KAClC,GAAKA,KAAK6O,UAAU6C,UAGpB,KAAMqW,EAAWM,EAAYN,SACvBkC,EAAyBjqB,KAAKmnB,4BAA4B/mB,IAAI2nB,IAAa,EAC5EkC,GACDjqB,KAAKsb,QAAQe,kBAAkB,WAC3B0L,EAASxL,iBAAiB,QAASyN,EAAKzC,8BAA+BZ,GACvEoB,EAASxL,iBAAiB,OAAQyN,EAAKzC,8BAA+BZ,EAC1E,GAEJ3mB,KAAKmnB,4BAA4B3X,IAAIuY,EAAUkC,EAAyB,GAElC,KAAhCjqB,KAAKknB,yBAGPlnB,KAAKsb,QAAQe,kBAAkB,WACZ2N,EAAKE,aACb3N,iBAAiB,QAASyN,EAAK5C,qBAC1C,GAEApnB,KAAK6mB,uBAAuB3C,iBACvB3e,QAAKuE,KAAU9J,KAAKsnB,6BACpBtjB,UAAU,SAAAmmB,GACXH,EAAKjB,WAAWoB,GAAU,EAC9B,GAAC,CAET,GAAC,CAAAhqB,IAAA,yBAAAG,MACD,SAAuB+nB,GACnB,IAAMN,EAAWM,EAAYN,SAC7B,GAAI/nB,KAAKmnB,4BAA4BxX,IAAIoY,GAAW,CAChD,IAAMkC,EAAyBjqB,KAAKmnB,4BAA4B/mB,IAAI2nB,GAChEkC,EAAyB,EACzBjqB,KAAKmnB,4BAA4B3X,IAAIuY,EAAUkC,EAAyB,IAGxElC,EAAS3L,oBAAoB,QAASpc,KAAKunB,8BAA+BZ,GAC1EoB,EAAS3L,oBAAoB,OAAQpc,KAAKunB,8BAA+BZ,GACzE3mB,KAAKmnB,4BAA2BhW,OAAQ4W,GAAQ,GAIjD/nB,KAAKknB,yBACOlnB,KAAKkqB,aACb9N,oBAAoB,QAASpc,KAAKonB,sBAEzCpnB,KAAKsnB,2BAA2BzmB,OAEhCokB,aAAajlB,KAAKqnB,uBAClBpC,aAAajlB,KAAK0pB,kBAE1B,GACA,CAAAvpB,IAAA,iBAAAG,MACA,SAAesR,EAAS8G,EAAQ2P,GAC5BroB,KAAKsoB,YAAY1W,EAAS8G,GAC1B1Y,KAAK8pB,YAAYzB,EAAa3P,GAC9B1Y,KAAKqpB,iBAAmB3Q,CAC5B,GACA,CAAAvY,IAAA,0BAAAG,MAKA,SAAwBsR,GACpB,IAAMwY,EAAU,GAChB,OAAApqB,KAAKinB,aAAayB,QAAQ,SAACP,EAAMkC,IACzBA,IAAmBzY,GAAYuW,EAAKN,eAAiBwC,EAAerJ,SAASpP,KAC7EwY,EAAQ/mB,KAAK,CAACgnB,EAAgBlC,GAEtC,GACOiC,CACX,GACA,CAAAjqB,IAAA,mCAAAG,MAKA,SAAiC6oB,GAC7B,IAAAmB,EAAoEtqB,KAAK6mB,uBAA9C0D,EAAgBD,EAAnC/G,kBAIR,GAA2B,UAJoC+G,EAAlBE,qBAKxCD,GACDA,IAAqBpB,GACU,UAA9BA,EAAiBrP,UAAsD,aAA9BqP,EAAiBrP,UAC3DqP,EAAiB5U,SACjB,OAAO,EAEX,IAAMkW,EAAStB,EAAiBsB,OAChC,GAAIA,EACA,QAAS9kB,EAAI,EAAGA,EAAI8kB,EAAO9nB,OAAQgD,IAC/B,GAAI8kB,EAAO9kB,GAAGqb,SAASuJ,GACnB,OAAO,EAInB,OAAO,CACX,KAAC3D,CAAA,CAtWa,GAAZA,SAuWY9T,UAAI,SAAAC,GAAA,WAAAA,GAAwF6T,GAt6DV5T,qBAs6DwCA,UAt6DxCA,qBAs6D8DE,YAt6D9DF,qBAs6DsFmQ,IAt6DtFnQ,qBAs6DwHC,WAAQ,GAt6DhID,qBAs6D6J0T,GAA6B,KAvWxRE,EAwWYzT,WAv6DkFH,+BAAE,CAAAI,MAu6DYwT,EAAYvT,QAAZuT,EAAY9T,UAAAQ,WAAc,SAxWtIsT,CAAY,IAiYZ8D,GAAe,eAAfA,EAAe,WACjB,SAAAA,EAAYnM,EAAaoM,IAAe5qB,OAAAC,KAAA0qB,GACpC1qB,KAAKue,YAAcA,EACnBve,KAAK2qB,cAAgBA,EACrB3qB,KAAK4qB,aAAe,KACpB5qB,KAAK6qB,eAAiB,IAAIC,cAC9B,CAAC5qB,cAAAwqB,EAAA,EAAAvqB,IAAA,cAAAC,IACD,WACI,OAAOJ,KAAK4qB,YAChB,GAAC,CAAAzqB,IAAA,kBAAAG,MACD,WAAkB,IAAAyqB,EAAA/qB,KACR4R,EAAU5R,KAAKue,YAAYI,cACjC3e,KAAKgrB,qBAAuBhrB,KAAK2qB,cAC5BM,QAAQrZ,EAA8B,IAArBA,EAAQgB,UAAkBhB,EAAQmH,aAAa,2BAChE/U,UAAU,SAAA0U,GACXqS,EAAKH,aAAelS,EACpBqS,EAAKF,eAAexiB,KAAKqQ,EAC7B,EACJ,GAAC,CAAAvY,IAAA,cAAAG,MACD,WACIN,KAAK2qB,cAAczB,eAAelpB,KAAKue,aACnCve,KAAKgrB,sBACLhrB,KAAKgrB,qBAAqBpjB,aAElC,KAAC8iB,CAAA,CAxBgB,GAAfA,SAyBY5X,UAAI,SAAAC,GAAA,WAAAA,GAAwF2X,GAz9DV1X,8BAy9D2CA,cAz9D3CA,8BAy9DqE4T,IAAY,EAzB/K8D,EA0BYpL,UA19DkFtM,8BAAE,CAAAqH,KA09DJqQ,EAAenL,UAAA,oEAAA2L,QAAA,CAAAL,eAAA,kBAAApL,SAAA,sBA1B3GiL,CAAe,IAuCfS,GAA2B,mCAE3BC,GAA2B,mCAE3BC,GAAsC,2BAYtCC,GAAwB,eAAxBA,EAAwB,WAC1B,SAAAA,EAAYzc,EAAWwU,GAAU,IAAAkI,EAAAvrB,MAAAD,OAAAC,KAAAsrB,GAC7BtrB,KAAK6O,UAAYA,EACjB7O,KAAK4O,UAAYyU,EACjBrjB,KAAKwrB,2BAA0Bvc,UAAOwc,sBACjCpF,QAAQ,2BACRriB,UAAU,WACPunB,EAAKG,8BACLH,EAAKG,6BAA8B,EACnCH,EAAKI,uCAEb,EACJ,CACAzrB,cAAAorB,EAAA,EAAAnrB,IAAA,sBAAAG,MACA,WACI,IAAKN,KAAK6O,UAAU6C,UAChB,OAAO,EAKX,IAAMka,EAAc5rB,KAAK4O,UAAUgC,cAAc,OACjDgb,EAAYra,MAAMsa,gBAAkB,aACpCD,EAAYra,MAAMua,SAAW,WAC7B9rB,KAAK4O,UAAU+C,KAAKX,YAAY4a,GAKhC,IAAMG,EAAiB/rB,KAAK4O,UAAU+K,aAAeJ,OAC/CyS,EAAgBD,GAAkBA,EAAe3S,iBACjD2S,EAAe3S,iBAAiBwS,GAChC,KACAK,GAAkBD,GAAiBA,EAAcH,iBAAoB,IAAIK,QAAQ,KAAM,IAE7F,OADAN,EAAYvb,SACJ4b,GAEJ,IAAK,aAEL,IAAK,gBACL,IAAK,gBACD,OAAO,EAEX,IAAK,mBAEL,IAAK,mBACD,OAAO,EAEf,OAAO,CACX,GAAC,CAAA9rB,IAAA,cAAAG,MACD,WACIN,KAAKwrB,wBAAwB5jB,aACjC,GACA,CAAAzH,IAAA,uCAAAG,MACA,WACI,IAAKN,KAAK0rB,6BAA+B1rB,KAAK6O,UAAU6C,WAAa1R,KAAK4O,UAAU+C,KAAM,CACtF,IAAMwa,EAAcnsB,KAAK4O,UAAU+C,KAAKF,UACxC0a,EAAY9b,OAAOgb,GAAqCF,GAA0BC,IAClFprB,KAAK0rB,6BAA8B,EACnC,IAAMU,EAAOpsB,KAAKqsB,sBACL,IAATD,EACAD,EAAY3nB,IAAI6mB,GAAqCF,IAEvC,IAATiB,GACLD,EAAY3nB,IAAI6mB,GAAqCD,GAAwB,CAGzF,KAACE,CAAA,CAnEyB,GAAxBA,SAoEYxY,UAAI,SAAAC,GAAA,WAAAA,GAAwFuY,GA3jEVtY,qBA2jEoDE,YA3jEpDF,qBA2jE4EC,YAAQ,EApElLqY,EAqEYnY,WA5jEkFH,+BAAE,CAAAI,MA4jEYkY,EAAwBjY,QAAxBiY,EAAwBxY,UAAAQ,WAAc,SArElJgY,CAAwB,IA+ExBgB,GAAU,eAAVA,GAAUpsB,OACZ,SAAAosB,EAAYC,IAA0BxsB,OAAAC,KAAAssB,GAClCC,EAAyBZ,sCAC7B,GAHEW,SAIYxZ,UAAI,SAAAC,GAAA,WAAAA,GAAwFuZ,GA1kEVtZ,qBA0kEsCsY,IAAwB,EAJ5JgB,EAKYE,UA3kEkFxZ,6BAAE,CAAAqH,KA2kESiS,IALzGA,EAMYG,UA5kEkFzZ,6BAAE,CAAA0Z,QAAA,CA4kE+BC,qBAN/HL,CAAU,qBC9zED,SAAAM,EAAAxf,EAAAyf,IACf,MAAAA,KAAAzf,EAAAzK,UAAAkqB,EAAAzf,EAAAzK,QACA,QAAAgD,EAAA,EAAAmnB,EAAA,IAAA/qB,MAAA8qB,GAAyClnB,EAAAknB,EAASlnB,IAAAmnB,EAAAnnB,GAAAyH,EAAAzH,GAClD,OAAAmnB,CACA,kCCJe,SAAAC,EAAA3f,GACf,GAAArL,MAAAirB,QAAA5f,GAAA,OAAAA,CACA,mCCFe,SAAA1F,EAAAulB,GACf,YAAAA,EACA,UAAAC,eAAA,6DAEA,OAAAD,CACA,mECJe,SAAA9qB,EAAAgrB,EAAAC,GACf,IAAAC,SAAAtoB,OAAA,KAAAooB,EAAApoB,OAAAD,WAAAqoB,EAAA,cACA,IAAAE,EAAA,CACA,GAAAtrB,MAAAirB,QAAAG,KAAAE,KAAkCC,EAAAhW,GAA0B6V,KAAAC,GAAAD,GAAA,iBAAAA,EAAAxqB,OAAA,CAC5D0qB,IAAAF,EAAAE,GACA,IAAA1nB,EAAA,EACA4nB,EAAA,aACA,OACAnrB,EAAAmrB,EACAlrB,EAAA,WACA,OAAAsD,GAAAwnB,EAAAxqB,OAAA,CACAL,MAAA,GAEA,CACAA,MAAA,EACAhC,MAAA6sB,EAAAxnB,KAEA,EACAnD,EAAA,SAAAgrB,GACA,MAAAA,CACA,EACAD,EACA,CAEA,UAAAtf,UAAA,yIAEA,IAEA1L,EAFAkrB,GAAA,EACAC,GAAA,EAEA,OACAtrB,EAAA,WACAirB,IAAAptB,KAAAktB,EACA,EACA9qB,EAAA,WACA,IAAAsrB,EAAAN,EAAAxsB,OACA,OAAA4sB,EAAAE,EAAArrB,KACAqrB,CACA,EACAnrB,EAAA,SAAAorB,GACAF,GAAA,EACAnrB,EAAAqrB,CACA,EACAnrB,EAAA,WACA,KACAgrB,GAAA,MAAAJ,EAAAjnB,QAAAinB,EAAAjnB,QACA,SACA,GAAAsnB,EAAA,MAAAnrB,CACA,CACA,EAEA,oFChDe,SAAA3C,EAAAiuB,GACf,IAAAC,KAAkCC,EAAAzW,KAClC,kBACA,IACApS,EADA8oB,KAAgBC,EAAA3W,GAAcuW,GAE9B,GAAAC,EAAA,CACA,IAAAI,KAAsBD,EAAA3W,GAActX,MAAAmuB,YACpCjpB,EAAAkpB,QAAAC,UAAAL,EAAA3pB,UAAA6pB,EAAA,MAEAhpB,EAAA8oB,EAAAjjB,MAAA/K,KAAAqE,WAEA,OCZe,SAAAiqB,EAAArB,EAAAhtB,GACf,GAAAA,IAAsB,YAAtBA,EAAesuB,EAAAjX,GAAOrX,IAAA,mBAAAA,GACtB,OAAAA,EACI,YAAAA,EACJ,UAAAgO,UAAA,4DAEA,SAASugB,EAAAlX,GAAqB2V,EAC9B,CDKWqB,CAAyBtuB,KAAAkF,EACpC,CACA,mDEfe,SAAAupB,EAAAC,EAAAvuB,EAAAG,GACf,OAAAH,KAAQwuB,EAAArX,GAAanX,MACrBuuB,EACAE,OAAAC,eAAAH,EAAAvuB,EAAA,CACAG,QACAwuB,YAAA,EACAC,cAAA,EACAC,UAAA,IAGAN,EAAAvuB,GAAAG,EAEAouB,CACA,kDCbe,SAAAjuB,IACf,OACAA,SADA2tB,QAAA,KAAAA,QAAAhuB,IACAguB,QAAAhuB,IAAA6L,OAEA,SAAA6U,EAAAmO,EAAAC,GACA,IAAAC,ECLe,SAAAC,EAAAC,EAAAJ,GACf,MAAAL,OAAAjuB,UAAA2uB,eAAArvB,KAAAovB,EAAAJ,IAEA,QADAI,KAAapB,EAAA3W,GAAc+X,MAG3B,OAAAA,CACA,CDDiBD,CAAatO,EAAAmO,GAC9B,GAAAE,EACA,KAAAI,EAAAX,OAAAY,yBAAAL,EAAAF,GACA,OAAAM,EAAAnvB,IACAmvB,EAAAnvB,IAAAH,KAAAoE,UAAA1B,OAAA,EAAAme,EAAAoO,GAEAK,EAAAjvB,KAAA,CACA,EAEAG,EAAAsK,MAAA/K,KAAAqE,UACA,mBEhBe,SAAA3D,EAAAysB,GACf,OAAAzsB,EAAAkuB,OAAAa,eAAAb,OAAAX,eAAAhiB,OAAA,SAAAkhB,GACA,OAAAA,EAAAuC,WAAAd,OAAAX,eAAAd,EACA,GACAA,EACA,mECJe,SAAAztB,EAAAiwB,EAAAC,GACf,sBAAAA,GAAA,OAAAA,EACA,UAAA3hB,UAAA,sDAEA0hB,EAAAhvB,UAAAiuB,OAAAjrB,OAAAisB,KAAAjvB,UAAA,CACAwtB,YAAA,CACA7tB,MAAAqvB,EACAX,UAAA,EACAD,cAAA,KAGAH,OAAAC,eAAAc,EAAA,aACAX,UAAA,IAEAY,MAAkBC,EAAAvY,GAAcqY,EAAAC,EAChC,mBChBe,SAAAE,IAEf,UADA1B,QAAA,MAAAA,QAAAC,WACAD,QAAAC,UAAA0B,KAAA,SACA,sBAAAC,MAAA,SACA,IACA,OAAAC,QAAAtvB,UAAAuvB,QAAAjwB,KAAAmuB,QAAAC,UAAA4B,QAAA,mBACA,CACA,OACA,QACA,CACA,kCCVe,SAAAE,EAAAC,GACf,UAAArrB,OAAA,WAAAqrB,EAAArrB,OAAAD,WAAA,MAAAsrB,EAAA,qBAAAruB,MAAAC,KAAAouB,EACA,kCCFe,SAAAC,IACf,UAAApiB,UAAA,4IACA,mECDA,SAAAqiB,EAAAjB,EAAAkB,GACA,IAAApb,EAAAyZ,OAAAzZ,KAAAka,GACA,GAAAT,OAAA4B,sBAAA,CACA,IAAAC,EAAA7B,OAAA4B,sBAAAnB,GACAkB,IAAAE,IAAAtnB,OAAA,SAAAunB,GACA,OAAA9B,OAAAY,yBAAAH,EAAAqB,GAAA5B,UACA,IAAK3Z,EAAA9R,KAAA0H,MAAAoK,EAAAsb,EAAA,CAEL,OAAAtb,CACA,CACe,SAAAwb,EAAA7P,GACf,QAAAnb,EAAA,EAAkBA,EAAAtB,UAAA1B,OAAsBgD,IAAA,CACxC,IAAAjC,EAAA,MAAAW,UAAAsB,GAAAtB,UAAAsB,GAAA,GACAA,EAAA,EAAA2qB,EAAA1B,OAAAlrB,IAAA,GAAAglB,QAAA,SAAAvoB,IACM,EAAAywB,EAAAtZ,GAAcwJ,EAAA3gB,EAAAuD,EAAAvD,GACpB,GAAKyuB,OAAAiC,0BAAAjC,OAAAkC,iBAAAhQ,EAAA8N,OAAAiC,0BAAAntB,IAAA4sB,EAAA1B,OAAAlrB,IAAAglB,QAAA,SAAAvoB,GACLyuB,OAAAC,eAAA/N,EAAA3gB,EAAAyuB,OAAAY,yBAAA9rB,EAAAvD,GACA,EAAK,CAEL,OAAA2gB,CACA,mBCrBe,SAAAiQ,EAAA5D,EAAA6D,GACf,OAAAD,EAAAnC,OAAAa,eAAAb,OAAAa,eAAAxjB,OAAA,SAAAkhB,EAAA6D,GACA,OAAA7D,EAAAuC,UAAAsB,EACA7D,CACA,GACAA,EAAA6D,EACA,uFCFe,SAAAnI,EAAAzb,EAAAzH,GACf,SAASsrB,EAAA3Z,GAAclK,ICLR,SAAA8jB,EAAA9jB,EAAAzH,GACf,IAAAwrB,EAAA,MAAA/jB,EAAA,YAAArI,OAAA,KAAAqI,EAAArI,OAAAD,WAAAsI,EAAA,cACA,SAAA+jB,EAAA,CACA,IAAAC,EACA5D,EACA3iB,EACAwmB,EACAC,EAAA,GACAC,GAAA,EACAC,GAAA,EACA,IACA,GAAA3mB,GAAAsmB,IAAAlxB,KAAAmN,IAAAvM,KAAA,IAAA8E,EAAA,CACA,GAAAipB,OAAAuC,OAAA,OACAI,GAAA,OACQ,OAAYA,GAAAH,EAAAvmB,EAAA5K,KAAAkxB,IAAA7uB,QAAAgvB,EAAAjuB,KAAA+tB,EAAA9wB,OAAAgxB,EAAA3uB,SAAAgD,GAA6E4rB,GAAA,GACjG,OAAMhvB,GACNivB,GAAA,EAAAhE,EAAAjrB,CACA,SACA,IACA,IAAAgvB,GAAA,MAAAJ,EAAA/qB,SAAAirB,EAAAF,EAAA/qB,SAAAwoB,OAAAyC,QAAA,MACA,SACA,GAAAG,EAAA,MAAAhE,CACA,CACA,CACA,OAAA8D,CAAA,CAEA,CDrBgCJ,CAAoB9jB,EAAAzH,KAAA,EAAY8rB,EAAAna,GAA0BlK,EAAAzH,KAAA,EAAY+rB,EAAApa,IACtG,wEEFe,SAAAqa,EAAAvkB,GACf,OCJe,SAAAwkB,EAAAxkB,GACf,GAAArL,MAAAirB,QAAA5f,GAAA,SAAiCykB,EAAAva,GAAgBlK,EACjD,CDESwkB,CAAiBxkB,KAAA,EAAS0kB,EAAAxa,GAAelK,KAAA,EAASqkB,EAAAna,GAA0BlK,IELtE,SAAA2kB,IACf,UAAA9jB,UAAA,uIACA,CFG8F8jB,EAC9F,mDGLe,SAAAC,EAAA7E,EAAA8E,GACf,GAAA9E,EACA,qBAAAA,EAAA,SAAoC+E,EAAA5a,GAAgB6V,EAAA8E,GACpD,IAAA5vB,EAAAusB,OAAAjuB,UAAAqK,SAAA/K,KAAAktB,GAAAgF,MAAA,MAEA,GADA,WAAA9vB,GAAA8qB,EAAAgB,cAAA9rB,EAAA8qB,EAAAgB,YAAA/sB,MACA,QAAAiB,GAAA,QAAAA,EAAA,OAAAN,MAAAC,KAAAmrB,GACA,iBAAA9qB,GAAA,2CAAA+vB,KAAA/vB,GAAA,SAAsF6vB,EAAA5a,GAAgB6V,EAAA8E,EAAA,CACtG","names":["BehaviorSubject","_Subject","_inherits","_super","_createSuper","_value","_this","_classCallCheck","this","call","_createClass","key","get","getValue","value","subscriber","subscription","_get","_getPrototypeOf","prototype","closed","next","hasError","thrownError","_throwIfClosed","Subject","ObjectUnsubscribedError","createErrorClass","name","message","_Observable","currentObservers","observers","isStopped","operator","subject","AnonymousSubject","_this2","errorContext","Array","from","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","_this3","length","shift","error","_this4","complete","_a","_checkFinalizedStatuses","_innerSubscribe","_this5","EMPTY_SUBSCRIPTION","push","Subscription","arrRemove","observable","Observable","source","create","destination","_super2","_this6","_b","subscribe","EMPTY","subscribeOn","scheduler","delay","arguments","undefined","operate","add","schedule","scheduleAsyncIterable","input","Error","executeSchedule","iterator","Symbol","asyncIterator","then","result","scheduled","isInteropObservable","scheduleObservable","innerFrom","pipe","observeOn","isArrayLike","scheduleArray","i","isPromise","schedulePromise","isAsyncIterable","isIterable","scheduleIterable","Symbol_iterator","_iterator$next","isFunction","return","isReadableStreamLike","scheduleReadableStreamLike","readableStreamLikeToAsyncGenerator","createInvalidObservableTypeError","of","_len","args","_key","popScheduler","createOperatorSubscriber","onNext","onComplete","onError","onFinalize","OperatorSubscriber","_Subscriber","shouldUnsubscribe","_thisSuper","_thisSuper2","_thisSuper3","_next","_assertThisInitialized","_error","unsubscribe","_complete","Subscriber","debounceTime","dueTime","asyncScheduler","activeTask","lastValue","lastTime","emit","emitWhenIdle","targetTime","now","distinctUntilChanged","comparator","keySelector","identity","defaultCompare","previousKey","first","currentKey","a","b","filter","predicate","thisArg","index","map","project","skip","count","_","take","seen","takeUntil","notifier","noop","tap","observerOrNext","tapObserver","isUnsub","finalize","Action","_Subscription","work","state","intervalProvider","setInterval","_setInterval","_x","_x2","apply","toString","handler","timeout","delegate","concat","clearInterval","_clearInterval","_x3","handle","AsyncAction","_Action","pending","id","recycleAsyncId","requestAsyncId","_id","flush","bind","_scheduler","_execute","_delay","errorValue","errored","actions","Scheduler","schedulerActionCtor","dateTimestampProvider","AsyncScheduler","_Scheduler","SchedulerAction","_active","action","execute","async","Date","last","arr","popResultSelector","pop","isScheduler","popNumber","defaultValue","parentSubscription","repeat","scheduleSubscription","hasLift","lift","init","liftedSource","TypeError","getAriaReferenceIds","el","attr","getAttribute","match","MESSAGES_CONTAINER_ID","CDK_DESCRIBEDBY_ID_PREFIX","CDK_DESCRIBEDBY_HOST_ATTRIBUTE","nextId","AriaDescriber","_document","_platform","_messageRegistry","Map","_messagesContainer","inject","APP_ID","hostElement","role","_canBeDescribed","getKey","setMessageId","set","messageElement","referenceCount","has","_createMessageElement","_isElementDescribedByMessage","_addMessageReference","_this$_messagesContai","_isElementNode","_removeMessageReference","registeredMessage","_deleteMessageElement","childNodes","remove","_this$_messagesContai2","describedElements","querySelectorAll","_removeCdkDescribedByReferenceIds","removeAttribute","clear","createElement","textContent","setAttribute","_createMessagesContainer","appendChild","_this$_messageRegistr","_this$_messageRegistr2","delete","containerClassName","serverContainers","messagesContainer","style","visibility","classList","isBrowser","body","element","originalReferenceIds","indexOf","join","addAriaReferencedId","ids","some","existingId","trim","removeAriaReferencedId","filteredIds","val","referenceIds","messageId","trimmedMessage","ariaLabel","nodeType","ELEMENT_NODE","ɵfac","t","i0","DOCUMENT","i1","ɵprov","token","factory","providedIn","serviceId","ListKeyManager","_items","_activeItemIndex","_activeItem","_wrap","_letterKeyStream","_typeaheadSubscription","_vertical","_allowedModifierKeys","_homeAndEnd","_pageUpAndDown","enabled","delta","_skipPredicateFn","item","disabled","_pressedLetters","tabOut","change","QueryList","_itemChangesSubscription","changes","newItems","newIndex","toArray","direction","_horizontal","keys","debounceInterval","letter","inputString","items","_getItemsArray","getLabel","toUpperCase","setActiveItem","previousActiveItem","updateActiveItem","event","keyCode","isModifierAllowed","every","modifier","TAB","DOWN_ARROW","setNextItemActive","UP_ARROW","setPreviousItemActive","RIGHT_ARROW","LEFT_ARROW","HOME","setFirstItemActive","END","setLastItemActive","PAGE_UP","targetIndex","_setActiveItemByIndex","PAGE_DOWN","itemsLength","hasModifierKey","toLocaleUpperCase","A","Z","ZERO","NINE","String","fromCharCode","preventDefault","_setActiveItemByDelta","itemArray","_this$_itemChangesSub","_setActiveInWrapMode","_setActiveInDefaultMode","fallbackDelta","ActiveDescendantKeyManager","_ListKeyManager","activeItem","setInactiveStyles","setActiveStyles","FocusKeyManager","_ListKeyManager2","_origin","origin","focus","IsFocusableConfig","ignoreVisibility","InteractivityChecker","hasAttribute","hasGeometry","offsetWidth","offsetHeight","getClientRects","getComputedStyle","frameElement","getFrameElement","window","getWindow","node","ownerDocument","defaultView","getTabIndexValue","isVisible","nodeName","toLowerCase","tabIndexValue","WEBKIT","IOS","isPotentiallyTabbableIOS","inputType","type","FIREFOX","tabIndex","config","isPotentiallyFocusable","isHiddenInput","isInputElement","isNativeFormElement","isAnchorWithHref","isAnchorElement","hasValidTabIndex","isDisabled","isNaN","parseInt","FocusTrap","_element","_checker","_ngZone","deferAnchors","_hasAttached","startAnchorListener","focusLastTabbableElement","endAnchorListener","focusFirstTabbableElement","_enabled","attachAnchors","_startAnchor","_endAnchor","_toggleAnchorTabIndex","startAnchor","endAnchor","removeEventListener","runOutsideAngular","_createAnchor","addEventListener","parentNode","insertBefore","nextSibling","options","_this7","Promise","resolve","_executeOnStable","focusInitialElement","_this8","_this9","bound","markers","_getFirstTabbableElement","_getLastTabbableElement","redirectToElement","querySelector","isFocusable","focusableChild","_getRegionBoundary","root","isTabbable","children","tabbableChild","anchor","isEnabled","fn","isStable","onStable","FocusTrapFactory","CdkTrapFocus","_elementRef","_focusTrapFactory","_previouslyFocusedElement","focusTrap","nativeElement","coerceBooleanProperty","_autoCapture","destroy","autoCapture","_captureFocus","hasAttached","autoCaptureChange","firstChange","_getFocusedElementPierceShadowDom","focusInitialElementWhenReady","ɵdir","selectors","inputs","exportAs","features","ConfigurableFocusTrap","_FocusTrap","_super3","_focusTrapManager","_inertStrategy","_this10","defer","register","deregister","preventFocus","toggleAnchors","allowFocus","FOCUS_TRAP_INERT_STRATEGY","InjectionToken","EventListenerFocusTrapInertStrategy","_listener","_this11","_trapFocus","_target$closest","target","focusTrapRoot","contains","closest","setTimeout","activeElement","FocusTrapManager","_focusTrapStack","ft","stack","_disable","_enable","splice","ConfigurableFocusTrapFactory","isFakeMousedownFromScreenReader","buttons","offsetX","offsetY","isFakeTouchstartFromScreenReader","touch","touches","changedTouches","identifier","radiusX","radiusY","INPUT_MODALITY_DETECTOR_OPTIONS","INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS","ignoreKeys","ALT","CONTROL","MAC_META","META","SHIFT","modalityEventListenerOptions","normalizePassiveListenerOptions","passive","capture","InputModalityDetector","ngZone","document","_this12","_mostRecentTarget","_modality","_lastTouchMs","_onKeydown","_this12$_options","_this12$_options$igno","_options","_getEventTarget","_onMousedown","_onTouchstart","_objectSpread","modalityDetected","modalityChanged","LIVE_ANNOUNCER_ELEMENT_TOKEN","LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY","LIVE_ANNOUNCER_DEFAULT_OPTIONS","uniqueIds","LiveAnnouncer","elementToken","_defaultOptions","_liveElement","_createLiveElement","politeness","duration","_this13","defaultOptions","clearTimeout","_previousTimeout","_exposeAnnouncerToModals","_currentPromise","_currentResolve","_this$_liveElement","_this$_currentResolve","elementClass","previousElements","getElementsByClassName","liveEl","modals","modal","ariaOwns","CdkAriaLive","_liveAnnouncer","_contentObserver","_politeness","_this14","_subscription","observe","elementText","_previousAnnouncedText","announce","i1$1","FOCUS_MONITOR_DEFAULT_OPTIONS","captureEventListenerOptions","FocusMonitor","_inputModalityDetector","_this15","_windowFocused","_originFromTouchInteraction","_elementInfo","_monitoredElementCount","_rootNodeFocusListenerCount","_windowFocusListener","_windowFocusTimeoutId","_stopInputModalityDetector","_rootNodeFocusAndBlurListener","parentElement","_onFocus","_onBlur","_detectionMode","detectionMode","checkChildren","coerceElement","rootNode","_getShadowRoot","_getDocument","cachedInfo","info","_registerGlobalListeners","elementInfo","_setClasses","_removeGlobalListeners","_this16","_getClosestElementsInfo","forEach","_ref","_ref2","_slicedToArray","_originChanged","_setOrigin","_this17","_info","stopMonitoring","focusEventTarget","_shouldBeAttributedToTouch","_lastFocusOrigin","_isLastInteractionFromInputLabel","toggle","_this18","isFromInteraction","_originTimeoutId","_getFocusOrigin","relatedTarget","Node","_emitOrigin","run","_this19","rootNodeFocusListeners","_getWindow","modality","results","currentElement","_this$_inputModalityD","mostRecentTarget","mostRecentModality","labels","CdkMonitorFocus","_focusMonitor","_focusOrigin","cdkFocusChange","EventEmitter","_this20","_monitorSubscription","monitor","outputs","BLACK_ON_WHITE_CSS_CLASS","WHITE_ON_BLACK_CSS_CLASS","HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS","HighContrastModeDetector","_this21","_breakpointSubscription","BreakpointObserver","_hasCheckedHighContrastMode","_applyBodyHighContrastModeCssClasses","testElement","backgroundColor","position","documentWindow","computedStyle","computedColor","replace","bodyClasses","mode","getHighContrastMode","A11yModule","highContrastModeDetector","ɵmod","ɵinj","imports","ObserversModule","_arrayLikeToArray","len","arr2","_arrayWithHoles","isArray","self","ReferenceError","o","allowArrayLike","it","_unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_0__","F","_e","normalCompletion","didErr","step","_e2","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","Super","getPrototypeOf","NewTarget","constructor","Reflect","construct","_possibleConstructorReturn","esm_typeof","assertThisInitialized","_defineProperty","obj","_toPropertyKey_js__WEBPACK_IMPORTED_MODULE_0__","Object","defineProperty","enumerable","configurable","writable","property","receiver","base","_superPropBase","object","hasOwnProperty","desc","getOwnPropertyDescriptor","setPrototypeOf","__proto__","subClass","superClass","_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__","_isNativeReflectConstruct","sham","Proxy","Boolean","valueOf","_iterableToArray","iter","_nonIterableRest","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","_objectSpread2","_defineProperty_js__WEBPACK_IMPORTED_MODULE_0__","getOwnPropertyDescriptors","defineProperties","_setPrototypeOf","p","arrayWithHoles","_iterableToArrayLimit","_i","_s","_r","_arr","_n","_d","unsupportedIterableToArray","nonIterableRest","_toConsumableArray","_arrayWithoutHoles","arrayLikeToArray","iterableToArray","_nonIterableSpread","_unsupportedIterableToArray","minLen","_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_0__","slice","test"],"sourceRoot":"webpack:///","sources":["./node_modules/rxjs/dist/esm/internal/BehaviorSubject.js","./node_modules/rxjs/dist/esm/internal/util/ObjectUnsubscribedError.js","./node_modules/rxjs/dist/esm/internal/Subject.js","./node_modules/rxjs/dist/esm/internal/observable/empty.js","./node_modules/rxjs/dist/esm/internal/operators/subscribeOn.js","./node_modules/rxjs/dist/esm/internal/scheduled/scheduleAsyncIterable.js","./node_modules/rxjs/dist/esm/internal/observable/from.js","./node_modules/rxjs/dist/esm/internal/scheduled/scheduled.js","./node_modules/rxjs/dist/esm/internal/scheduled/scheduleObservable.js","./node_modules/rxjs/dist/esm/internal/scheduled/scheduleArray.js","./node_modules/rxjs/dist/esm/internal/scheduled/schedulePromise.js","./node_modules/rxjs/dist/esm/internal/scheduled/scheduleIterable.js","./node_modules/rxjs/dist/esm/internal/scheduled/scheduleReadableStreamLike.js","./node_modules/rxjs/dist/esm/internal/observable/of.js","./node_modules/rxjs/dist/esm/internal/operators/OperatorSubscriber.js","./node_modules/rxjs/dist/esm/internal/operators/debounceTime.js","./node_modules/rxjs/dist/esm/internal/operators/distinctUntilChanged.js","./node_modules/rxjs/dist/esm/internal/operators/filter.js","./node_modules/rxjs/dist/esm/internal/operators/map.js","./node_modules/rxjs/dist/esm/internal/operators/observeOn.js","./node_modules/rxjs/dist/esm/internal/operators/skip.js","./node_modules/rxjs/dist/esm/internal/operators/take.js","./node_modules/rxjs/dist/esm/internal/operators/takeUntil.js","./node_modules/rxjs/dist/esm/internal/operators/tap.js","./node_modules/rxjs/dist/esm/internal/scheduler/Action.js","./node_modules/rxjs/dist/esm/internal/scheduler/intervalProvider.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncAction.js","./node_modules/rxjs/dist/esm/internal/Scheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncScheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/async.js","./node_modules/rxjs/dist/esm/internal/scheduler/dateTimestampProvider.js","./node_modules/rxjs/dist/esm/internal/util/args.js","./node_modules/rxjs/dist/esm/internal/util/executeSchedule.js","./node_modules/rxjs/dist/esm/internal/util/isScheduler.js","./node_modules/rxjs/dist/esm/internal/util/lift.js","./node_modules/@angular/cdk/fesm2022/a11y.mjs","./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","./node_modules/@babel/runtime/helpers/esm/createSuper.js","./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","./node_modules/@babel/runtime/helpers/esm/defineProperty.js","./node_modules/@babel/runtime/helpers/esm/get.js","./node_modules/@babel/runtime/helpers/esm/superPropBase.js","./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","./node_modules/@babel/runtime/helpers/esm/inherits.js","./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","./node_modules/@babel/runtime/helpers/esm/objectSpread2.js","./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js"],"sourcesContent":["import { Subject } from './Subject';\nexport class BehaviorSubject extends Subject {\n    constructor(_value) {\n        super();\n        this._value = _value;\n    }\n    get value() {\n        return this.getValue();\n    }\n    _subscribe(subscriber) {\n        const subscription = super._subscribe(subscriber);\n        !subscription.closed && subscriber.next(this._value);\n        return subscription;\n    }\n    getValue() {\n        const { hasError, thrownError, _value } = this;\n        if (hasError) {\n            throw thrownError;\n        }\n        this._throwIfClosed();\n        return _value;\n    }\n    next(value) {\n        super.next((this._value = value));\n    }\n}\n","import { createErrorClass } from './createErrorClass';\nexport const ObjectUnsubscribedError = createErrorClass((_super) => function ObjectUnsubscribedErrorImpl() {\n    _super(this);\n    this.name = 'ObjectUnsubscribedError';\n    this.message = 'object unsubscribed';\n});\n","import { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nexport class Subject extends Observable {\n    constructor() {\n        super();\n        this.closed = false;\n        this.currentObservers = null;\n        this.observers = [];\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    lift(operator) {\n        const subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    }\n    _throwIfClosed() {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n    }\n    next(value) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                if (!this.currentObservers) {\n                    this.currentObservers = Array.from(this.observers);\n                }\n                for (const observer of this.currentObservers) {\n                    observer.next(value);\n                }\n            }\n        });\n    }\n    error(err) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.hasError = this.isStopped = true;\n                this.thrownError = err;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().error(err);\n                }\n            }\n        });\n    }\n    complete() {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.isStopped = true;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().complete();\n                }\n            }\n        });\n    }\n    unsubscribe() {\n        this.isStopped = this.closed = true;\n        this.observers = this.currentObservers = null;\n    }\n    get observed() {\n        var _a;\n        return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    _trySubscribe(subscriber) {\n        this._throwIfClosed();\n        return super._trySubscribe(subscriber);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._checkFinalizedStatuses(subscriber);\n        return this._innerSubscribe(subscriber);\n    }\n    _innerSubscribe(subscriber) {\n        const { hasError, isStopped, observers } = this;\n        if (hasError || isStopped) {\n            return EMPTY_SUBSCRIPTION;\n        }\n        this.currentObservers = null;\n        observers.push(subscriber);\n        return new Subscription(() => {\n            this.currentObservers = null;\n            arrRemove(observers, subscriber);\n        });\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, thrownError, isStopped } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped) {\n            subscriber.complete();\n        }\n    }\n    asObservable() {\n        const observable = new Observable();\n        observable.source = this;\n        return observable;\n    }\n}\nSubject.create = (destination, source) => {\n    return new AnonymousSubject(destination, source);\n};\nexport class AnonymousSubject extends Subject {\n    constructor(destination, source) {\n        super();\n        this.destination = destination;\n        this.source = source;\n    }\n    next(value) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n    }\n    error(err) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n    }\n    complete() {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    _subscribe(subscriber) {\n        var _a, _b;\n        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n    }\n}\n","import { Observable } from '../Observable';\nexport const EMPTY = new Observable((subscriber) => subscriber.complete());\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n","import { operate } from '../util/lift';\nexport function subscribeOn(scheduler, delay = 0) {\n    return operate((source, subscriber) => {\n        subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\n    });\n}\n","import { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleAsyncIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    return new Observable((subscriber) => {\n        executeSchedule(subscriber, scheduler, () => {\n            const iterator = input[Symbol.asyncIterator]();\n            executeSchedule(subscriber, scheduler, () => {\n                iterator.next().then((result) => {\n                    if (result.done) {\n                        subscriber.complete();\n                    }\n                    else {\n                        subscriber.next(result.value);\n                    }\n                });\n            }, 0, true);\n        });\n    });\n}\n","import { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\nexport function from(input, scheduler) {\n    return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\nexport function scheduled(input, scheduler) {\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return scheduleObservable(input, scheduler);\n        }\n        if (isArrayLike(input)) {\n            return scheduleArray(input, scheduler);\n        }\n        if (isPromise(input)) {\n            return schedulePromise(input, scheduler);\n        }\n        if (isAsyncIterable(input)) {\n            return scheduleAsyncIterable(input, scheduler);\n        }\n        if (isIterable(input)) {\n            return scheduleIterable(input, scheduler);\n        }\n        if (isReadableStreamLike(input)) {\n            return scheduleReadableStreamLike(input, scheduler);\n        }\n    }\n    throw createInvalidObservableTypeError(input);\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nexport function scheduleObservable(input, scheduler) {\n    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { Observable } from '../Observable';\nexport function scheduleArray(input, scheduler) {\n    return new Observable((subscriber) => {\n        let i = 0;\n        return scheduler.schedule(function () {\n            if (i === input.length) {\n                subscriber.complete();\n            }\n            else {\n                subscriber.next(input[i++]);\n                if (!subscriber.closed) {\n                    this.schedule();\n                }\n            }\n        });\n    });\n}\n","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nexport function schedulePromise(input, scheduler) {\n    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n","import { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleIterable(input, scheduler) {\n    return new Observable((subscriber) => {\n        let iterator;\n        executeSchedule(subscriber, scheduler, () => {\n            iterator = input[Symbol_iterator]();\n            executeSchedule(subscriber, scheduler, () => {\n                let value;\n                let done;\n                try {\n                    ({ value, done } = iterator.next());\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (done) {\n                    subscriber.complete();\n                }\n                else {\n                    subscriber.next(value);\n                }\n            }, 0, true);\n        });\n        return () => isFunction(iterator === null || iterator === void 0 ? void 0 : iterator.return) && iterator.return();\n    });\n}\n","import { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nexport function scheduleReadableStreamLike(input, scheduler) {\n    return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n","import { popScheduler } from '../util/args';\nimport { from } from './from';\nexport function of(...args) {\n    const scheduler = popScheduler(args);\n    return from(args, scheduler);\n}\n","import { Subscriber } from '../Subscriber';\nexport function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {\n    return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\nexport class OperatorSubscriber extends Subscriber {\n    constructor(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {\n        super(destination);\n        this.onFinalize = onFinalize;\n        this.shouldUnsubscribe = shouldUnsubscribe;\n        this._next = onNext\n            ? function (value) {\n                try {\n                    onNext(value);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n            }\n            : super._next;\n        this._error = onError\n            ? function (err) {\n                try {\n                    onError(err);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._error;\n        this._complete = onComplete\n            ? function () {\n                try {\n                    onComplete();\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : super._complete;\n    }\n    unsubscribe() {\n        var _a;\n        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n            const { closed } = this;\n            super.unsubscribe();\n            !closed && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n        }\n    }\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function debounceTime(dueTime, scheduler = asyncScheduler) {\n    return operate((source, subscriber) => {\n        let activeTask = null;\n        let lastValue = null;\n        let lastTime = null;\n        const emit = () => {\n            if (activeTask) {\n                activeTask.unsubscribe();\n                activeTask = null;\n                const value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        };\n        function emitWhenIdle() {\n            const targetTime = lastTime + dueTime;\n            const now = scheduler.now();\n            if (now < targetTime) {\n                activeTask = this.schedule(undefined, targetTime - now);\n                subscriber.add(activeTask);\n                return;\n            }\n            emit();\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            lastValue = value;\n            lastTime = scheduler.now();\n            if (!activeTask) {\n                activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n                subscriber.add(activeTask);\n            }\n        }, () => {\n            emit();\n            subscriber.complete();\n        }, undefined, () => {\n            lastValue = activeTask = null;\n        }));\n    });\n}\n","import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator, keySelector = identity) {\n    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n    return operate((source, subscriber) => {\n        let previousKey;\n        let first = true;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            const currentKey = keySelector(value);\n            if (first || !comparator(previousKey, currentKey)) {\n                first = false;\n                previousKey = currentKey;\n                subscriber.next(value);\n            }\n        }));\n    });\n}\nfunction defaultCompare(a, b) {\n    return a === b;\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function filter(predicate, thisArg) {\n    return operate((source, subscriber) => {\n        let index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value)));\n    });\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function map(project, thisArg) {\n    return operate((source, subscriber) => {\n        let index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            subscriber.next(project.call(thisArg, value, index++));\n        }));\n    });\n}\n","import { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function observeOn(scheduler, delay = 0) {\n    return operate((source, subscriber) => {\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay), () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay), (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)));\n    });\n}\n","import { filter } from './filter';\nexport function skip(count) {\n    return filter((_, index) => count <= index);\n}\n","import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function take(count) {\n    return count <= 0\n        ?\n            () => EMPTY\n        : operate((source, subscriber) => {\n            let seen = 0;\n            source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n                if (++seen <= count) {\n                    subscriber.next(value);\n                    if (count <= seen) {\n                        subscriber.complete();\n                    }\n                }\n            }));\n        });\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\nexport function takeUntil(notifier) {\n    return operate((source, subscriber) => {\n        innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n        !subscriber.closed && source.subscribe(subscriber);\n    });\n}\n","import { isFunction } from '../util/isFunction';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\nexport function tap(observerOrNext, error, complete) {\n    const tapObserver = isFunction(observerOrNext) || error || complete\n        ?\n            { next: observerOrNext, error, complete }\n        : observerOrNext;\n    return tapObserver\n        ? operate((source, subscriber) => {\n            var _a;\n            (_a = tapObserver.subscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n            let isUnsub = true;\n            source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n                var _a;\n                (_a = tapObserver.next) === null || _a === void 0 ? void 0 : _a.call(tapObserver, value);\n                subscriber.next(value);\n            }, () => {\n                var _a;\n                isUnsub = false;\n                (_a = tapObserver.complete) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n                subscriber.complete();\n            }, (err) => {\n                var _a;\n                isUnsub = false;\n                (_a = tapObserver.error) === null || _a === void 0 ? void 0 : _a.call(tapObserver, err);\n                subscriber.error(err);\n            }, () => {\n                var _a, _b;\n                if (isUnsub) {\n                    (_a = tapObserver.unsubscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n                }\n                (_b = tapObserver.finalize) === null || _b === void 0 ? void 0 : _b.call(tapObserver);\n            }));\n        })\n        :\n            identity;\n}\n","import { Subscription } from '../Subscription';\nexport class Action extends Subscription {\n    constructor(scheduler, work) {\n        super();\n    }\n    schedule(state, delay = 0) {\n        return this;\n    }\n}\n","export const intervalProvider = {\n    setInterval(handler, timeout, ...args) {\n        const { delegate } = intervalProvider;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {\n            return delegate.setInterval(handler, timeout, ...args);\n        }\n        return setInterval(handler, timeout, ...args);\n    },\n    clearInterval(handle) {\n        const { delegate } = intervalProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);\n    },\n    delegate: undefined,\n};\n","import { Action } from './Action';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        var _a;\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = (_a = this.id) !== null && _a !== void 0 ? _a : this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, _id, delay = 0) {\n        return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(_scheduler, id, delay = 0) {\n        if (delay != null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        if (id != null) {\n            intervalProvider.clearInterval(id);\n        }\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, _delay) {\n        let errored = false;\n        let errorValue;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = e ? e : new Error('Scheduled action threw falsy error');\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    unsubscribe() {\n        if (!this.closed) {\n            const { id, scheduler } = this;\n            const { actions } = scheduler;\n            this.work = this.state = this.scheduler = null;\n            this.pending = false;\n            arrRemove(actions, this);\n            if (id != null) {\n                this.id = this.recycleAsyncId(scheduler, id, null);\n            }\n            this.delay = null;\n            super.unsubscribe();\n        }\n    }\n}\n","import { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class Scheduler {\n    constructor(schedulerActionCtor, now = Scheduler.now) {\n        this.schedulerActionCtor = schedulerActionCtor;\n        this.now = now;\n    }\n    schedule(work, delay = 0, state) {\n        return new this.schedulerActionCtor(this, work).schedule(state, delay);\n    }\n}\nScheduler.now = dateTimestampProvider.now;\n","import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        super(SchedulerAction, now);\n        this.actions = [];\n        this._active = false;\n    }\n    flush(action) {\n        const { actions } = this;\n        if (this._active) {\n            actions.push(action);\n            return;\n        }\n        let error;\n        this._active = true;\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions.shift()));\n        this._active = false;\n        if (error) {\n            while ((action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\nexport const async = asyncScheduler;\n","export const dateTimestampProvider = {\n    now() {\n        return (dateTimestampProvider.delegate || Date).now();\n    },\n    delegate: undefined,\n};\n","import { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\nfunction last(arr) {\n    return arr[arr.length - 1];\n}\nexport function popResultSelector(args) {\n    return isFunction(last(args)) ? args.pop() : undefined;\n}\nexport function popScheduler(args) {\n    return isScheduler(last(args)) ? args.pop() : undefined;\n}\nexport function popNumber(args, defaultValue) {\n    return typeof last(args) === 'number' ? args.pop() : defaultValue;\n}\n","export function executeSchedule(parentSubscription, scheduler, work, delay = 0, repeat = false) {\n    const scheduleSubscription = scheduler.schedule(function () {\n        work();\n        if (repeat) {\n            parentSubscription.add(this.schedule(null, delay));\n        }\n        else {\n            this.unsubscribe();\n        }\n    }, delay);\n    parentSubscription.add(scheduleSubscription);\n    if (!repeat) {\n        return scheduleSubscription;\n    }\n}\n","import { isFunction } from './isFunction';\nexport function isScheduler(value) {\n    return value && isFunction(value.schedule);\n}\n","import { isFunction } from './isFunction';\nexport function hasLift(source) {\n    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n    return (source) => {\n        if (hasLift(source)) {\n            return source.lift(function (liftedSource) {\n                try {\n                    return init(liftedSource, this);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            });\n        }\n        throw new TypeError('Unable to lift unknown Observable type');\n    };\n}\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, APP_ID, Injectable, Inject, QueryList, Directive, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getFocusedElementPierceShadowDom, normalizePassiveListenerOptions, _getEventTarget, _getShadowRoot } from '@angular/cdk/platform';\nimport { Subject, Subscription, BehaviorSubject, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, PAGE_DOWN, PAGE_UP, END, HOME, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB, ALT, CONTROL, MAC_META, META, SHIFT } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take, skip, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { BreakpointObserver } from '@angular/cdk/layout';\n\n/** IDs are delimited by an empty space, as per the spec. */\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction addAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    if (ids.some(existingId => existingId.trim() == id.trim())) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    const ids = getAriaReferenceIds(el, attr);\n    const filteredIds = ids.filter(val => val != id.trim());\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace delimited) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * ID used for the body container where all messages are appended.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 14.0.0\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    constructor(_document, \n    /**\n     * @deprecated To be turned into a required parameter.\n     * @breaking-change 14.0.0\n     */\n    _platform) {\n        this._platform = _platform;\n        /** Map of all registered message elements that have been placed into the document. */\n        this._messageRegistry = new Map();\n        /** Container for all registered messages. */\n        this._messagesContainer = null;\n        /** Unique ID for the service. */\n        this._id = `${nextId++}`;\n        this._document = _document;\n        this._id = inject(APP_ID) + '-' + nextId++;\n    }\n    describe(hostElement, message, role) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            setMessageId(message, this._id);\n            this._messageRegistry.set(key, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!this._messageRegistry.has(key)) {\n            this._createMessageElement(message, role);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, key)) {\n            this._addMessageReference(hostElement, key);\n        }\n    }\n    removeDescription(hostElement, message, role) {\n        if (!message || !this._isElementNode(hostElement)) {\n            return;\n        }\n        const key = getKey(message, role);\n        if (this._isElementDescribedByMessage(hostElement, key)) {\n            this._removeMessageReference(hostElement, key);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            const registeredMessage = this._messageRegistry.get(key);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(key);\n            }\n        }\n        if (this._messagesContainer?.childNodes.length === 0) {\n            this._messagesContainer.remove();\n            this._messagesContainer = null;\n        }\n    }\n    /** Unregisters all created message elements and removes the message container. */\n    ngOnDestroy() {\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}=\"${this._id}\"]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        this._messagesContainer?.remove();\n        this._messagesContainer = null;\n        this._messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     */\n    _createMessageElement(message, role) {\n        const messageElement = this._document.createElement('div');\n        setMessageId(messageElement, this._id);\n        messageElement.textContent = message;\n        if (role) {\n            messageElement.setAttribute('role', role);\n        }\n        this._createMessagesContainer();\n        this._messagesContainer.appendChild(messageElement);\n        this._messageRegistry.set(getKey(message, role), { messageElement, referenceCount: 0 });\n    }\n    /** Deletes the message element from the global messages container. */\n    _deleteMessageElement(key) {\n        this._messageRegistry.get(key)?.messageElement?.remove();\n        this._messageRegistry.delete(key);\n    }\n    /** Creates the global container for all aria-describedby messages. */\n    _createMessagesContainer() {\n        if (this._messagesContainer) {\n            return;\n        }\n        const containerClassName = 'cdk-describedby-message-container';\n        const serverContainers = this._document.querySelectorAll(`.${containerClassName}[platform=\"server\"]`);\n        for (let i = 0; i < serverContainers.length; i++) {\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            serverContainers[i].remove();\n        }\n        const messagesContainer = this._document.createElement('div');\n        // We add `visibility: hidden` in order to prevent text in this container from\n        // being searchable by the browser's Ctrl + F functionality.\n        // Screen-readers will still read the description for elements with aria-describedby even\n        // when the description element is not visible.\n        messagesContainer.style.visibility = 'hidden';\n        // Even though we use `visibility: hidden`, we still apply `cdk-visually-hidden` so that\n        // the description element doesn't impact page layout.\n        messagesContainer.classList.add(containerClassName);\n        messagesContainer.classList.add('cdk-visually-hidden');\n        // @breaking-change 14.0.0 Remove null check for `_platform`.\n        if (this._platform && !this._platform.isBrowser) {\n            messagesContainer.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(messagesContainer);\n        this._messagesContainer = messagesContainer;\n    }\n    /** Removes all cdk-describedby messages that are hosted through the element. */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby').filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     */\n    _addMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, this._id);\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     */\n    _removeMessageReference(element, key) {\n        const registeredMessage = this._messageRegistry.get(key);\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /** Returns true if the element has been described by the provided message ID. */\n    _isElementDescribedByMessage(element, key) {\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        const registeredMessage = this._messageRegistry.get(key);\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /** Determines whether a message can be described on a particular element. */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? !ariaLabel || ariaLabel.trim() !== trimmedMessage : false;\n    }\n    /** Checks whether a node is an Element node. */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: AriaDescriber, deps: [{ token: DOCUMENT }, { token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: AriaDescriber, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: AriaDescriber, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1.Platform }]; } });\n/** Gets a key that can be used to look messages up in the registry. */\nfunction getKey(message, role) {\n    return typeof message === 'string' ? `${role || ''}/${message}` : message;\n}\n/** Assigns a unique ID to an element, if it doesn't have one already. */\nfunction setMessageId(element, serviceId) {\n    if (!element.id) {\n        element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${serviceId}-${nextId++}`;\n    }\n}\n\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nclass ListKeyManager {\n    constructor(_items) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        this._homeAndEnd = false;\n        this._pageUpAndDown = { enabled: false, delta: 10 };\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (item) => item.disabled;\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /** Stream that emits whenever the active item of the list manager changes. */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            this._itemChangesSubscription = _items.changes.subscribe((newItems) => {\n                if (this._activeItem) {\n                    const itemArray = newItems.toArray();\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @param predicate Function that determines whether the given item should be skipped.\n     */\n    skipPredicate(predicate) {\n        this._skipPredicateFn = predicate;\n        return this;\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @param shouldWrap Whether the list should wrap when reaching the end.\n     */\n    withWrap(shouldWrap = true) {\n        this._wrap = shouldWrap;\n        return this;\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    withVerticalOrientation(enabled = true) {\n        this._vertical = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    withHorizontalOrientation(direction) {\n        this._horizontal = direction;\n        return this;\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     */\n    withAllowedModifierKeys(keys) {\n        this._allowedModifierKeys = keys;\n        return this;\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            this._items.length &&\n            this._items.some(item => typeof item.getLabel !== 'function')) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        this._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        this._typeaheadSubscription = this._letterKeyStream\n            .pipe(tap(letter => this._pressedLetters.push(letter)), debounceTime(debounceInterval), filter(() => this._pressedLetters.length > 0), map(() => this._pressedLetters.join('')))\n            .subscribe(inputString => {\n            const items = this._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                const index = (this._activeItemIndex + i) % items.length;\n                const item = items[index];\n                if (!this._skipPredicateFn(item) &&\n                    item.getLabel().toUpperCase().trim().indexOf(inputString) === 0) {\n                    this.setActiveItem(index);\n                    break;\n                }\n            }\n            this._pressedLetters = [];\n        });\n        return this;\n    }\n    /** Cancels the current typeahead sequence. */\n    cancelTypeahead() {\n        this._pressedLetters = [];\n        return this;\n    }\n    /**\n     * Configures the key manager to activate the first and last items\n     * respectively when the Home or End key is pressed.\n     * @param enabled Whether pressing the Home or End key activates the first/last item.\n     */\n    withHomeAndEnd(enabled = true) {\n        this._homeAndEnd = enabled;\n        return this;\n    }\n    /**\n     * Configures the key manager to activate every 10th, configured or first/last element in up/down direction\n     * respectively when the Page-Up or Page-Down key is pressed.\n     * @param enabled Whether pressing the Page-Up or Page-Down key activates the first/last item.\n     * @param delta Whether pressing the Home or End key activates the first/last item.\n     */\n    withPageUpDown(enabled = true, delta = 10) {\n        this._pageUpAndDown = { enabled, delta };\n        return this;\n    }\n    setActiveItem(item) {\n        const previousActiveItem = this._activeItem;\n        this.updateActiveItem(item);\n        if (this._activeItem !== previousActiveItem) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    onKeydown(event) {\n        const keyCode = event.keyCode;\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        const isModifierAllowed = modifiers.every(modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        });\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case HOME:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setFirstItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case END:\n                if (this._homeAndEnd && isModifierAllowed) {\n                    this.setLastItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case PAGE_UP:\n                if (this._pageUpAndDown.enabled && isModifierAllowed) {\n                    const targetIndex = this._activeItemIndex - this._pageUpAndDown.delta;\n                    this._setActiveItemByIndex(targetIndex > 0 ? targetIndex : 0, 1);\n                    break;\n                }\n                else {\n                    return;\n                }\n            case PAGE_DOWN:\n                if (this._pageUpAndDown.enabled && isModifierAllowed) {\n                    const targetIndex = this._activeItemIndex + this._pageUpAndDown.delta;\n                    const itemsLength = this._getItemsArray().length;\n                    this._setActiveItemByIndex(targetIndex < itemsLength ? targetIndex : itemsLength - 1, -1);\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /** Index of the currently active item. */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /** The active item. */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n    isTyping() {\n        return this._pressedLetters.length > 0;\n    }\n    /** Sets the active item to the first enabled item in the list. */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /** Sets the active item to the last enabled item in the list. */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    /** Sets the active item to the next enabled item in the list. */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /** Sets the active item to a previous enabled item in the list. */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap\n            ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    updateActiveItem(item) {\n        const itemArray = this._getItemsArray();\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /** Cleans up the key manager. */\n    destroy() {\n        this._typeaheadSubscription.unsubscribe();\n        this._itemChangesSubscription?.unsubscribe();\n        this._letterKeyStream.complete();\n        this.tabOut.complete();\n        this.change.complete();\n        this._pressedLetters = [];\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     */\n    _setActiveInWrapMode(delta) {\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            const index = (this._activeItemIndex + delta * i + items.length) % items.length;\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /** Returns the items as an array. */\n    _getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\n\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    setFocusOrigin(origin) {\n        this._origin = origin;\n        return this;\n    }\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n\n/**\n * Configuration for the isFocusable method.\n */\nclass IsFocusableConfig {\n    constructor() {\n        /**\n         * Whether to count an element as focusable even if it is not currently visible.\n         */\n        this.ignoreVisibility = false;\n    }\n}\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Browsers disable tabbing to an element inside of an invisible frame.\n            if (!this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        let nodeName = element.nodeName.toLowerCase();\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe' || nodeName === 'object') {\n            // The frame or object's content may be tabbable depending on the content, but it's\n            // not possibly to reliably detect the content of the frames. We always consider such\n            // elements as non-tabbable.\n            return false;\n        }\n        // In iOS, the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        if (nodeName === 'audio') {\n            // Audio elements without controls enabled are never tabbable, regardless\n            // of the tabindex attribute explicitly being set.\n            if (!element.hasAttribute('controls')) {\n                return false;\n            }\n            // Audio elements with controls are by default tabbable unless the\n            // tabindex attribute is set to `-1` explicitly.\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'video') {\n            // For all video elements, if the tabindex attribute is set to `-1`, the video\n            // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\n            // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\n            // tabindex attribute is the source of truth here.\n            if (tabIndexValue === -1) {\n                return false;\n            }\n            // If the tabindex is explicitly set, and not `-1` (as per check before), the\n            // video element is always tabbable (regardless of whether it has controls or not).\n            if (tabIndexValue !== null) {\n                return true;\n            }\n            // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\n            // has controls enabled. Firefox is special as videos are always tabbable regardless\n            // of whether there are controls or not.\n            return this._platform.FIREFOX || element.hasAttribute('controls');\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @param config The config object with options to customize this method's behavior\n     * @returns Whether the element is focusable.\n     */\n    isFocusable(element, config) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return (isPotentiallyFocusable(element) &&\n            !this.isDisabled(element) &&\n            (config?.ignoreVisibility || this.isVisible(element)));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: InteractivityChecker, deps: [{ token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: InteractivityChecker, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: InteractivityChecker, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }]; } });\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window) {\n    try {\n        return window.frameElement;\n    }\n    catch {\n        return null;\n    }\n}\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth ||\n        element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/** Gets whether an element's  */\nfunction isNativeFormElement(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    return (nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea');\n}\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/** Gets whether an element is an input element. */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    let tabIndex = element.getAttribute('tabindex');\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element) {\n    let nodeName = element.nodeName.toLowerCase();\n    let inputType = nodeName === 'input' && element.type;\n    return (inputType === 'text' ||\n        inputType === 'password' ||\n        nodeName === 'select' ||\n        nodeName === 'textarea');\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return (isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element));\n}\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return (node.ownerDocument && node.ownerDocument.defaultView) || window;\n}\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to be misaligned.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrap {\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = () => this.focusLastTabbableElement();\n        this.endAnchorListener = () => this.focusFirstTabbableElement();\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /** Destroys the focus trap by cleaning up the anchors. */\n    destroy() {\n        const startAnchor = this._startAnchor;\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            startAnchor.remove();\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            endAnchor.remove();\n        }\n        this._startAnchor = this._endAnchor = null;\n        this._hasAttached = false;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @returns Whether the focus trap managed to attach successfully. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                this._startAnchor.addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                this._endAnchor.addEventListener('focus', this.endAnchorListener);\n            }\n        });\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore(this._startAnchor, this._element);\n            this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses the first tabbable element.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusInitialElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusInitialElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusFirstTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusFirstTabbableElement(options)));\n        });\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @returns Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfully.\n     */\n    focusLastTabbableElementWhenReady(options) {\n        return new Promise(resolve => {\n            this._executeOnStable(() => resolve(this.focusLastTabbableElement(options)));\n        });\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @param bound The boundary to get (start or end of trapped region).\n     * @returns The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` + `[cdkFocusRegion${bound}], ` + `[cdk-focus-${bound}]`);\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            for (let i = 0; i < markers.length; i++) {\n                // @breaking-change 8.0.0\n                if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                        `attribute will be removed in 8.0.0.`, markers[i]);\n                }\n                else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                    console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                        `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                        `will be removed in 8.0.0.`, markers[i]);\n                }\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length\n            ? markers[markers.length - 1]\n            : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @returns Whether focus was moved successfully.\n     */\n    focusInitialElement(options) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` + `[cdkFocusInitial]`);\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            if (!this._checker.isFocusable(redirectToElement)) {\n                const focusableChild = this._getFirstTabbableElement(redirectToElement);\n                focusableChild?.focus(options);\n                return !!focusableChild;\n            }\n            redirectToElement.focus(options);\n            return true;\n        }\n        return this.focusFirstTabbableElement(options);\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusFirstTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @returns Whether focus was moved successfully.\n     */\n    focusLastTabbableElement(options) {\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus(options);\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfully been attached.\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /** Get the first tabbable element from a DOM subtree (inclusive). */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        const children = root.children;\n        for (let i = 0; i < children.length; i++) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getFirstTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Get the last tabbable element from a DOM subtree (inclusive). */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        const children = root.children;\n        for (let i = children.length - 1; i >= 0; i--) {\n            const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE\n                ? this._getLastTabbableElement(children[i])\n                : null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /** Creates an anchor element. */\n    _createAnchor() {\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @param isEnabled Whether the focus trap is enabled.\n     * @param anchor Anchor on which to toggle the tabindex.\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n     * @param enabled: Whether the anchors should trap Tab.\n     */\n    toggleAnchors(enabled) {\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(enabled, this._startAnchor);\n            this._toggleAnchorTabIndex(enabled, this._endAnchor);\n        }\n    }\n    /** Executes a function when the zone is stable. */\n    _executeOnStable(fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.pipe(take(1)).subscribe(fn);\n        }\n    }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrapFactory {\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: FocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: FocusTrapFactory, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: FocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/** Directive for trapping focus within a region. */\nclass CdkTrapFocus {\n    /** Whether the focus trap is active. */\n    get enabled() {\n        return this.focusTrap.enabled;\n    }\n    set enabled(value) {\n        this.focusTrap.enabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the directive should automatically move focus into the trapped region upon\n     * initialization and return focus to the previous activeElement upon destruction.\n     */\n    get autoCapture() {\n        return this._autoCapture;\n    }\n    set autoCapture(value) {\n        this._autoCapture = coerceBooleanProperty(value);\n    }\n    constructor(_elementRef, _focusTrapFactory, \n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 13.0.0\n     */\n    _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n        this._previouslyFocusedElement = null;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    ngOnDestroy() {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    ngAfterContentInit() {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._captureFocus();\n        }\n    }\n    ngDoCheck() {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n    ngOnChanges(changes) {\n        const autoCaptureChange = changes['autoCapture'];\n        if (autoCaptureChange &&\n            !autoCaptureChange.firstChange &&\n            this.autoCapture &&\n            this.focusTrap.hasAttached()) {\n            this._captureFocus();\n        }\n    }\n    _captureFocus() {\n        this._previouslyFocusedElement = _getFocusedElementPierceShadowDom();\n        this.focusTrap.focusInitialElementWhenReady();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTrapFocus, deps: [{ token: i0.ElementRef }, { token: FocusTrapFactory }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkTrapFocus, selector: \"[cdkTrapFocus]\", inputs: { enabled: [\"cdkTrapFocus\", \"enabled\"], autoCapture: [\"cdkTrapFocusAutoCapture\", \"autoCapture\"] }, exportAs: [\"cdkTrapFocus\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkTrapFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkTrapFocus]',\n                    exportAs: 'cdkTrapFocus',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: FocusTrapFactory }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; }, propDecorators: { enabled: [{\n                type: Input,\n                args: ['cdkTrapFocus']\n            }], autoCapture: [{\n                type: Input,\n                args: ['cdkTrapFocusAutoCapture']\n            }] } });\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n    /** Whether the FocusTrap is enabled. */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            this._focusTrapManager.register(this);\n        }\n        else {\n            this._focusTrapManager.deregister(this);\n        }\n    }\n    constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {\n        super(_element, _checker, _ngZone, _document, config.defer);\n        this._focusTrapManager = _focusTrapManager;\n        this._inertStrategy = _inertStrategy;\n        this._focusTrapManager.register(this);\n    }\n    /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n    destroy() {\n        this._focusTrapManager.deregister(this);\n        super.destroy();\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _enable() {\n        this._inertStrategy.preventFocus(this);\n        this.toggleAnchors(true);\n    }\n    /** @docs-private Implemented as part of ManagedFocusTrap. */\n    _disable() {\n        this._inertStrategy.allowFocus(this);\n        this.toggleAnchors(false);\n    }\n}\n\n/** The injection token used to specify the inert strategy. */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n    constructor() {\n        /** Focus event handler. */\n        this._listener = null;\n    }\n    /** Adds a document event listener that keeps focus inside the FocusTrap. */\n    preventFocus(focusTrap) {\n        // Ensure there's only one listener per document\n        if (this._listener) {\n            focusTrap._document.removeEventListener('focus', this._listener, true);\n        }\n        this._listener = (e) => this._trapFocus(focusTrap, e);\n        focusTrap._ngZone.runOutsideAngular(() => {\n            focusTrap._document.addEventListener('focus', this._listener, true);\n        });\n    }\n    /** Removes the event listener added in preventFocus. */\n    allowFocus(focusTrap) {\n        if (!this._listener) {\n            return;\n        }\n        focusTrap._document.removeEventListener('focus', this._listener, true);\n        this._listener = null;\n    }\n    /**\n     * Refocuses the first element in the FocusTrap if the focus event target was outside\n     * the FocusTrap.\n     *\n     * This is an event listener callback. The event listener is added in runOutsideAngular,\n     * so all this code runs outside Angular as well.\n     */\n    _trapFocus(focusTrap, event) {\n        const target = event.target;\n        const focusTrapRoot = focusTrap._element;\n        // Don't refocus if target was in an overlay, because the overlay might be associated\n        // with an element inside the FocusTrap, ex. mat-select.\n        if (target && !focusTrapRoot.contains(target) && !target.closest?.('div.cdk-overlay-pane')) {\n            // Some legacy FocusTrap usages have logic that focuses some element on the page\n            // just before FocusTrap is destroyed. For backwards compatibility, wait\n            // to be sure FocusTrap is still enabled before refocusing.\n            setTimeout(() => {\n                // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n                if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n                    focusTrap.focusFirstTabbableElement();\n                }\n            });\n        }\n    }\n}\n\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\nclass FocusTrapManager {\n    constructor() {\n        // A stack of the FocusTraps on the page. Only the FocusTrap at the\n        // top of the stack is active.\n        this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     */\n    register(focusTrap) {\n        // Dedupe focusTraps that register multiple times.\n        this._focusTrapStack = this._focusTrapStack.filter(ft => ft !== focusTrap);\n        let stack = this._focusTrapStack;\n        if (stack.length) {\n            stack[stack.length - 1]._disable();\n        }\n        stack.push(focusTrap);\n        focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     */\n    deregister(focusTrap) {\n        focusTrap._disable();\n        const stack = this._focusTrapStack;\n        const i = stack.indexOf(focusTrap);\n        if (i !== -1) {\n            stack.splice(i, 1);\n            if (stack.length) {\n                stack[stack.length - 1]._enable();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: FocusTrapManager, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: FocusTrapManager, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: FocusTrapManager, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/** Factory that allows easy instantiation of configurable focus traps. */\nclass ConfigurableFocusTrapFactory {\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._focusTrapManager = _focusTrapManager;\n        this._document = _document;\n        // TODO split up the strategies into different modules, similar to DateAdapter.\n        this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    create(element, config = { defer: false }) {\n        let configObject;\n        if (typeof config === 'boolean') {\n            configObject = { defer: config };\n        }\n        else {\n            configObject = config;\n        }\n        return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, deps: [{ token: InteractivityChecker }, { token: i0.NgZone }, { token: FocusTrapManager }, { token: DOCUMENT }, { token: FOCUS_TRAP_INERT_STRATEGY, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: ConfigurableFocusTrapFactory, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: InteractivityChecker }, { type: i0.NgZone }, { type: FocusTrapManager }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FOCUS_TRAP_INERT_STRATEGY]\n                }] }]; } });\n\n/** Gets whether an event could be a faked `mousedown` event dispatched by a screen reader. */\nfunction isFakeMousedownFromScreenReader(event) {\n    // Some screen readers will dispatch a fake `mousedown` event when pressing enter or space on\n    // a clickable element. We can distinguish these events when both `offsetX` and `offsetY` are\n    // zero or `event.buttons` is zero, depending on the browser:\n    // - `event.buttons` works on Firefox, but fails on Chrome.\n    // - `offsetX` and `offsetY` work on Chrome, but fail on Firefox.\n    // Note that there's an edge case where the user could click the 0x0 spot of the\n    // screen themselves, but that is unlikely to contain interactive elements.\n    return event.buttons === 0 || (event.offsetX === 0 && event.offsetY === 0);\n}\n/** Gets whether an event could be a faked `touchstart` event dispatched by a screen reader. */\nfunction isFakeTouchstartFromScreenReader(event) {\n    const touch = (event.touches && event.touches[0]) || (event.changedTouches && event.changedTouches[0]);\n    // A fake `touchstart` can be distinguished from a real one by looking at the `identifier`\n    // which is typically >= 0 on a real device versus -1 from a screen reader. Just to be safe,\n    // we can also look at `radiusX` and `radiusY`. This behavior was observed against a Windows 10\n    // device with a touch screen running NVDA v2020.4 and Firefox 85 or Chrome 88.\n    return (!!touch &&\n        touch.identifier === -1 &&\n        (touch.radiusX == null || touch.radiusX === 1) &&\n        (touch.radiusY == null || touch.radiusY === 1));\n}\n\n/**\n * Injectable options for the InputModalityDetector. These are shallowly merged with the default\n * options.\n */\nconst INPUT_MODALITY_DETECTOR_OPTIONS = new InjectionToken('cdk-input-modality-detector-options');\n/**\n * Default options for the InputModalityDetector.\n *\n * Modifier keys are ignored by default (i.e. when pressed won't cause the service to detect\n * keyboard input modality) for two reasons:\n *\n * 1. Modifier keys are commonly used with mouse to perform actions such as 'right click' or 'open\n *    in new tab', and are thus less representative of actual keyboard interaction.\n * 2. VoiceOver triggers some keyboard events when linearly navigating with Control + Option (but\n *    confusingly not with Caps Lock). Thus, to have parity with other screen readers, we ignore\n *    these keys so as to not update the input modality.\n *\n * Note that we do not by default ignore the right Meta key on Safari because it has the same key\n * code as the ContextMenu key on other browsers. When we switch to using event.key, we can\n * distinguish between the two.\n */\nconst INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS = {\n    ignoreKeys: [ALT, CONTROL, MAC_META, META, SHIFT],\n};\n/**\n * The amount of time needed to pass after a touchstart event in order for a subsequent mousedown\n * event to be attributed as mouse and not touch.\n *\n * This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n * that a value of around 650ms seems appropriate.\n */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Event listener options that enable capturing and also mark the listener as passive if the browser\n * supports it.\n */\nconst modalityEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/**\n * Service that detects the user's input modality.\n *\n * This service does not update the input modality when a user navigates with a screen reader\n * (e.g. linear navigation with VoiceOver, object navigation / browse mode with NVDA, virtual PC\n * cursor mode with JAWS). This is in part due to technical limitations (i.e. keyboard events do not\n * fire as expected in these modes) but is also arguably the correct behavior. Navigating with a\n * screen reader is akin to visually scanning a page, and should not be interpreted as actual user\n * input interaction.\n *\n * When a user is not navigating but *interacting* with a screen reader, this service attempts to\n * update the input modality to keyboard, but in general this service's behavior is largely\n * undefined.\n */\nclass InputModalityDetector {\n    /** The most recently detected input modality. */\n    get mostRecentModality() {\n        return this._modality.value;\n    }\n    constructor(_platform, ngZone, document, options) {\n        this._platform = _platform;\n        /**\n         * The most recently detected input modality event target. Is null if no input modality has been\n         * detected or if the associated event target is null for some unknown reason.\n         */\n        this._mostRecentTarget = null;\n        /** The underlying BehaviorSubject that emits whenever an input modality is detected. */\n        this._modality = new BehaviorSubject(null);\n        /**\n         * The timestamp of the last touch input modality. Used to determine whether mousedown events\n         * should be attributed to mouse or touch.\n         */\n        this._lastTouchMs = 0;\n        /**\n         * Handles keydown events. Must be an arrow function in order to preserve the context when it gets\n         * bound.\n         */\n        this._onKeydown = (event) => {\n            // If this is one of the keys we should ignore, then ignore it and don't update the input\n            // modality to keyboard.\n            if (this._options?.ignoreKeys?.some(keyCode => keyCode === event.keyCode)) {\n                return;\n            }\n            this._modality.next('keyboard');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles mousedown events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onMousedown = (event) => {\n            // Touches trigger both touch and mouse events, so we need to distinguish between mouse events\n            // that were triggered via mouse vs touch. To do so, check if the mouse event occurs closely\n            // after the previous touch event.\n            if (Date.now() - this._lastTouchMs < TOUCH_BUFFER_MS) {\n                return;\n            }\n            // Fake mousedown events are fired by some screen readers when controls are activated by the\n            // screen reader. Attribute them to keyboard input modality.\n            this._modality.next(isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        /**\n         * Handles touchstart events. Must be an arrow function in order to preserve the context when it\n         * gets bound.\n         */\n        this._onTouchstart = (event) => {\n            // Same scenario as mentioned in _onMousedown, but on touch screen devices, fake touchstart\n            // events are fired. Again, attribute to keyboard input modality.\n            if (isFakeTouchstartFromScreenReader(event)) {\n                this._modality.next('keyboard');\n                return;\n            }\n            // Store the timestamp of this touch event, as it's used to distinguish between mouse events\n            // triggered via mouse vs touch.\n            this._lastTouchMs = Date.now();\n            this._modality.next('touch');\n            this._mostRecentTarget = _getEventTarget(event);\n        };\n        this._options = {\n            ...INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS,\n            ...options,\n        };\n        // Skip the first emission as it's null.\n        this.modalityDetected = this._modality.pipe(skip(1));\n        this.modalityChanged = this.modalityDetected.pipe(distinctUntilChanged());\n        // If we're not in a browser, this service should do nothing, as there's no relevant input\n        // modality to detect.\n        if (_platform.isBrowser) {\n            ngZone.runOutsideAngular(() => {\n                document.addEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n                document.addEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n                document.addEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n            });\n        }\n    }\n    ngOnDestroy() {\n        this._modality.complete();\n        if (this._platform.isBrowser) {\n            document.removeEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n            document.removeEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n            document.removeEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: InputModalityDetector, deps: [{ token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT }, { token: INPUT_MODALITY_DETECTOR_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: InputModalityDetector, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: InputModalityDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: i0.NgZone }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [INPUT_MODALITY_DETECTOR_OPTIONS]\n                }] }]; } });\n\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/** @docs-private */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\nlet uniqueIds = 0;\nclass LiveAnnouncer {\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    announce(message, ...args) {\n        const defaultOptions = this._defaultOptions;\n        let politeness;\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                defaultOptions && defaultOptions.politeness ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        if (this._liveElement.id) {\n            this._exposeAnnouncerToModals(this._liveElement.id);\n        }\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular(() => {\n            if (!this._currentPromise) {\n                this._currentPromise = new Promise(resolve => (this._currentResolve = resolve));\n            }\n            clearTimeout(this._previousTimeout);\n            this._previousTimeout = setTimeout(() => {\n                this._liveElement.textContent = message;\n                if (typeof duration === 'number') {\n                    this._previousTimeout = setTimeout(() => this.clear(), duration);\n                }\n                this._currentResolve();\n                this._currentPromise = this._currentResolve = undefined;\n            }, 100);\n            return this._currentPromise;\n        });\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        this._liveElement?.remove();\n        this._liveElement = null;\n        this._currentResolve?.();\n        this._currentPromise = this._currentResolve = undefined;\n    }\n    _createLiveElement() {\n        const elementClass = 'cdk-live-announcer-element';\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            previousElements[i].remove();\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        liveEl.id = `cdk-live-announcer-${uniqueIds++}`;\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n    /**\n     * Some browsers won't expose the accessibility node of the live announcer element if there is an\n     * `aria-modal` and the live announcer is outside of it. This method works around the issue by\n     * pointing the `aria-owns` of all modals to the live announcer element.\n     */\n    _exposeAnnouncerToModals(id) {\n        // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n        // section of the DOM we need to look through. This should cover all the cases we support, but\n        // the selector can be expanded if it turns out to be too narrow.\n        const modals = this._document.querySelectorAll('body > .cdk-overlay-container [aria-modal=\"true\"]');\n        for (let i = 0; i < modals.length; i++) {\n            const modal = modals[i];\n            const ariaOwns = modal.getAttribute('aria-owns');\n            if (!ariaOwns) {\n                modal.setAttribute('aria-owns', id);\n            }\n            else if (ariaOwns.indexOf(id) === -1) {\n                modal.setAttribute('aria-owns', ariaOwns + ' ' + id);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: LiveAnnouncer, deps: [{ token: LIVE_ANNOUNCER_ELEMENT_TOKEN, optional: true }, { token: i0.NgZone }, { token: DOCUMENT }, { token: LIVE_ANNOUNCER_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: LiveAnnouncer, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: LiveAnnouncer, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIVE_ANNOUNCER_ELEMENT_TOKEN]\n                }] }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS]\n                }] }]; } });\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    /** The aria-live politeness level to use when announcing messages. */\n    get politeness() {\n        return this._politeness;\n    }\n    set politeness(value) {\n        this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular(() => {\n                return this._contentObserver.observe(this._elementRef).subscribe(() => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness, this.duration);\n                        this._previousAnnouncedText = elementText;\n                    }\n                });\n            });\n        }\n    }\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'polite';\n    }\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkAriaLive, deps: [{ token: i0.ElementRef }, { token: LiveAnnouncer }, { token: i1$1.ContentObserver }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkAriaLive, selector: \"[cdkAriaLive]\", inputs: { politeness: [\"cdkAriaLive\", \"politeness\"], duration: [\"cdkAriaLiveDuration\", \"duration\"] }, exportAs: [\"cdkAriaLive\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkAriaLive, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkAriaLive]',\n                    exportAs: 'cdkAriaLive',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: LiveAnnouncer }, { type: i1$1.ContentObserver }, { type: i0.NgZone }]; }, propDecorators: { politeness: [{\n                type: Input,\n                args: ['cdkAriaLive']\n            }], duration: [{\n                type: Input,\n                args: ['cdkAriaLiveDuration']\n            }] } });\n\n/** InjectionToken for FocusMonitorOptions. */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true,\n});\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\nclass FocusMonitor {\n    constructor(_ngZone, _platform, _inputModalityDetector, \n    /** @breaking-change 11.0.0 make document required */\n    document, options) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._inputModalityDetector = _inputModalityDetector;\n        /** The focus origin that the next focus event is a result of. */\n        this._origin = null;\n        /** Whether the window has just been focused. */\n        this._windowFocused = false;\n        /**\n         * Whether the origin was determined via a touch interaction. Necessary as properly attributing\n         * focus events to touch interactions requires special logic.\n         */\n        this._originFromTouchInteraction = false;\n        /** Map of elements being monitored to their info. */\n        this._elementInfo = new Map();\n        /** The number of elements currently being monitored. */\n        this._monitoredElementCount = 0;\n        /**\n         * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n         * as well as the number of monitored elements that they contain. We have to treat focus/blur\n         * handlers differently from the rest of the events, because the browser won't emit events\n         * to the document when focus moves inside of a shadow root.\n         */\n        this._rootNodeFocusListenerCount = new Map();\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = window.setTimeout(() => (this._windowFocused = false));\n        };\n        /** Subject for stopping our InputModalityDetector subscription. */\n        this._stopInputModalityDetector = new Subject();\n        /**\n         * Event listener for `focus` and 'blur' events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._rootNodeFocusAndBlurListener = (event) => {\n            const target = _getEventTarget(event);\n            // We need to walk up the ancestor chain in order to support `checkChildren`.\n            for (let element = target; element; element = element.parentElement) {\n                if (event.type === 'focus') {\n                    this._onFocus(event, element);\n                }\n                else {\n                    this._onBlur(event, element);\n                }\n            }\n        };\n        this._document = document;\n        this._detectionMode = options?.detectionMode || 0 /* FocusMonitorDetectionMode.IMMEDIATE */;\n    }\n    monitor(element, checkChildren = false) {\n        const nativeElement = coerceElement(element);\n        // Do nothing if we're not on the browser platform or the passed in node isn't an element.\n        if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {\n            return of(null);\n        }\n        // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n        // the shadow root, rather than the `document`, because the browser won't emit focus events\n        // to the `document`, if focus is moving within the same shadow root.\n        const rootNode = _getShadowRoot(nativeElement) || this._getDocument();\n        const cachedInfo = this._elementInfo.get(nativeElement);\n        // Check if we're already monitoring this element.\n        if (cachedInfo) {\n            if (checkChildren) {\n                // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n                // observers into ones that behave as if `checkChildren` was turned on. We need a more\n                // robust solution.\n                cachedInfo.checkChildren = true;\n            }\n            return cachedInfo.subject;\n        }\n        // Create monitored element info.\n        const info = {\n            checkChildren: checkChildren,\n            subject: new Subject(),\n            rootNode,\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._registerGlobalListeners(info);\n        return info.subject;\n    }\n    stopMonitoring(element) {\n        const nativeElement = coerceElement(element);\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._removeGlobalListeners(elementInfo);\n        }\n    }\n    focusVia(element, origin, options) {\n        const nativeElement = coerceElement(element);\n        const focusedElement = this._getDocument().activeElement;\n        // If the element is focused already, calling `focus` again won't trigger the event listener\n        // which means that the focus classes won't be updated. If that's the case, update the classes\n        // directly without waiting for an event.\n        if (nativeElement === focusedElement) {\n            this._getClosestElementsInfo(nativeElement).forEach(([currentElement, info]) => this._originChanged(currentElement, origin, info));\n        }\n        else {\n            this._setOrigin(origin);\n            // `focus` isn't available on the server\n            if (typeof nativeElement.focus === 'function') {\n                nativeElement.focus(options);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    _getFocusOrigin(focusEventTarget) {\n        if (this._origin) {\n            // If the origin was realized via a touch interaction, we need to perform additional checks\n            // to determine whether the focus origin should be attributed to touch or program.\n            if (this._originFromTouchInteraction) {\n                return this._shouldBeAttributedToTouch(focusEventTarget) ? 'touch' : 'program';\n            }\n            else {\n                return this._origin;\n            }\n        }\n        // If the window has just regained focus, we can restore the most recent origin from before the\n        // window blurred. Otherwise, we've reached the point where we can't identify the source of the\n        // focus. This typically means one of two things happened:\n        //\n        // 1) The element was programmatically focused, or\n        // 2) The element was focused via screen reader navigation (which generally doesn't fire\n        //    events).\n        //\n        // Because we can't distinguish between these two cases, we default to setting `program`.\n        if (this._windowFocused && this._lastFocusOrigin) {\n            return this._lastFocusOrigin;\n        }\n        // If the interaction is coming from an input label, we consider it a mouse interactions.\n        // This is a special case where focus moves on `click`, rather than `mousedown` which breaks\n        // our detection, because all our assumptions are for `mousedown`. We need to handle this\n        // special case, because it's very common for checkboxes and radio buttons.\n        if (focusEventTarget && this._isLastInteractionFromInputLabel(focusEventTarget)) {\n            return 'mouse';\n        }\n        return 'program';\n    }\n    /**\n     * Returns whether the focus event should be attributed to touch. Recall that in IMMEDIATE mode, a\n     * touch origin isn't immediately reset at the next tick (see _setOrigin). This means that when we\n     * handle a focus event following a touch interaction, we need to determine whether (1) the focus\n     * event was directly caused by the touch interaction or (2) the focus event was caused by a\n     * subsequent programmatic focus call triggered by the touch interaction.\n     * @param focusEventTarget The target of the focus event under examination.\n     */\n    _shouldBeAttributedToTouch(focusEventTarget) {\n        // Please note that this check is not perfect. Consider the following edge case:\n        //\n        // <div #parent tabindex=\"0\">\n        //   <div #child tabindex=\"0\" (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // Suppose there is a FocusMonitor in IMMEDIATE mode attached to #parent. When the user touches\n        // #child, #parent is programmatically focused. This code will attribute the focus to touch\n        // instead of program. This is a relatively minor edge-case that can be worked around by using\n        // focusVia(parent, 'program') to focus #parent.\n        return (this._detectionMode === 1 /* FocusMonitorDetectionMode.EVENTUAL */ ||\n            !!focusEventTarget?.contains(this._inputModalityDetector._mostRecentTarget));\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param element The element to update the classes on.\n     * @param origin The focus origin.\n     */\n    _setClasses(element, origin) {\n        element.classList.toggle('cdk-focused', !!origin);\n        element.classList.toggle('cdk-touch-focused', origin === 'touch');\n        element.classList.toggle('cdk-keyboard-focused', origin === 'keyboard');\n        element.classList.toggle('cdk-mouse-focused', origin === 'mouse');\n        element.classList.toggle('cdk-program-focused', origin === 'program');\n    }\n    /**\n     * Updates the focus origin. If we're using immediate detection mode, we schedule an async\n     * function to clear the origin at the end of a timeout. The duration of the timeout depends on\n     * the origin being set.\n     * @param origin The origin to set.\n     * @param isFromInteraction Whether we are setting the origin from an interaction event.\n     */\n    _setOrigin(origin, isFromInteraction = false) {\n        this._ngZone.runOutsideAngular(() => {\n            this._origin = origin;\n            this._originFromTouchInteraction = origin === 'touch' && isFromInteraction;\n            // If we're in IMMEDIATE mode, reset the origin at the next tick (or in `TOUCH_BUFFER_MS` ms\n            // for a touch event). We reset the origin at the next tick because Firefox focuses one tick\n            // after the interaction event. We wait `TOUCH_BUFFER_MS` ms before resetting the origin for\n            // a touch event because when a touch event is fired, the associated focus event isn't yet in\n            // the event queue. Before doing so, clear any pending timeouts.\n            if (this._detectionMode === 0 /* FocusMonitorDetectionMode.IMMEDIATE */) {\n                clearTimeout(this._originTimeoutId);\n                const ms = this._originFromTouchInteraction ? TOUCH_BUFFER_MS : 1;\n                this._originTimeoutId = setTimeout(() => (this._origin = null), ms);\n            }\n        });\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @param event The focus event.\n     * @param element The monitored element.\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        const elementInfo = this._elementInfo.get(element);\n        const focusEventTarget = _getEventTarget(event);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== focusEventTarget)) {\n            return;\n        }\n        this._originChanged(element, this._getFocusOrigin(focusEventTarget), elementInfo);\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo ||\n            (elementInfo.checkChildren &&\n                event.relatedTarget instanceof Node &&\n                element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo, null);\n    }\n    _emitOrigin(info, origin) {\n        if (info.subject.observers.length) {\n            this._ngZone.run(() => info.subject.next(origin));\n        }\n    }\n    _registerGlobalListeners(elementInfo) {\n        if (!this._platform.isBrowser) {\n            return;\n        }\n        const rootNode = elementInfo.rootNode;\n        const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n        if (!rootNodeFocusListeners) {\n            this._ngZone.runOutsideAngular(() => {\n                rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n            });\n        }\n        this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount === 1) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                window.addEventListener('focus', this._windowFocusListener);\n            });\n            // The InputModalityDetector is also just a collection of global listeners.\n            this._inputModalityDetector.modalityDetected\n                .pipe(takeUntil(this._stopInputModalityDetector))\n                .subscribe(modality => {\n                this._setOrigin(modality, true /* isFromInteraction */);\n            });\n        }\n    }\n    _removeGlobalListeners(elementInfo) {\n        const rootNode = elementInfo.rootNode;\n        if (this._rootNodeFocusListenerCount.has(rootNode)) {\n            const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode);\n            if (rootNodeFocusListeners > 1) {\n                this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n            }\n            else {\n                rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n                this._rootNodeFocusListenerCount.delete(rootNode);\n            }\n        }\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            const window = this._getWindow();\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Equivalently, stop our InputModalityDetector subscription.\n            this._stopInputModalityDetector.next();\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n    /** Updates all the state on an element once its focus origin has changed. */\n    _originChanged(element, origin, elementInfo) {\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Collects the `MonitoredElementInfo` of a particular element and\n     * all of its ancestors that have enabled `checkChildren`.\n     * @param element Element from which to start the search.\n     */\n    _getClosestElementsInfo(element) {\n        const results = [];\n        this._elementInfo.forEach((info, currentElement) => {\n            if (currentElement === element || (info.checkChildren && currentElement.contains(element))) {\n                results.push([currentElement, info]);\n            }\n        });\n        return results;\n    }\n    /**\n     * Returns whether an interaction is likely to have come from the user clicking the `label` of\n     * an `input` or `textarea` in order to focus it.\n     * @param focusEventTarget Target currently receiving focus.\n     */\n    _isLastInteractionFromInputLabel(focusEventTarget) {\n        const { _mostRecentTarget: mostRecentTarget, mostRecentModality } = this._inputModalityDetector;\n        // If the last interaction used the mouse on an element contained by one of the labels\n        // of an `input`/`textarea` that is currently focused, it is very likely that the\n        // user redirected focus using the label.\n        if (mostRecentModality !== 'mouse' ||\n            !mostRecentTarget ||\n            mostRecentTarget === focusEventTarget ||\n            (focusEventTarget.nodeName !== 'INPUT' && focusEventTarget.nodeName !== 'TEXTAREA') ||\n            focusEventTarget.disabled) {\n            return false;\n        }\n        const labels = focusEventTarget.labels;\n        if (labels) {\n            for (let i = 0; i < labels.length; i++) {\n                if (labels[i].contains(mostRecentTarget)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: FocusMonitor, deps: [{ token: i0.NgZone }, { token: i1.Platform }, { token: InputModalityDetector }, { token: DOCUMENT, optional: true }, { token: FOCUS_MONITOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: FocusMonitor, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: FocusMonitor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i1.Platform }, { type: InputModalityDetector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [FOCUS_MONITOR_DEFAULT_OPTIONS]\n                }] }]; } });\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._focusOrigin = null;\n        this.cdkFocusChange = new EventEmitter();\n    }\n    get focusOrigin() {\n        return this._focusOrigin;\n    }\n    ngAfterViewInit() {\n        const element = this._elementRef.nativeElement;\n        this._monitorSubscription = this._focusMonitor\n            .monitor(element, element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(origin => {\n            this._focusOrigin = origin;\n            this.cdkFocusChange.emit(origin);\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        if (this._monitorSubscription) {\n            this._monitorSubscription.unsubscribe();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkMonitorFocus, deps: [{ token: i0.ElementRef }, { token: FocusMonitor }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: { cdkFocusChange: \"cdkFocusChange\" }, exportAs: [\"cdkMonitorFocus\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkMonitorFocus, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n                    exportAs: 'cdkMonitorFocus',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: FocusMonitor }]; }, propDecorators: { cdkFocusChange: [{\n                type: Output\n            }] } });\n\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/** CSS class applied to the document body when in high-contrast mode. */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nclass HighContrastModeDetector {\n    constructor(_platform, document) {\n        this._platform = _platform;\n        this._document = document;\n        this._breakpointSubscription = inject(BreakpointObserver)\n            .observe('(forced-colors: active)')\n            .subscribe(() => {\n            if (this._hasCheckedHighContrastMode) {\n                this._hasCheckedHighContrastMode = false;\n                this._applyBodyHighContrastModeCssClasses();\n            }\n        });\n    }\n    /** Gets the current high-contrast-mode for the page. */\n    getHighContrastMode() {\n        if (!this._platform.isBrowser) {\n            return 0 /* HighContrastMode.NONE */;\n        }\n        // Create a test element with an arbitrary background-color that is neither black nor\n        // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n        // appending the test element to the DOM does not affect layout by absolutely positioning it\n        const testElement = this._document.createElement('div');\n        testElement.style.backgroundColor = 'rgb(1,2,3)';\n        testElement.style.position = 'absolute';\n        this._document.body.appendChild(testElement);\n        // Get the computed style for the background color, collapsing spaces to normalize between\n        // browsers. Once we get this color, we no longer need the test element. Access the `window`\n        // via the document so we can fake it in tests. Note that we have extra null checks, because\n        // this logic will likely run during app bootstrap and throwing can break the entire app.\n        const documentWindow = this._document.defaultView || window;\n        const computedStyle = documentWindow && documentWindow.getComputedStyle\n            ? documentWindow.getComputedStyle(testElement)\n            : null;\n        const computedColor = ((computedStyle && computedStyle.backgroundColor) || '').replace(/ /g, '');\n        testElement.remove();\n        switch (computedColor) {\n            // Pre Windows 11 dark theme.\n            case 'rgb(0,0,0)':\n            // Windows 11 dark themes.\n            case 'rgb(45,50,54)':\n            case 'rgb(32,32,32)':\n                return 2 /* HighContrastMode.WHITE_ON_BLACK */;\n            // Pre Windows 11 light theme.\n            case 'rgb(255,255,255)':\n            // Windows 11 light theme.\n            case 'rgb(255,250,239)':\n                return 1 /* HighContrastMode.BLACK_ON_WHITE */;\n        }\n        return 0 /* HighContrastMode.NONE */;\n    }\n    ngOnDestroy() {\n        this._breakpointSubscription.unsubscribe();\n    }\n    /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n    _applyBodyHighContrastModeCssClasses() {\n        if (!this._hasCheckedHighContrastMode && this._platform.isBrowser && this._document.body) {\n            const bodyClasses = this._document.body.classList;\n            bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n            this._hasCheckedHighContrastMode = true;\n            const mode = this.getHighContrastMode();\n            if (mode === 1 /* HighContrastMode.BLACK_ON_WHITE */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS);\n            }\n            else if (mode === 2 /* HighContrastMode.WHITE_ON_BLACK */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: HighContrastModeDetector, deps: [{ token: i1.Platform }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: HighContrastModeDetector, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: HighContrastModeDetector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\nclass A11yModule {\n    constructor(highContrastModeDetector) {\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: A11yModule, deps: [{ token: HighContrastModeDetector }], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: A11yModule, declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus], imports: [ObserversModule], exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: A11yModule, imports: [ObserversModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: A11yModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [ObserversModule],\n                    declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                    exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                }]\n        }], ctorParameters: function () { return [{ type: HighContrastModeDetector }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusTrap, FocusTrapFactory, HighContrastModeDetector, INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS, INPUT_MODALITY_DETECTOR_OPTIONS, InputModalityDetector, InteractivityChecker, IsFocusableConfig, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader };\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57]}